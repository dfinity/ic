// This file is @generated by prost-build.
#[derive(PartialOrd, Ord, Eq, Clone, PartialEq, ::prost::Message)]
pub struct SubnetIdKey {
    #[prost(message, optional, tag = "1")]
    pub subnet_id: ::core::option::Option<::ic_base_types::PrincipalId>,
}
#[derive(PartialOrd, Ord, Eq, Clone, PartialEq, ::prost::Message)]
pub struct SubnetMetricsKey {
    /// Timestamp in nanoseconds that represents
    /// the moment when the node metrics were recorded by the subnet.
    #[prost(uint64, tag = "1")]
    pub timestamp_nanos: u64,
    #[prost(message, optional, tag = "2")]
    pub subnet_id: ::core::option::Option<::ic_base_types::PrincipalId>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SubnetMetricsValue {
    #[prost(message, repeated, tag = "1")]
    pub nodes_metrics: ::prost::alloc::vec::Vec<NodeMetrics>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct NodeMetrics {
    #[prost(message, optional, tag = "1")]
    pub node_id: ::core::option::Option<::ic_base_types::PrincipalId>,
    #[prost(uint64, tag = "2")]
    pub num_blocks_proposed_total: u64,
    #[prost(uint64, tag = "3")]
    pub num_blocks_failed_total: u64,
}
#[derive(PartialOrd, Ord, Eq, Clone, PartialEq, ::prost::Message)]
pub struct RewardableNodesKey {
    #[prost(uint64, tag = "1")]
    pub registry_version: u64,
    #[prost(message, optional, tag = "2")]
    pub provider_id: ::core::option::Option<::ic_base_types::PrincipalId>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct RewardableNodesValue {
    #[prost(message, repeated, tag = "1")]
    pub rewardable_nodes: ::prost::alloc::vec::Vec<RewardableNode>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct RewardableNode {
    #[prost(message, optional, tag = "1")]
    pub node_id: ::core::option::Option<::ic_base_types::PrincipalId>,
    #[prost(string, optional, tag = "2")]
    pub region: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "3")]
    pub dc_id: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(
        enumeration = "::ic_protobuf::registry::node::v1::NodeRewardType",
        optional,
        tag = "4"
    )]
    pub node_reward_type: ::core::option::Option<i32>,
}

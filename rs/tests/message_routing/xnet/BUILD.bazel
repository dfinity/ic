load("//rs/tests:common.bzl", "GRAFANA_RUNTIME_DEPS", "GUESTOS_RUNTIME_DEPS", "MAINNET_REVISION_RUNTIME_DEPS", "XNET_TEST_CANISTER_RUNTIME_DEPS")
load("//rs/tests:system_tests.bzl", "system_test", "system_test_nns")

package(default_visibility = ["//rs:system-tests-pkg"])

system_test_nns(
    name = "xnet_slo_120_subnets_staging_test",
    env = {
        "XNET_TEST_CANISTER_WASM_PATH": "$(rootpath //rs/rust_canisters/xnet_test:xnet-test-canister)",
    },
    extra_head_nns_tags = ["manual"],  # Let's not run this expensive test against the HEAD NNS canisters to save resources.
    flaky = False,
    tags = [
        #TODO: enable k8s when there's enough capacity
        # "k8s",
        "system_test_staging",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    test_timeout = "eternal",
    runtime_deps = GUESTOS_RUNTIME_DEPS + XNET_TEST_CANISTER_RUNTIME_DEPS + GRAFANA_RUNTIME_DEPS,
    deps = [
        "//rs/tests/driver:ic-system-test-driver",
        "//rs/tests/message_routing/xnet/slo_test_lib:xnet_slo_test_lib",
        "@crate_index//:anyhow",
    ],
)

system_test_nns(
    name = "xnet_slo_3_subnets_hotfix_test",
    env = {
        "XNET_TEST_CANISTER_WASM_PATH": "$(rootpath //rs/rust_canisters/xnet_test:xnet-test-canister)",
    },
    extra_head_nns_tags = ["manual"],  # only run this test with the mainnet NNS canisters.
    flaky = False,
    tags = [
        "k8s",
        "system_test_hotfix",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    test_timeout = "long",
    runtime_deps = GUESTOS_RUNTIME_DEPS + XNET_TEST_CANISTER_RUNTIME_DEPS + GRAFANA_RUNTIME_DEPS,
    deps = [
        "//rs/tests/driver:ic-system-test-driver",
        "//rs/tests/message_routing/xnet/slo_test_lib:xnet_slo_test_lib",
        "@crate_index//:anyhow",
    ],
)

system_test_nns(
    name = "xnet_slo_3_subnets_test",
    env = {
        "XNET_TEST_CANISTER_WASM_PATH": "$(rootpath //rs/rust_canisters/xnet_test:xnet-test-canister)",
    },
    extra_head_nns_tags = ["manual"],  # only run this test with the mainnet NNS canisters.
    flaky = False,
    tags = [
        "k8s",
        "system_test_nightly",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    test_timeout = "long",
    runtime_deps = GUESTOS_RUNTIME_DEPS + XNET_TEST_CANISTER_RUNTIME_DEPS + GRAFANA_RUNTIME_DEPS,
    deps = [
        "//rs/tests/driver:ic-system-test-driver",
        "//rs/tests/message_routing/xnet/slo_test_lib:xnet_slo_test_lib",
        "@crate_index//:anyhow",
    ],
)

system_test_nns(
    name = "xnet_slo_29_subnets_test",
    env = {
        "XNET_TEST_CANISTER_WASM_PATH": "$(rootpath //rs/rust_canisters/xnet_test:xnet-test-canister)",
    },
    extra_head_nns_tags = ["manual"],  # only run this test with the mainnet NNS canisters.
    flaky = False,
    tags = [
        #TODO: enable k8s when there's enough capacity
        # "k8s",
        "system_test_nightly",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    test_timeout = "eternal",
    runtime_deps = GUESTOS_RUNTIME_DEPS + XNET_TEST_CANISTER_RUNTIME_DEPS + GRAFANA_RUNTIME_DEPS,
    deps = [
        "//rs/tests/driver:ic-system-test-driver",
        "//rs/tests/message_routing/xnet/slo_test_lib:xnet_slo_test_lib",
        "@crate_index//:anyhow",
    ],
)

system_test(
    name = "xnet_malicious_slices",
    env = {
        "XNET_TEST_CANISTER_WASM_PATH": "$(rootpath //rs/rust_canisters/xnet_test:xnet-test-canister)",
    },
    flaky = False,
    malicious = True,
    tags = [
        "system_test_nightly",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    test_timeout = "long",
    runtime_deps = ["//ic-os/components:hostos-scripts/build-bootstrap-config-image.sh"] + GRAFANA_RUNTIME_DEPS + XNET_TEST_CANISTER_RUNTIME_DEPS,
    deps = [
        "//rs/registry/subnet_type",
        "//rs/rust_canisters/canister_test",
        "//rs/tests/driver:ic-system-test-driver",
        "//rs/tests/message_routing/common:systest_message_routing_common",
        "//rs/types/types",
        "@crate_index//:anyhow",
        "@crate_index//:slog",
        "@crate_index//:tokio",
    ],
)

system_test_nns(
    name = "xnet_compatibility",
    env = {
        "XNET_TEST_CANISTER_WASM_PATH": "$(rootpath //rs/rust_canisters/xnet_test:xnet-test-canister)",
    },
    extra_head_nns_tags = ["manual"],  # only run this test with the mainnet NNS canisters.
    tags = [
        "long_test",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    test_timeout = "long",
    uses_guestos_dev_test = True,
    runtime_deps =
        GUESTOS_RUNTIME_DEPS +
        XNET_TEST_CANISTER_RUNTIME_DEPS +
        GRAFANA_RUNTIME_DEPS +
        MAINNET_REVISION_RUNTIME_DEPS,
    deps = [
        "//rs/registry/subnet_type",
        "//rs/tests/consensus/utils",
        "//rs/tests/driver:ic-system-test-driver",
        "//rs/tests/message_routing/xnet/slo_test_lib:xnet_slo_test_lib",
        "//rs/types/types",
        "@crate_index//:anyhow",
        "@crate_index//:slog",
        "@crate_index//:tokio",
    ],
)

load("@io_bazel_rules_docker//container:container.bzl", "container_image")
load("@io_bazel_rules_docker//contrib:passwd.bzl", "passwd_entry", "passwd_file")
load("@rules_pkg//:pkg.bzl", "pkg_tar")
load("@rules_rust//rust:defs.bzl", "rust_binary")

package(default_visibility = ["//visibility:public"])

DEPENDENCIES = [
    "@crate_index//:axum",
    "@crate_index//:axum_server_0_6_0",
    "@crate_index//:clap_3_2_25",
    "@crate_index//:serde_json",
    "@crate_index//:tokio",
]

rust_binary(
    name = "httpbin",
    srcs = ["src/main.rs"],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    deps = DEPENDENCIES,
)

# httpbin docker image

## Create a layer with a httpbin user

passwd_entry(
    name = "root_user",
    uid = 0,
    username = "root",
)

passwd_entry(
    name = "httpbin_user",
    home = "/home/httpbin",
    info = "httpbin user",
    uid = 1002,
    username = "httpbin",
)

passwd_file(
    name = "passwd",
    entries = [
        ":httpbin_user",
        ":root_user",
    ],
)

pkg_tar(
    name = "passwd_tar",
    srcs = [":passwd"],
    mode = "0644",
    package_dir = "etc",
)

## An intermediate image with the passwd file and empty directories.

container_image(
    name = "httpbin_image_base",
    base = "@ubuntu_test_runtime//image",
    tags = ["manual"],
    tars = [
        ":passwd_tar",
    ],
)

## The final image we can publish.

container_image(
    name = "httpbin_image",
    base = ":httpbin_image_base",
    directory = "/home/httpbin",
    entrypoint = [
        "/home/httpbin/httpbin",
    ],
    files = [
        ":httpbin",
    ],
    tags = ["manual"],
    user = "httpbin",
    workdir = "/home/httpbin",
)

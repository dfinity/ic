load("@rules_rust//rust:defs.bzl", "rust_library")
load("//rs/tests:common.bzl", "COUNTER_CANISTER_RUNTIME_DEPS", "GRAFANA_RUNTIME_DEPS", "GUESTOS_RUNTIME_DEPS", "MACRO_DEPENDENCIES", "MAINNET_REVISION_RUNTIME_DEPS", "UNIVERSAL_VM_RUNTIME_DEPS")
load("//rs/tests:system_tests.bzl", "system_test", "system_test_nns")

package(default_visibility = ["//rs:system-tests-pkg"])

BACKUP_RUNTIME_DEPS = ["//rs/tests:backup/binaries"]

system_test_nns(
    name = "backup_manager_test",
    flaky = True,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "experimental_system_test_colocation",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps =
        GUESTOS_RUNTIME_DEPS +
        UNIVERSAL_VM_RUNTIME_DEPS +
        MAINNET_REVISION_RUNTIME_DEPS +
        BACKUP_RUNTIME_DEPS,
    deps = [
        # Keep sorted.
        "//rs/backup",
        "//rs/recovery",
        "//rs/registry/subnet_type",
        "//rs/tests/consensus/tecdsa/utils",
        "//rs/tests/consensus/utils",
        "//rs/tests/driver:ic-system-test-driver",
        "//rs/types/base_types",
        "//rs/types/management_canister_types",
        "//rs/types/types",
        "@crate_index//:anyhow",
        "@crate_index//:hex",
        "@crate_index//:serde_json",
        "@crate_index//:slog",
        "@crate_index//:tempfile",
    ],
)

rust_library(
    name = "catch_up_test_common",
    testonly = True,
    srcs = ["catch_up_test_common/src/lib.rs"],
    crate_name = "ic_consensus_system_test_catch_up_test_common",
    deps = [
        # Keep sorted.
        "//rs/tests/consensus/utils",
        "//rs/tests/driver:ic-system-test-driver",
        "//rs/types/types",
        "@crate_index//:anyhow",
        "@crate_index//:futures",
        "@crate_index//:slog",
    ],
)

system_test(
    name = "catch_up_loop_prevention_test",
    flaky = True,
    malicious = True,
    proc_macro_deps = MACRO_DEPENDENCIES,
    # TODO(NET-1683): Adjust test for faster p2p
    tags = [
        "k8s",
        "system_test_hourly",
        "system_test_nightly",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    test_timeout = "eternal",
    uses_guestos_dev = True,
    runtime_deps = ["//ic-os/components:hostos-scripts/build-bootstrap-config-image.sh"] + GRAFANA_RUNTIME_DEPS,
    deps = [
        # Keep sorted.
        ":catch_up_test_common",
        "//rs/registry/subnet_type",
        "//rs/tests/driver:ic-system-test-driver",
        "//rs/types/types",
        "@crate_index//:anyhow",
    ],
)

system_test(
    name = "catch_up_possible_test",
    malicious = True,
    proc_macro_deps = MACRO_DEPENDENCIES,
    # TODO(NET-1683): Adjust test for faster p2p
    tags = [
        "k8s",
        "system_test_hourly",
        "system_test_nightly",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    uses_guestos_dev = True,
    runtime_deps = ["//ic-os/components:hostos-scripts/build-bootstrap-config-image.sh"] + GRAFANA_RUNTIME_DEPS,
    deps = [
        # Keep sorted.
        ":catch_up_test_common",
        "//rs/registry/subnet_type",
        "//rs/tests/driver:ic-system-test-driver",
        "//rs/types/types",
        "@crate_index//:anyhow",
    ],
)

system_test(
    name = "dual_workload_test",
    flaky = True,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "k8s",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = GUESTOS_RUNTIME_DEPS,
    deps = [
        # Keep sorted.
        "//rs/registry/subnet_type",
        "//rs/tests/driver:ic-system-test-driver",
        "//rs/types/base_types",
        "//rs/universal_canister/lib",
        "@crate_index//:anyhow",
        "@crate_index//:futures",
        "@crate_index//:ic-agent",
        "@crate_index//:slog",
        "@crate_index//:tokio",
    ],
)

rust_library(
    name = "liveness_test_common",
    testonly = True,
    srcs = ["liveness_test_common/src/lib.rs"],
    crate_name = "ic_consensus_system_test_liveness_test_common",
    deps = [
        # Keep sorted.
        "//rs/registry/subnet_type",
        "//rs/tests/driver:ic-system-test-driver",
        "//rs/types/base_types",
        "@crate_index//:ic-agent",
        "@crate_index//:rand",
        "@crate_index//:rand_chacha",
        "@crate_index//:slog",
        "@crate_index//:tokio",
    ],
)

system_test(
    name = "liveness_with_equivocation_test",
    flaky = True,
    malicious = True,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "k8s",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    uses_guestos_dev = True,
    uses_guestos_dev_test = True,
    runtime_deps = ["//ic-os/components:hostos-scripts/build-bootstrap-config-image.sh"],
    deps = [
        # Keep sorted.
        ":liveness_test_common",
        "//rs/registry/subnet_type",
        "//rs/tests/driver:ic-system-test-driver",
        "//rs/types/types",
        "@crate_index//:anyhow",
    ],
)

system_test(
    name = "max_ingress_payload_size_test",
    flaky = True,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "k8s",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = GUESTOS_RUNTIME_DEPS,
    deps = [
        # Keep sorted.
        "//rs/registry/subnet_type",
        "//rs/tests/driver:ic-system-test-driver",
        "//rs/types/base_types",
        "//rs/universal_canister/lib",
        "@crate_index//:anyhow",
        "@crate_index//:futures",
        "@crate_index//:ic-agent",
        "@crate_index//:slog",
        "@crate_index//:tokio",
    ],
)

system_test(
    name = "max_xnet_payload_size_test",
    flaky = True,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "k8s",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = GUESTOS_RUNTIME_DEPS,
    deps = [
        # Keep sorted.
        "//rs/registry/subnet_type",
        "//rs/tests/driver:ic-system-test-driver",
        "//rs/types/base_types",
        "//rs/universal_canister/lib",
        "@crate_index//:anyhow",
        "@crate_index//:futures",
        "@crate_index//:ic-agent",
        "@crate_index//:slog",
        "@crate_index//:tokio",
    ],
)

system_test_nns(
    name = "node_graceful_leaving_test",
    flaky = True,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "k8s",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = GUESTOS_RUNTIME_DEPS,
    deps = [
        # Keep sorted.
        "//rs/registry/subnet_type",
        "//rs/tests/driver:ic-system-test-driver",
        "//rs/types/base_types",
        "//rs/types/types",
        "@crate_index//:anyhow",
        "@crate_index//:rand",
        "@crate_index//:rand_chacha",
        "@crate_index//:slog",
    ],
)

system_test_nns(
    name = "subnet_splitting_test",
    flaky = True,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "experimental_system_test_colocation",
        "k8s",
        "subnet_splitting",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps =
        GUESTOS_RUNTIME_DEPS +
        MAINNET_REVISION_RUNTIME_DEPS + [
            "//rs/tests:recovery/binaries",
        ],
    deps = [
        "//rs/recovery",
        "//rs/recovery/subnet_splitting",
        "//rs/registry/routing_table",
        "//rs/registry/subnet_type",
        "//rs/tests/consensus/utils",
        "//rs/tests/driver:ic-system-test-driver",
        "//rs/types/base_types",
        "//rs/types/types",
        "@crate_index//:anyhow",
        "@crate_index//:candid",
        "@crate_index//:slog",
    ],
)

system_test(
    name = "replica_determinism_test",
    flaky = True,
    malicious = True,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "k8s",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    uses_guestos_dev = True,
    uses_guestos_dev_test = True,
    runtime_deps = ["//ic-os/components:hostos-scripts/build-bootstrap-config-image.sh"],
    deps = [
        # Keep sorted.
        "//rs/registry/subnet_type",
        "//rs/tests/driver:ic-system-test-driver",
        "//rs/types/types",
        "//rs/universal_canister/lib",
        "@crate_index//:anyhow",
        "@crate_index//:slog",
        "@crate_index//:tokio",
    ],
)

system_test(
    name = "request_auth_malicious_replica_test",
    flaky = True,
    malicious = True,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "k8s",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    uses_guestos_dev = True,
    uses_guestos_dev_test = True,
    runtime_deps = ["//ic-os/components:hostos-scripts/build-bootstrap-config-image.sh"],
    deps = [
        # Keep sorted.
        "//rs/crypto/test_utils/reproducible_rng",
        "//rs/registry/subnet_type",
        "//rs/tests/driver:ic-system-test-driver",
        "//rs/types/types",
        "//rs/universal_canister/lib",
        "@crate_index//:anyhow",
        "@crate_index//:ic-agent",
        "@crate_index//:k256",
        "@crate_index//:rand",
        "@crate_index//:reqwest",
        "@crate_index//:serde_cbor",
        "@crate_index//:slog",
        "@crate_index//:tokio",
        "@crate_index//:url",
    ],
)

system_test(
    name = "safety_test",
    flaky = True,
    malicious = True,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "k8s",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    uses_guestos_dev = True,
    uses_guestos_dev_test = True,
    runtime_deps = ["//ic-os/components:hostos-scripts/build-bootstrap-config-image.sh"],
    deps = [
        # Keep sorted.
        ":liveness_test_common",
        "//rs/registry/subnet_type",
        "//rs/tests/driver:ic-system-test-driver",
        "//rs/types/types",
        "@crate_index//:anyhow",
    ],
)

system_test_nns(
    name = "consensus_performance",
    additional_colocate_tags = [
        "system_test_benchmark",
    ],
    colocated_test_driver_vm_required_host_features = ["performance"],
    colocated_test_driver_vm_resources = {
        "vcpus": 64,
        "memory_kibibytes": 512142680,
        "boot_image_minimal_size_gibibytes": 500,
    },
    crate_features = select({
        "//bazel:upload_perf_systest_results_enabled": ["upload_perf_systest_results"],
        "//conditions:default": [],
    }),
    extra_head_nns_tags = [],
    flaky = False,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "experimental_system_test_colocation",
        "manual",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    test_timeout = "eternal",
    runtime_deps = GUESTOS_RUNTIME_DEPS + GRAFANA_RUNTIME_DEPS + COUNTER_CANISTER_RUNTIME_DEPS,
    deps = [
        # Keep sorted.
        "//rs/registry/subnet_type",
        "//rs/tests/consensus/utils",
        "//rs/tests/driver:ic-system-test-driver",
        "//rs/types/types",
        "@crate_index//:anyhow",
        "@crate_index//:reqwest",
        "@crate_index//:serde_json",
        "@crate_index//:slog",
        "@crate_index//:tokio",
    ],
)

system_test_nns(
    name = "adding_nodes_to_subnet_test",
    flaky = True,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "k8s",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = GUESTOS_RUNTIME_DEPS,
    deps = [
        # Keep sorted.
        "//rs/nns/constants",
        "//rs/nns/governance/api",
        "//rs/recovery",
        "//rs/registry/canister",
        "//rs/registry/subnet_type",
        "//rs/rust_canisters/canister_test",
        "//rs/tests/consensus/utils",
        "//rs/tests/driver:ic-system-test-driver",
        "//rs/types/base_types",
        "//rs/types/types",
        "@crate_index//:anyhow",
        "@crate_index//:candid",
        "@crate_index//:slog",
    ],
)

load("//rs/tests:common.bzl", "COUNTER_CANISTER_RUNTIME_DEPS", "DEPENDENCIES", "GRAFANA_RUNTIME_DEPS", "GUESTOS_RUNTIME_DEPS", "MACRO_DEPENDENCIES", "MAINNET_REVISION_RUNTIME_DEPS", "NNS_CANISTER_RUNTIME_DEPS", "UNIVERSAL_VM_RUNTIME_DEPS")
load("//rs/tests:system_tests.bzl", "system_test")

package(default_visibility = ["//visibility:public"])

BACKUP_RUNTIME_DEPS = ["//rs/tests:backup/binaries"]

system_test(
    name = "backup_manager_test",
    flaky = True,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "experimental_system_test_colocation",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps =
        GUESTOS_RUNTIME_DEPS +
        UNIVERSAL_VM_RUNTIME_DEPS +
        NNS_CANISTER_RUNTIME_DEPS +
        MAINNET_REVISION_RUNTIME_DEPS +
        BACKUP_RUNTIME_DEPS,
    deps = DEPENDENCIES + [
        "//rs/backup",
        "//rs/tests",
    ],
)

system_test(
    name = "catch_up_loop_prevention_test",
    flaky = True,
    malicious = True,
    proc_macro_deps = MACRO_DEPENDENCIES,
    # TODO(NET-1683): Adjust test for faster p2p
    tags = [
        "system_test_hourly",
        "system_test_nightly",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    test_timeout = "eternal",
    uses_guestos_dev = True,
    runtime_deps = ["//ic-os:scripts/build-bootstrap-config-image.sh"] + GRAFANA_RUNTIME_DEPS,
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test(
    name = "catch_up_possible_test",
    malicious = True,
    proc_macro_deps = MACRO_DEPENDENCIES,
    # TODO(NET-1683): Adjust test for faster p2p
    tags = [
        "system_test_hourly",
        "system_test_nightly",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    uses_guestos_dev = True,
    runtime_deps = ["//ic-os:scripts/build-bootstrap-config-image.sh"] + GRAFANA_RUNTIME_DEPS,
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test(
    name = "cow_safety_test",
    flaky = True,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "k8s",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = GUESTOS_RUNTIME_DEPS,
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test(
    name = "dual_workload_test",
    flaky = True,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "k8s",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = GUESTOS_RUNTIME_DEPS,
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test(
    name = "liveness_with_equivocation_test",
    flaky = True,
    malicious = True,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "k8s",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    uses_guestos_dev = True,
    uses_guestos_dev_test = True,
    runtime_deps = ["//ic-os:scripts/build-bootstrap-config-image.sh"],
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test(
    name = "max_ingress_payload_size_test",
    flaky = True,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "k8s",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = GUESTOS_RUNTIME_DEPS,
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test(
    name = "max_xnet_payload_size_test",
    flaky = True,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "k8s",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = GUESTOS_RUNTIME_DEPS,
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test(
    name = "node_graceful_leaving_test",
    flaky = True,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "k8s",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = GUESTOS_RUNTIME_DEPS + NNS_CANISTER_RUNTIME_DEPS,
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test(
    name = "subnet_splitting_test",
    flaky = True,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "experimental_system_test_colocation",
        "k8s",
        "subnet_splitting",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps =
        GUESTOS_RUNTIME_DEPS +
        NNS_CANISTER_RUNTIME_DEPS +
        MAINNET_REVISION_RUNTIME_DEPS + [
            "//rs/tests:recovery/binaries",
        ],
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test(
    name = "replica_determinism_test",
    flaky = True,
    malicious = True,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "k8s",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    uses_guestos_dev = True,
    uses_guestos_dev_test = True,
    runtime_deps = ["//ic-os:scripts/build-bootstrap-config-image.sh"],
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test(
    name = "request_auth_malicious_replica_test",
    flaky = True,
    malicious = True,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "k8s",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    uses_guestos_dev = True,
    uses_guestos_dev_test = True,
    runtime_deps = ["//ic-os:scripts/build-bootstrap-config-image.sh"],
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test(
    name = "safety_test",
    flaky = True,
    malicious = True,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "k8s",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    uses_guestos_dev = True,
    uses_guestos_dev_test = True,
    runtime_deps = ["//ic-os:scripts/build-bootstrap-config-image.sh"],
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test(
    name = "consensus_performance",
    colocated_test_driver_vm_required_host_features = ["performance"],
    colocated_test_driver_vm_resources = {
        "vcpus": 64,
        "memory_kibibytes": 512142680,
        "boot_image_minimal_size_gibibytes": 500,
    },
    flaky = False,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "experimental_system_test_colocation",
        "manual",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    test_timeout = "eternal",
    runtime_deps = GUESTOS_RUNTIME_DEPS + NNS_CANISTER_RUNTIME_DEPS + GRAFANA_RUNTIME_DEPS + COUNTER_CANISTER_RUNTIME_DEPS,
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test(
    name = "throughput_with_large_messages",
    colocated_test_driver_vm_required_host_features = ["performance"],
    colocated_test_driver_vm_resources = {
        "vcpus": 64,
        "memory_kibibytes": 512142680,
        "boot_image_minimal_size_gibibytes": 500,
    },
    flaky = False,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "experimental_system_test_colocation",
        "manual",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    test_timeout = "eternal",
    runtime_deps = GUESTOS_RUNTIME_DEPS + NNS_CANISTER_RUNTIME_DEPS + GRAFANA_RUNTIME_DEPS + COUNTER_CANISTER_RUNTIME_DEPS,
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test(
    name = "throughput_with_small_messages",
    colocated_test_driver_vm_required_host_features = ["performance"],
    colocated_test_driver_vm_resources = {
        "vcpus": 64,
        "memory_kibibytes": 512142680,
        "boot_image_minimal_size_gibibytes": 500,
    },
    flaky = False,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "experimental_system_test_colocation",
        "manual",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    test_timeout = "eternal",
    runtime_deps = GUESTOS_RUNTIME_DEPS + NNS_CANISTER_RUNTIME_DEPS + GRAFANA_RUNTIME_DEPS + COUNTER_CANISTER_RUNTIME_DEPS,
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test(
    name = "adding_nodes_to_subnet_test",
    flaky = True,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "k8s",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = GUESTOS_RUNTIME_DEPS + NNS_CANISTER_RUNTIME_DEPS,
    deps = DEPENDENCIES + ["//rs/tests"],
)

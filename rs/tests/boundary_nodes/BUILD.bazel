load("//rs/tests:common.bzl", "BOUNDARY_NODE_GUESTOS_RUNTIME_DEPS", "COUNTER_CANISTER_RUNTIME_DEPS", "CUSTOM_DOMAINS_RUNTIME_DEPS", "DEPENDENCIES", "GRAFANA_RUNTIME_DEPS", "GUESTOS_RUNTIME_DEPS", "MACRO_DEPENDENCIES", "UNIVERSAL_VM_RUNTIME_DEPS")
load("//rs/tests:system_tests.bzl", "system_test_nns")

package(default_visibility = ["//rs:system-tests-pkg"])

CERTIFICATE_ORCHESTRATOR_RUNTIME_DEPS = ["//rs/boundary_node/certificate_issuance/certificate_orchestrator:certificate_orchestrator"]

TEST_CANISTERS_RUNTIME_DEPS = [
    # Keep sorted.
    "//rs/tests/test_canisters/http_counter",
    "//rs/tests/test_canisters/kv_store",
    "@asset_canister//file",
]

system_test_nns(
    name = "bn_integration_test",
    env = {
        "KV_STORE_WASM_PATH": "$(rootpath //rs/tests/test_canisters/kv_store)",
        "HTTP_COUNTER_WASM_PATH": "$(rootpath //rs/tests/test_canisters/http_counter)",
    },
    flaky = True,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "k8s",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = BOUNDARY_NODE_GUESTOS_RUNTIME_DEPS + GUESTOS_RUNTIME_DEPS + TEST_CANISTERS_RUNTIME_DEPS + GRAFANA_RUNTIME_DEPS,
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test_nns(
    name = "bn_integration_on_playnet_test",
    env = {
        "KV_STORE_WASM_PATH": "$(rootpath //rs/tests/test_canisters/kv_store)",
        "HTTP_COUNTER_WASM_PATH": "$(rootpath //rs/tests/test_canisters/http_counter)",
    },
    flaky = True,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "system_test_hourly",
        "system_test_nightly",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = BOUNDARY_NODE_GUESTOS_RUNTIME_DEPS + GUESTOS_RUNTIME_DEPS + TEST_CANISTERS_RUNTIME_DEPS + GRAFANA_RUNTIME_DEPS,
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test_nns(
    name = "bn_update_workload_test",
    flaky = True,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "manual",  # TODO(BOUN-1039): remove "manual" and add back "system_test_hourly" and "system_test_nightly" when the test is not flaky anymore
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    test_timeout = "long",
    runtime_deps = BOUNDARY_NODE_GUESTOS_RUNTIME_DEPS + GUESTOS_RUNTIME_DEPS + GRAFANA_RUNTIME_DEPS + COUNTER_CANISTER_RUNTIME_DEPS,
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test_nns(
    name = "certificate_orchestrator_test",
    env = {
        "CERTIFICATE_ORCHESTRATOR_WASM_PATH": "$(rootpath //rs/boundary_node/certificate_issuance/certificate_orchestrator:certificate_orchestrator)",
    },
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "k8s",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = BOUNDARY_NODE_GUESTOS_RUNTIME_DEPS +
                   GUESTOS_RUNTIME_DEPS +
                   UNIVERSAL_VM_RUNTIME_DEPS +
                   CERTIFICATE_ORCHESTRATOR_RUNTIME_DEPS,
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test_nns(
    name = "bn_performance_test",
    colocated_test_driver_vm_required_host_features = ["performance"],
    colocated_test_driver_vm_resources = {
        "vcpus": 64,
        "memory_kibibytes": 512142680,
        "boot_image_minimal_size_gibibytes": 500,
    },
    flaky = False,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = ["manual"],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = BOUNDARY_NODE_GUESTOS_RUNTIME_DEPS + GUESTOS_RUNTIME_DEPS + GRAFANA_RUNTIME_DEPS + COUNTER_CANISTER_RUNTIME_DEPS,
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test_nns(
    name = "mainnet_bn_performance_test",
    colocated_test_driver_vm_required_host_features = ["performance"],
    colocated_test_driver_vm_resources = {
        "vcpus": 64,
        "memory_kibibytes": 512142680,
        "boot_image_minimal_size_gibibytes": 500,
    },
    env_inherit = ["BOUNDARY_NODE_IPV6"],
    flaky = False,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "k8s",
        "manual",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = BOUNDARY_NODE_GUESTOS_RUNTIME_DEPS + GUESTOS_RUNTIME_DEPS + GRAFANA_RUNTIME_DEPS + COUNTER_CANISTER_RUNTIME_DEPS,
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test_nns(
    name = "mainnet_bn_icx_proxy_performance_test",
    colocated_test_driver_vm_required_host_features = ["performance"],
    colocated_test_driver_vm_resources = {
        "vcpus": 64,
        "memory_kibibytes": 512142680,
        "boot_image_minimal_size_gibibytes": 500,
    },
    env_inherit = ["BOUNDARY_NODE_IPV6"],
    flaky = False,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "k8s",
        "manual",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = BOUNDARY_NODE_GUESTOS_RUNTIME_DEPS + GUESTOS_RUNTIME_DEPS + GRAFANA_RUNTIME_DEPS + COUNTER_CANISTER_RUNTIME_DEPS,
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test_nns(
    name = "custom_domains_integration_test",
    env = {
        "CERTIFICATE_ORCHESTRATOR_WASM_PATH": "$(rootpath //rs/boundary_node/certificate_issuance/certificate_orchestrator:certificate_orchestrator)",
    },
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "manual",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = BOUNDARY_NODE_GUESTOS_RUNTIME_DEPS +
                   GUESTOS_RUNTIME_DEPS +
                   UNIVERSAL_VM_RUNTIME_DEPS +
                   CERTIFICATE_ORCHESTRATOR_RUNTIME_DEPS +
                   CUSTOM_DOMAINS_RUNTIME_DEPS,
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test_nns(
    name = "api_bn_decentralization_test",
    flaky = True,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "k8s",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = BOUNDARY_NODE_GUESTOS_RUNTIME_DEPS + GUESTOS_RUNTIME_DEPS + GRAFANA_RUNTIME_DEPS,
    deps = DEPENDENCIES + ["//rs/tests"],
)

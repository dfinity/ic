load("//rs/tests:common.bzl", "BOUNDARY_NODE_GUESTOS_RUNTIME_DEPS", "GUESTOS_RUNTIME_DEPS", "UNIVERSAL_VM_RUNTIME_DEPS")
load("//rs/tests:system_tests.bzl", "oci_tar", "system_test_nns", "uvm_config_image")

package(default_visibility = ["//rs:system-tests-pkg"])

CERTIFICATE_ORCHESTRATOR_RUNTIME_DEPS = ["//rs/boundary_node/certificate_issuance/certificate_orchestrator:certificate_orchestrator"]

oci_tar(
    name = "coredns.tar",
    image = "@coredns",
    repo_tags = ["coredns:latest"],
)

oci_tar(
    name = "pebble.tar",
    image = "@pebble",
    repo_tags = ["pebble:latest"],
)

oci_tar(
    name = "python3.tar",
    image = "@python3",
    repo_tags = ["python3:latest"],
)

oci_tar(
    name = "openssl.tar",
    image = "@alpine_openssl",
    repo_tags = ["openssl:latest"],
)

uvm_config_image(
    name = "custom_domains_uvm_config_image",
    srcs = [
        # Docker images
        ":coredns_tar",
        ":openssl_tar",
        ":pebble_tar",
        ":python3_tar",

        # Assets
        ":activate.sh",
        ":pebble_cache.py",
        ":cloudflare_api.py",
    ],
    remap_paths = {"activate.sh": "activate"},
    tags = ["manual"],  # this target will be built if required as a dependency of another target
)

# This system test is meant for manual testing of the boundary node custom domain offering.
# It runs through all the steps from registering a custom domain, to accessing, to updating, and
# finally removing it. This test is not meant to run as part of a regular pipeline.
system_test_nns(
    name = "custom_domains_integration_test",
    srcs = [
        "setup.rs",
    ],
    crate_root = "custom_domains_integration_test.rs",
    env = {
        "CERTIFICATE_ORCHESTRATOR_WASM_PATH": "$(rootpath //rs/boundary_node/certificate_issuance/certificate_orchestrator:certificate_orchestrator)",
        "CUSTOM_DOMAIN_UVM_CONFIG_PATH": "$(rootpath :custom_domains_uvm_config_image)",
        "ASSET_CANISTER_WASM_PATH": "$(rootpath @asset_canister//file)",
    },
    proc_macro_deps = [
        "@crate_index//:indoc",
    ],
    tags = [
        "manual",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = BOUNDARY_NODE_GUESTOS_RUNTIME_DEPS +
                   GUESTOS_RUNTIME_DEPS +
                   UNIVERSAL_VM_RUNTIME_DEPS +
                   CERTIFICATE_ORCHESTRATOR_RUNTIME_DEPS + [
        ":custom_domains_uvm_config_image",
        "@asset_canister//file",
    ],
    deps = [
        # Keep sorted.
        "//rs/boundary_node/certificate_issuance/certificate_orchestrator_interface",
        "//rs/interfaces/registry",
        "//rs/protobuf",
        "//rs/registry/keys",
        "//rs/registry/nns_data_provider",
        "//rs/registry/routing_table",
        "//rs/registry/subnet_type",
        "//rs/tests/driver:ic-system-test-driver",
        "@crate_index//:anyhow",
        "@crate_index//:candid",
        "@crate_index//:chacha20poly1305",
        "@crate_index//:ic-agent",
        "@crate_index//:k256",
        "@crate_index//:pem",
        "@crate_index//:rand",
        "@crate_index//:rand_chacha",
        "@crate_index//:reqwest",
        "@crate_index//:serde_json",
        "@crate_index//:slog",
        "@crate_index//:tokio",
    ],
)

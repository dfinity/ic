[package]
name = "ic-system-test-driver"
version.workspace = true
authors.workspace = true
edition.workspace = true
description.workspace = true
documentation.workspace = true

[dependencies]
anyhow = { workspace = true }
assert_matches = { workspace = true }
async-trait = { workspace = true }
backon = "0.4.1"
base64 = { workspace = true }
bincode = { workspace = true }
candid = { workspace = true }
canister-test = { path = "../../rust_canisters/canister_test" }
chrono = { workspace = true }
clap = { version = "3.2.25", features = ["derive"] }
crossbeam-channel = { workspace = true }
cycles-minting-canister = { path = "../../nns/cmc" }
deterministic_ips = { path = "../../ic_os/deterministic_ips" }
dfn_candid = { path = "../../rust_canisters/dfn_candid" }
dfn_protobuf = { path = "../../rust_canisters/dfn_protobuf" }
ed25519-dalek = { workspace = true }
futures = { workspace = true }
hex = { workspace = true }
http = { workspace = true }
humantime = "2.0"
humantime-serde = { workspace = true }
hyper = { workspace = true }
ic-agent = { workspace = true }
ic-artifact-pool = { path = "../../artifact_pool" }
ic-base-types = { path = "../../types/base_types" }
ic-btc-interface = { workspace = true }
ic-canister-client = { path = "../../canister_client" }
ic-canister-client-sender = { path = "../../canister_client/sender" }
ic-cdk = { workspace = true }
ic-certification = { path = "../../certification" }
ic-config = { path = "../../config" }
ic-limits = { path = "../../limits" }
ic-crypto-sha2 = { path = "../../crypto/sha2" }
ic-crypto-test-utils-reproducible-rng = { path = "../../crypto/test_utils/reproducible_rng" }
ic-crypto-tree-hash = { path = "../../crypto/tree_hash" }
ic-crypto-utils-threshold-sig-der = { path = "../../crypto/utils/threshold_sig_der" }
ic-cycles-account-manager = { path = "../../cycles_account_manager" }
ic-icrc1 = { path = "../../rosetta-api/icrc1" }
ic-icrc1-index-ng = { path = "../../rosetta-api/icrc1/index-ng" }
ic-icrc1-ledger = { path = "../../rosetta-api/icrc1/ledger" }
ic-interfaces = { path = "../../interfaces" }
ic-interfaces-registry = { path = "../../interfaces/registry" }
ic-ledger-core = { path = "../../rosetta-api/ledger_core" }
ic-management-canister-types = { path = "../../types/management_canister_types" }
ic-message = { path = "../test_canisters/message" }
ic-nervous-system-clients = { path = "../../nervous_system/clients" }
ic-nervous-system-common = { path = "../../nervous_system/common" }
ic-nervous-system-common-test-keys = { path = "../../nervous_system/common/test_keys" }
ic-nervous-system-proto = { path = "../../nervous_system/proto" }
ic-nervous-system-root = { path = "../../nervous_system/root" }
ic-nns-common = { path = "../../nns/common" }
ic-nns-constants = { path = "../../nns/constants" }
ic-nns-governance-api = { path = "../../nns/governance/api" }
ic-nns-gtc = { path = "../../nns/gtc" }
ic-nns-handler-root = { path = "../../nns/handlers/root/impl" }
ic-nns-init = { path = "../../nns/init" }
ic-nns-test-utils = { path = "../../nns/test_utils" }
ic-prep = { path = "../../prep" }
ic-protobuf = { path = "../../protobuf" }
ic-registry-canister-api = { path = "../../registry/canister/api" }
ic-regedit = { path = "../../registry/regedit" }
ic-registry-client = { path = "../../registry/client" }
ic-registry-client-helpers = { path = "../../registry/helpers" }
ic-registry-keys = { path = "../../registry/keys" }
ic-registry-local-registry = { path = "../../registry/local_registry" }
ic-registry-local-store = { path = "../../registry/local_store" }
ic-registry-nns-data-provider = { path = "../../registry/nns_data_provider" }
ic-registry-provisional-whitelist = { path = "../../registry/provisional_whitelist" }
ic-registry-routing-table = { path = "../../registry/routing_table" }
ic-registry-subnet-features = { path = "../../registry/subnet_features" }
ic-registry-subnet-type = { path = "../../registry/subnet_type" }
ic-registry-transport = { path = "../../registry/transport" }
ic-rosetta-api = { path = "../../rosetta-api" }
ic-sns-governance = { path = "../../sns/governance" }
ic-sns-init = { path = "../../sns/init" }
ic-sns-root = { path = "../../sns/root" }
ic-sns-swap = { path = "../../sns/swap" }
ic-sns-wasm = { path = "../../nns/sns-wasm" }
ic-sys = { path = "../../sys" }
ic-test-identity = { path = "../../test_utilities/identity" }
ic-test-utilities = { path = "../../test_utilities" }
ic-test-utilities-time = { path = "../../test_utilities/time" }
ic-test-utilities-types = { path = "../../test_utilities/types" }
ic-types = { path = "../../types/types" }
ic-types-test-utils = { path = "../../types/types_test_utils" }
ic-universal-canister = { path = "../../universal_canister/lib" }
ic-utils = { workspace = true }
ic-wasm-types = { path = "../../types/wasm_types" }
icp-ledger = { path = "../../rosetta-api/icp_ledger" }
icrc-ledger-types = { path = "../../../packages/icrc-ledger-types" }
itertools = { workspace = true }
json5 = "0.4.1"
k256 = { workspace = true }
k8s-openapi = { version = "0.22.0", features = ["v1_24"] }
kube = { workspace = true }
lazy_static = { workspace = true }
leb128 = "0.2.5"
lifeline = { path = "../../nns/handlers/lifeline/impl" }
maplit = "1.0.2"
nix = { workspace = true }
num_cpus = "1.13.1"
on_wire = { path = "../../rust_canisters/on_wire" }
once_cell = "1.18.0"
pem = "1.0.1"
phantom_newtype = { path = "../../phantom_newtype" }
proptest = { workspace = true }
prost = { workspace = true }
rand = { workspace = true }
rand_chacha = { workspace = true }
rayon = { workspace = true }
rcgen = { workspace = true }
regex = { workspace = true }
registry-canister = { path = "../../registry/canister" }
reqwest = { workspace = true }
ring = { version = "0.17.7", features = ["std"] }
rosetta-core = { path = "../../rosetta-api/rosetta_core" }
rsa = { version = "0.9.2", features = ["sha2"] }
rust_decimal = "1.25"
serde = { workspace = true }
serde_bytes = { workspace = true }
serde_cbor = { workspace = true }
serde_json = { workspace = true }
serde_yaml = { workspace = true }
sha2 = { workspace = true }
slog = { workspace = true }
slog-async = { workspace = true }
slog-term = { workspace = true }
ssh2 = "0.9.4"
strum = { workspace = true }
strum_macros = { workspace = true }
tempfile = { workspace = true }
thiserror = { workspace = true }
time = { workspace = true }
tokio = { workspace = true }
tokio-util = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
tree-deserializer = { path = "../../tree_deserializer" }
url = { workspace = true }
walkdir = { workspace = true }
wat = { workspace = true }
zstd = { workspace = true }

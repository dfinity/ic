load("@bazel_skylib//rules:common_settings.bzl", "bool_flag")
load("@rules_rust//rust:defs.bzl", "rust_library")

package(default_visibility = ["//visibility:public"])

exports_files([
    "src/message.wasm",
])

bool_flag(
    name = "k8s",
    build_setting_default = False,
)

rust_library(
    name = "ic-system-test-driver",
    testonly = True,
    srcs = glob(["src/**/*.rs"]),
    aliases = {
        "//rs/utils": "utils",
    },
    compile_data = [
        "//ic-os/components:ic/ic.json5.template",
        "src/message.wasm",
    ],
    crate_name = "ic_system_test_driver",
    proc_macro_deps = [
        "@crate_index//:async-trait",
        "@crate_index//:strum_macros",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    deps = [
        "//packages/icrc-ledger-types:icrc_ledger_types",
        "//rs/artifact_pool",
        "//rs/canister_client",
        "//rs/canister_client/sender",
        "//rs/certification",
        "//rs/config",
        "//rs/constants",
        "//rs/crypto/sha2",
        "//rs/crypto/test_utils/reproducible_rng",
        "//rs/crypto/tree_hash",
        "//rs/crypto/utils/threshold_sig_der",
        "//rs/cycles_account_manager",
        "//rs/ic_os/deterministic_ips",
        "//rs/interfaces",
        "//rs/interfaces/registry",
        "//rs/nervous_system/clients",
        "//rs/nervous_system/common",
        "//rs/nervous_system/common/test_keys",
        "//rs/nervous_system/proto",
        "//rs/nervous_system/root",
        "//rs/nns/cmc",
        "//rs/nns/common",
        "//rs/nns/constants",
        "//rs/nns/governance",
        "//rs/nns/gtc",
        "//rs/nns/handlers/lifeline/impl:lifeline",
        "//rs/nns/handlers/root/impl:root",
        "//rs/nns/init",
        "//rs/nns/sns-wasm",
        "//rs/nns/test_utils",
        "//rs/phantom_newtype",
        "//rs/prep",
        "//rs/protobuf",
        "//rs/registry/canister",
        "//rs/registry/client",
        "//rs/registry/helpers",
        "//rs/registry/keys",
        "//rs/registry/local_registry",
        "//rs/registry/local_store",
        "//rs/registry/nns_data_provider",
        "//rs/registry/provisional_whitelist",
        "//rs/registry/regedit",
        "//rs/registry/routing_table",
        "//rs/registry/subnet_features",
        "//rs/registry/subnet_type",
        "//rs/registry/transport",
        "//rs/rosetta-api",
        "//rs/rosetta-api/icp_ledger",
        "//rs/rosetta-api/icrc1",
        "//rs/rosetta-api/icrc1/index-ng",
        "//rs/rosetta-api/icrc1/ledger",
        "//rs/rosetta-api/ledger_core",
        "//rs/rosetta-api/rosetta_core:rosetta-core",
        "//rs/rust_canisters/canister_test",
        "//rs/rust_canisters/dfn_candid",
        "//rs/rust_canisters/dfn_core",
        "//rs/rust_canisters/dfn_protobuf",
        "//rs/rust_canisters/http_types",
        "//rs/rust_canisters/on_wire",
        "//rs/sns/governance",
        "//rs/sns/init",
        "//rs/sns/root",
        "//rs/sns/swap",
        "//rs/sys",
        "//rs/test_utilities",
        "//rs/test_utilities/identity",
        "//rs/test_utilities/time",
        "//rs/test_utilities/types",
        "//rs/tests/test_canisters/message:lib",
        "//rs/tree_deserializer",
        "//rs/types/base_types",
        "//rs/types/management_canister_types",
        "//rs/types/types",
        "//rs/types/types_test_utils",
        "//rs/types/wasm_types",
        "//rs/universal_canister/lib",
        "@crate_index//:anyhow",
        "@crate_index//:assert_matches",
        "@crate_index//:backon",
        "@crate_index//:base64",
        "@crate_index//:bincode",
        "@crate_index//:candid",
        "@crate_index//:chrono",
        "@crate_index//:clap",
        "@crate_index//:crossbeam-channel",
        "@crate_index//:ed25519-dalek",
        "@crate_index//:flate2",
        "@crate_index//:futures",
        "@crate_index//:hex",
        "@crate_index//:http_0_2_12",
        "@crate_index//:humantime",
        "@crate_index//:hyper-rustls",
        "@crate_index//:hyper_0_14_27",
        "@crate_index//:ic-agent",
        "@crate_index//:ic-btc-interface",
        "@crate_index//:ic-cdk",
        "@crate_index//:ic-utils",
        "@crate_index//:itertools",
        "@crate_index//:json5",
        "@crate_index//:k256",
        "@crate_index//:k8s-openapi",
        "@crate_index//:kube",
        "@crate_index//:lazy_static",
        "@crate_index//:leb128",
        "@crate_index//:maplit",
        "@crate_index//:nix",
        "@crate_index//:num_cpus",
        "@crate_index//:once_cell",
        "@crate_index//:pem",
        "@crate_index//:proptest",
        "@crate_index//:prost",
        "@crate_index//:rand",
        "@crate_index//:rand_chacha",
        "@crate_index//:rayon",
        "@crate_index//:rcgen",
        "@crate_index//:regex",
        "@crate_index//:reqwest",
        "@crate_index//:ring",
        "@crate_index//:rsa",
        "@crate_index//:rust_decimal",
        "@crate_index//:serde",
        "@crate_index//:serde_bytes",
        "@crate_index//:serde_cbor",
        "@crate_index//:serde_json",
        "@crate_index//:serde_yaml",
        "@crate_index//:sha2",
        "@crate_index//:slog",
        "@crate_index//:slog-async",
        "@crate_index//:slog-term",
        "@crate_index//:ssh2",
        "@crate_index//:strum",
        "@crate_index//:tempfile",
        "@crate_index//:thiserror",
        "@crate_index//:time",
        "@crate_index//:tokio",
        "@crate_index//:tokio-util",
        "@crate_index//:tracing",
        "@crate_index//:tracing-subscriber",
        "@crate_index//:url",
        "@crate_index//:walkdir",
        "@crate_index//:wat",
    ],
)

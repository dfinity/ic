load("@rules_rust//rust:defs.bzl", "rust_library")
load("//rs/tests:common.bzl", "GUESTOS_RUNTIME_DEPS")
load("//rs/tests:system_tests.bzl", "system_test_nns")

package(default_visibility = ["//rs:system-tests-pkg"])

DEPENDENCIES = [
    # Keep sorted.
    "//rs/canister_client",
    "//rs/nervous_system/common/test_keys",
    "//rs/nns/common",
    "//rs/nns/test_utils",
    "//rs/registry/subnet_type",
    "//rs/rust_canisters/canister_test",
    "//rs/tests/consensus/utils",
    "//rs/tests/driver:ic-system-test-driver",
    "//rs/types/types",
    "@crate_index//:anyhow",
    "@crate_index//:slog",
]

RUNNER_DEPENDENCIES = [
    # Keep sorted.
    "nested",
    "//rs/tests/driver:ic-system-test-driver",
    "@crate_index//:anyhow",
]

MACRO_DEPENDENCIES = [
]

rust_library(
    name = "nested",
    testonly = True,
    srcs = glob(["src/**/*.rs"]),
    crate_name = "nested",
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    deps = DEPENDENCIES,
)

system_test_nns(
    name = "registration",
    flaky = True,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "system_test_hourly",
        "system_test_nightly",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    test_timeout = "eternal",
    uses_guestos_dev = True,
    uses_setupos_dev = True,
    runtime_deps = GUESTOS_RUNTIME_DEPS,
    deps = RUNNER_DEPENDENCIES,
)

system_test_nns(
    name = "upgrade",
    flaky = True,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "system_test_hourly",
        "system_test_nightly",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    test_timeout = "eternal",
    uses_guestos_dev = True,
    uses_hostos_dev_test = True,
    uses_setupos_dev = True,
    runtime_deps = GUESTOS_RUNTIME_DEPS,
    deps = RUNNER_DEPENDENCIES,
)

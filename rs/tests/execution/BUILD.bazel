load("//rs/tests:common.bzl", "GRAFANA_RUNTIME_DEPS", "GUESTOS_RUNTIME_DEPS", "UNIVERSAL_CANISTER_ENV", "UNIVERSAL_CANISTER_RUNTIME_DEPS", "UNIVERSAL_VM_RUNTIME_DEPS")
load("//rs/tests:system_tests.bzl", "oci_tar", "system_test", "system_test_nns", "uvm_config_image")

package(default_visibility = ["//rs:system-tests-pkg"])

system_test(
    name = "compute_allocation_test",
    env = UNIVERSAL_CANISTER_ENV,
    flaky = True,
    tags = [
        "k8s",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = GUESTOS_RUNTIME_DEPS + UNIVERSAL_CANISTER_RUNTIME_DEPS,
    deps = [
        "//rs/config",
        "//rs/registry/subnet_type",
        "//rs/tests/driver:ic-system-test-driver",
        "//rs/types/types",
        "//rs/universal_canister/lib",
        "@crate_index//:anyhow",
        "@crate_index//:candid",
        "@crate_index//:futures",
        "@crate_index//:ic-agent",
        "@crate_index//:ic-utils",
    ],
)

system_test(
    name = "cycles_restrictions_test",
    env = UNIVERSAL_CANISTER_ENV,
    flaky = True,
    tags = [
        "k8s",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = GUESTOS_RUNTIME_DEPS + UNIVERSAL_CANISTER_RUNTIME_DEPS,
    deps = [
        "//rs/registry/subnet_type",
        "//rs/tests/driver:ic-system-test-driver",
        "//rs/universal_canister/lib",
        "@crate_index//:anyhow",
        "@crate_index//:ic-agent",
        "@crate_index//:ic-utils",
    ],
)

system_test(
    name = "general_execution_test",
    srcs = glob(["general_execution_tests/*.rs"]),
    crate_root = "general_execution_test.rs",
    env = UNIVERSAL_CANISTER_ENV,
    flaky = True,
    tags = [
        "k8s",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = GUESTOS_RUNTIME_DEPS + UNIVERSAL_CANISTER_RUNTIME_DEPS,
    deps = [
        "//rs/config",
        "//rs/crypto/sha2",
        "//rs/cycles_account_manager",
        "//rs/nns/constants",
        "//rs/registry/subnet_type",
        "//rs/tests/driver:ic-system-test-driver",
        "//rs/types/base_types",
        "//rs/types/management_canister_types",
        "//rs/types/types",
        "//rs/types/types_test_utils",
        "//rs/universal_canister/lib",
        "@crate_index//:anyhow",
        "@crate_index//:candid",
        "@crate_index//:ic-agent",
        "@crate_index//:ic-cdk",
        "@crate_index//:ic-utils",
        "@crate_index//:lazy_static",
        "@crate_index//:rand",
        "@crate_index//:rand_chacha",
        "@crate_index//:reqwest",
        "@crate_index//:serde_cbor",
        "@crate_index//:serde_json",
        "@crate_index//:slog",
        "@crate_index//:tokio",
        "@crate_index//:wat",
    ],
)

system_test(
    name = "inter_canister_queries_test",
    srcs = glob(["inter_canister_queries_tests/*.rs"]),
    crate_root = "inter_canister_queries_test.rs",
    env = UNIVERSAL_CANISTER_ENV,
    flaky = True,
    tags = [
        "k8s",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = GUESTOS_RUNTIME_DEPS + UNIVERSAL_CANISTER_RUNTIME_DEPS,
    deps = [
        "//rs/registry/subnet_type",
        "//rs/tests/driver:ic-system-test-driver",
        "//rs/types/types",
        "//rs/universal_canister/lib",
        "@crate_index//:anyhow",
        "@crate_index//:assert_matches",
        "@crate_index//:ic-agent",
        "@crate_index//:wat",
    ],
)

system_test(
    name = "max_number_of_canisters_test",
    env = UNIVERSAL_CANISTER_ENV,
    flaky = True,
    tags = [
        "k8s",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = GUESTOS_RUNTIME_DEPS + UNIVERSAL_CANISTER_RUNTIME_DEPS,
    deps = [
        "//rs/registry/subnet_type",
        "//rs/tests/driver:ic-system-test-driver",
        "//rs/types/types",
        "//rs/universal_canister/lib",
        "@crate_index//:anyhow",
        "@crate_index//:ic-agent",
        "@crate_index//:ic-utils",
    ],
)

system_test(
    name = "system_api_security_test",
    flaky = True,
    tags = [
        "k8s",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = GUESTOS_RUNTIME_DEPS,
    deps = [
        "//rs/registry/subnet_type",
        "//rs/tests/driver:ic-system-test-driver",
        "@crate_index//:anyhow",
        "@crate_index//:ic-agent",
        "@crate_index//:ic-utils",
        "@crate_index//:slog",
        "@crate_index//:tokio",
        "@crate_index//:wat",
    ],
)

system_test(
    name = "system_subnets_test",
    env = UNIVERSAL_CANISTER_ENV,
    flaky = True,
    tags = [
        "k8s",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = GUESTOS_RUNTIME_DEPS + UNIVERSAL_CANISTER_RUNTIME_DEPS,
    deps = [
        "//rs/registry/subnet_type",
        "//rs/tests/driver:ic-system-test-driver",
        "//rs/types/types",
        "@crate_index//:anyhow",
        "@crate_index//:candid",
        "@crate_index//:ic-agent",
    ],
)

system_test(
    name = "fill_execution_rounds_workload",
    flaky = True,
    tags = [
        "manual",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    test_timeout = "eternal",
    runtime_deps = GUESTOS_RUNTIME_DEPS + GRAFANA_RUNTIME_DEPS + [
        "//rs/tests:jaeger_uvm_config_image",
    ],
    deps = [
        "//rs/registry/routing_table",
        "//rs/registry/subnet_type",
        "//rs/tests/driver:ic-system-test-driver",
        "//rs/universal_canister/lib",
        "@crate_index//:anyhow",
        "@crate_index//:futures",
        "@crate_index//:slog",
    ],
)

exports_files([
    "btc_integration/bitcoin.conf",
    "btc_integration/btc_activate.sh",
])

uvm_config_image(
    name = "btc_uvm_config_image",
    srcs = [
        ":bitcoind.tar",
        ":btc_integration/bitcoin.conf",
        ":btc_integration/btc_activate.sh",
    ],
    remap_paths = {
        "btc_activate.sh": "activate",
    },
    tags = ["manual"],  # this target will be built if required as a dependency of another target
)

oci_tar(
    name = "bitcoind.tar",
    image = "@bitcoind",
    repo_tags = ["bitcoind:pinned"],
)

BTC_RUNTIME_DEPS = [
    # Keep sorted.
    ":btc_uvm_config_image",
    "@btc_canister//file",
]

system_test_nns(
    name = "btc_get_balance_test",
    env = UNIVERSAL_CANISTER_ENV | {
        "BTC_WASM_PATH": "$(rootpath @btc_canister//file)",
    },
    flaky = True,
    tags = [
        "k8s",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps =
        GUESTOS_RUNTIME_DEPS +
        UNIVERSAL_VM_RUNTIME_DEPS +
        UNIVERSAL_CANISTER_RUNTIME_DEPS +
        BTC_RUNTIME_DEPS,
    deps = [
        "//rs/registry/subnet_type",
        "//rs/tests/ckbtc",
        "//rs/tests/driver:ic-system-test-driver",
        "//rs/types/types",
        "//rs/universal_canister/lib",
        "@crate_index//:anyhow",
        "@crate_index//:bitcoincore-rpc",
        "@crate_index//:candid",
        "@crate_index//:slog",
    ],
)

load("@rules_rust//rust:defs.bzl", "rust_binary", "rust_doc_test", "rust_library", "rust_test")

package(default_visibility = ["//visibility:public"])

DEPENDENCIES = [
    "//rs/artifact_pool",
    "//rs/canister_client",
    "//rs/canister_sandbox:backend_lib",
    "//rs/config",
    "//rs/consensus",
    "//rs/consensus/utils",
    "//rs/crypto",
    "//rs/crypto/for_verification_only",
    "//rs/crypto/test_utils/ni-dkg",
    "//rs/cycles_account_manager",
    "//rs/execution_environment",
    "//rs/interfaces",
    "//rs/interfaces/registry",
    "//rs/interfaces/state_manager",
    "//rs/messaging",
    "//rs/monitoring/logger",
    "//rs/monitoring/metrics",
    "//rs/nervous_system/common",
    "//rs/nns/common",
    "//rs/nns/constants",
    "//rs/nns/governance",
    "//rs/nns/init",
    "//rs/protobuf",
    "//rs/registry/client",
    "//rs/registry/helpers",
    "//rs/registry/keys",
    "//rs/registry/local_store",
    "//rs/registry/nns_data_provider",
    "//rs/registry/subnet_type",
    "//rs/registry/transport",
    "//rs/replicated_state",
    "//rs/rosetta-api/icp_ledger",
    "//rs/state_manager",
    "//rs/types/types",
    "@crate_index//:candid",
    "@crate_index//:clap_3_2_25",
    "@crate_index//:hex",
    "@crate_index//:prost",
    "@crate_index//:rand",
    "@crate_index//:serde",
    "@crate_index//:serde_json",
    "@crate_index//:slog",
    "@crate_index//:slog-async",
    "@crate_index//:tempfile",
    "@crate_index//:tokio",
    "@crate_index//:tower",
    "@crate_index//:url",
]

DEV_DEPENDENCIES = [
    "//rs/test_utilities/consensus",
    "//rs/test_utilities/types",
]

MACRO_DEPENDENCIES = []

ALIASES = {}

rust_library(
    name = "replay",
    testonly = True,
    srcs = glob(["src/**"]),
    aliases = ALIASES,
    crate_name = "ic_replay",
    proc_macro_deps = MACRO_DEPENDENCIES,
    version = "0.9.0",
    deps = DEPENDENCIES,
)

rust_binary(
    name = "ic-replay",
    testonly = True,
    srcs = ["src/main.rs"],
    aliases = ALIASES,
    proc_macro_deps = MACRO_DEPENDENCIES,
    deps = DEPENDENCIES + [":replay"],
)

rust_doc_test(
    name = "replay_doc_test",
    crate = ":replay",
)

rust_test(
    name = "replay_test",
    crate = ":replay",
    deps = DEPENDENCIES + DEV_DEPENDENCIES,
)

syntax = "proto3";

package types.v1;

import "google/protobuf/wrappers.proto";

message PrincipalId {
  bytes raw = 1;
}

message CanisterId {
  PrincipalId principal_id = 1;
}

message SubnetId {
  PrincipalId principal_id = 1;
}

message UserId {
  PrincipalId principal_id = 1;
}

message NodeId {
  PrincipalId principal_id = 1;
}

// A non-interactive distributed key generation (NI-DKG) ID.
message NiDkgId {
  reserved "receiver_subnet";
  reserved 3; // this is from receiver_subnet consisting of bytes
  uint64 start_block_height = 1;
  bytes dealer_subnet = 2;
  NiDkgTag dkg_tag = 4;
  google.protobuf.BytesValue remote_target_id = 5;
  optional MasterPublicKeyId key_id = 6;
}

// A non-interactive distributed key generation (NI-DKG) tag.
enum NiDkgTag {
  NI_DKG_TAG_UNSPECIFIED = 0;
  NI_DKG_TAG_LOW_THRESHOLD = 1;
  NI_DKG_TAG_HIGH_THRESHOLD = 2;
  NI_DKG_TAG_HIGH_THRESHOLD_FOR_KEY = 3;
}

message NominalCycles {
  uint64 high = 1;
  uint64 low = 2;
}

// Types of curves that can be used for ECDSA signatures.
enum EcdsaCurve {
  ECDSA_CURVE_UNSPECIFIED = 0;
  ECDSA_CURVE_SECP256K1 = 1;
}

message EcdsaKeyId {
  EcdsaCurve curve = 1;
  string name = 2;
}

// Types of curves that can be used for Schnorr signatures.
enum SchnorrAlgorithm {
  SCHNORR_ALGORITHM_UNSPECIFIED = 0;
  SCHNORR_ALGORITHM_BIP340SECP256K1 = 1;
  SCHNORR_ALGORITHM_ED25519 = 2;
}

message SchnorrKeyId {
  SchnorrAlgorithm algorithm = 1;
  string name = 2;
}

enum VetKdCurve {
  VET_KD_CURVE_UNSPECIFIED = 0;
  VET_KD_CURVE_BLS12_381_G2 = 1;
}

message VetKdKeyId {
  VetKdCurve curve = 1;
  string name = 2;
}

message MasterPublicKeyId {
  oneof key_id {
    EcdsaKeyId ecdsa = 1;
    SchnorrKeyId schnorr = 2;
    VetKdKeyId vetkd = 3;
  }
}

syntax = "proto3";

package crypto.v1;

import "registry/crypto/v1/crypto.proto";

// Node's public keys and certificates.
//
// This struct is used as storage medium in the node's public key store.
// Depending on the `version` field different public keys are expected:
// 1. `version 0`
//     * Node signing public key `node_signing_pk`
//     * Committee signing public key `committee_signing_pk`
//     * TLS certificate `tls_certificate`
//     * DKG public key `dkg_dealing_encryption_pk`
// 2. `version 1`
//     * Contains additionally the I-DKG public key `idkg_dealing_encryption_pk`
//
// Note that version 0 was used to transition existing nodes to version 1 by
// generating the corresponding I-DKG public key.
// This transition is now done and so we *always* expect the I-DKG public key to be present
// (and `version >= 1`).
message NodePublicKeys {
  uint32 version = 1;
  registry.crypto.v1.PublicKey node_signing_pk = 2;
  registry.crypto.v1.PublicKey committee_signing_pk = 3;
  registry.crypto.v1.X509PublicKeyCert tls_certificate = 4;
  registry.crypto.v1.PublicKey dkg_dealing_encryption_pk = 5;
  reserved 6;
  repeated registry.crypto.v1.PublicKey idkg_dealing_encryption_pks = 7;
}

syntax = "proto3";
package registry.routing_table.v1;

import "types/v1/types.proto";

// Represents a closed range of canister ids.
message CanisterIdRange {
  reserved 1;
  reserved "start"; // Originally was defined as a uint64
  reserved 2;
  reserved "end"; // Originally was defined as a uint64
  types.v1.CanisterId start_canister_id = 3;
  types.v1.CanisterId end_canister_id = 4;
}

// A list of closed ranges of canister Ids.
message CanisterIdRanges {
  repeated CanisterIdRange ranges = 1;
}

// Maps a closed range of canister Ids to a subnet id.
message RoutingTable {
  message Entry {
    CanisterIdRange range = 1;
    types.v1.SubnetId subnet_id = 2;
  }

  // Defined as `repeated` instead of `map` in order to preserve ordering.
  repeated Entry entries = 1;
}

// In-progress canister migrations.
message CanisterMigrations {
  // Describes an in-progress canister migration.
  //
  // The canisters in `range` are being sequentially migrated between the subnet
  // IDs in the list (usually only two, i.e. `A -> B`; but not necessarily, e.g.
  // `A -> B -> C` or even `A -> B -> A`).
  message Entry {
    // Canister ID range being migrated.
    CanisterIdRange range = 1;

    // Ordered list of subnet IDs tracing the path of the migration.
    repeated types.v1.SubnetId subnet_ids = 2;
  }

  // Defined as `repeated` instead of `map` in order to preserve ordering.
  repeated Entry entries = 1;
}

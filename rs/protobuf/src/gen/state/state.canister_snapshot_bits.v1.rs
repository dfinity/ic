// This file is @generated by prost-build.
/// `None` corresponds to `CanisterTimer::Inactive`
/// `Some(ts)` corresponds to `CanisterTimer::Active(ts)`.
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct CanisterTimer {
    #[prost(uint64, optional, tag = "1")]
    pub global_timer_nanos: ::core::option::Option<u64>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CanisterSnapshotBits {
    #[prost(uint64, tag = "1")]
    pub snapshot_id: u64,
    #[prost(message, optional, tag = "2")]
    pub canister_id: ::core::option::Option<super::super::super::types::v1::CanisterId>,
    #[prost(uint64, tag = "3")]
    pub taken_at_timestamp: u64,
    #[prost(uint64, tag = "4")]
    pub canister_version: u64,
    #[prost(bytes = "vec", tag = "5")]
    pub certified_data: ::prost::alloc::vec::Vec<u8>,
    #[prost(bytes = "vec", tag = "6")]
    pub binary_hash: ::prost::alloc::vec::Vec<u8>,
    #[prost(message, optional, tag = "7")]
    pub wasm_chunk_store_metadata:
        ::core::option::Option<super::super::canister_state_bits::v1::WasmChunkStoreMetadata>,
    #[prost(uint64, tag = "8")]
    pub stable_memory_size: u64,
    #[prost(uint64, tag = "9")]
    pub wasm_memory_size: u64,
    #[prost(uint64, tag = "10")]
    pub total_size: u64,
    #[prost(message, repeated, tag = "11")]
    pub exported_globals: ::prost::alloc::vec::Vec<super::super::canister_state_bits::v1::Global>,
    #[prost(message, optional, tag = "12")]
    pub global_timer: ::core::option::Option<CanisterTimer>,
    #[prost(
        enumeration = "super::super::canister_state_bits::v1::OnLowWasmMemoryHookStatus",
        optional,
        tag = "13"
    )]
    pub on_low_wasm_memory_hook_status: ::core::option::Option<i32>,
    #[prost(enumeration = "SnapshotSource", tag = "14")]
    pub source: i32,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum SnapshotSource {
    Unspecified = 0,
    TakenFromCanister = 1,
    UploadedManually = 2,
}
impl SnapshotSource {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Unspecified => "SNAPSHOT_SOURCE_UNSPECIFIED",
            Self::TakenFromCanister => "SNAPSHOT_SOURCE_TAKEN_FROM_CANISTER",
            Self::UploadedManually => "SNAPSHOT_SOURCE_UPLOADED_MANUALLY",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "SNAPSHOT_SOURCE_UNSPECIFIED" => Some(Self::Unspecified),
            "SNAPSHOT_SOURCE_TAKEN_FROM_CANISTER" => Some(Self::TakenFromCanister),
            "SNAPSHOT_SOURCE_UPLOADED_MANUALLY" => Some(Self::UploadedManually),
            _ => None,
        }
    }
}

load("@rules_rust//rust:defs.bzl", "rust_library", "rust_test_suite")

package(default_visibility = ["//visibility:public"])

DEPENDENCIES = [
    "//packages/icrc-ledger-agent:icrc_ledger_agent",
    "//packages/icrc-ledger-types:icrc_ledger_types",
    "//packages/pocket-ic:pocket-ic",
    "//rs/rosetta-api",
    "//rs/rosetta-api/icp_ledger",
    "//rs/rosetta-api/icp_ledger/ledger",
    "//rs/rosetta-api/icp_ledger/test_utils",
    "//rs/rosetta-api/icrc1",
    "//rs/rosetta-api/rosetta_core:rosetta-core",
    "//rs/test_utilities/load_wasm",
    "@crate_index//:candid",
    "@crate_index//:ic-agent",
    "@crate_index//:reqwest",
    "@crate_index//:serde",
    "@crate_index//:tempfile",
    "@crate_index//:tokio",
    "@crate_index//:url",
]

rust_library(
    name = "rosetta-integration-tests-lib",
    testonly = True,
    srcs = glob(["src/**/*.rs"]),
    crate_name = "icp_rosetta_integration_tests",
    proc_macro_deps = [
    ],
    version = "0.1.0",
    deps = DEPENDENCIES,
)

rust_test_suite(
    name = "rosetta-integration",
    srcs = ["tests/tests.rs"],
    data = [
        "//rs/canister_sandbox",
        "//rs/canister_sandbox:sandbox_launcher",
        "//rs/pocket_ic_server:pocket-ic-server",
        "//rs/replica",
        "//rs/rosetta-api:ic-rosetta-api",
        "//rs/rosetta-api/icp_ledger/ledger:ledger-canister-wasm-notify-method",
    ],
    env = {
        "CANISTER_LAUNCHER": "$(rootpath //rs/canister_sandbox)",
        "LEDGER_CANISTER_NOTIFY_METHOD_WASM_PATH": "$(rootpath //rs/rosetta-api/icp_ledger/ledger:ledger-canister-wasm-notify-method)",
        "POCKET_IC_BIN": "$(rootpath //rs/pocket_ic_server:pocket-ic-server)",
        "REPLICA_BIN": "$(rootpath //rs/replica)",
        "ROSETTA_PATH": "$(rootpath //rs/rosetta-api:ic-rosetta-api)",
        "SANDBOX_LAUNCHER": "$(rootpath //rs/canister_sandbox:sandbox_launcher)",
    },
    # The test is critical to get resources timely and therefore fails sometimes when run on heavily loaded node.
    # TODO(IDX-2225): reconsider when we will use Remote Execution.
    flaky = True,
    proc_macro_deps = [
    ],
    # The test runs replica binary that constantly uses more than 100% cpu core + rosetta server.
    tags = ["cpu:3"],
    deps = DEPENDENCIES + [":rosetta-integration-tests-lib"],
)

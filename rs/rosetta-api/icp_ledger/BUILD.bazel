load("@rules_motoko//motoko:defs.bzl", "motoko_binary", "motoko_library")
load("@rules_rust//rust:defs.bzl", "rust_library", "rust_test")
load("//bazel:candid.bzl", "did_git_test")
load("//bazel:canisters.bzl", "rust_canister")
load("//bazel:defs.bzl", "rust_ic_test_suite")
load("//bazel:prost.bzl", "generated_files_check")

package(default_visibility = ["//visibility:public"])

exports_files([
    "ledger.did",
    "ledger_archive.did",
])

filegroup(
    name = "protos",
    srcs = glob(["proto/**"]),
)

rust_library(
    name = "icp_ledger",
    srcs = glob([
        "src/**",
        "gen/**",
    ]),
    crate_name = "icp_ledger",
    proc_macro_deps = [
        # Keep sorted.
        "@crate_index//:strum_macros",
    ],
    version = "0.9.0",
    deps = [
        # Keep sorted.
        "//packages/ic-ledger-hash-of:ic_ledger_hash_of",
        "//packages/icrc-ledger-types:icrc_ledger_types",
        "//rs/crypto/sha2",
        "//rs/rosetta-api/ledger_canister_core",
        "//rs/rosetta-api/ledger_core",
        "//rs/rust_canisters/dfn_core",
        "//rs/rust_canisters/dfn_protobuf",
        "//rs/rust_canisters/on_wire",
        "//rs/types/base_types",
        "@crate_index//:candid",
        "@crate_index//:comparable",
        "@crate_index//:crc32fast",
        "@crate_index//:hex",
        "@crate_index//:ic-cdk",
        "@crate_index//:num-traits",
        "@crate_index//:prost",
        "@crate_index//:serde",
        "@crate_index//:serde_bytes",
        "@crate_index//:serde_cbor",
        "@crate_index//:strum",
    ],
)

rust_test(
    name = "icp_ledger_test",
    crate = ":icp_ledger",
    deps = [
        # Keep sorted.
        "@crate_index//:proptest",
    ],
)

motoko_library(
    name = "ledger_mo_lib",
    srcs = ["wasm/Ledger.mo"],
)

motoko_binary(
    name = "ledger_proxy",
    entry = "wasm/Proxy.mo",
    wasm_out = "ledger_proxy.wasm",
    deps = [":ledger_mo_lib"],
)

rust_canister(
    name = "test_notified_canister",
    srcs = ["tests/notified.rs"],
    service_file = ":tests/notified.did",
    deps = [
        # Keep sorted.
        ":icp_ledger",
        "//rs/rust_canisters/dfn_candid",
        "//rs/rust_canisters/dfn_core",
        "//rs/rust_canisters/dfn_protobuf",
        "//rs/types/base_types",
        "@crate_index//:lazy_static",
    ],
)

rust_ic_test_suite(
    name = "ledger_canister_integration_test",
    timeout = "long",
    srcs = [
        "tests/tests.rs",
        "tests/upgrade_downgrade.rs",
    ],
    data = [
        "ledger.did",
        "ledger_archive.did",
        ":ledger_proxy.wasm",
        ":test_notified_canister",
        "//rs/pocket_ic_server:pocket-ic-server",
        "//rs/rosetta-api/icp_ledger/archive:ledger-archive-node-canister-wasm",
        "//rs/rosetta-api/icp_ledger/index:ic-icp-index-canister",
        "//rs/rosetta-api/icp_ledger/ledger:ledger-canister-wasm",
        "//rs/rosetta-api/icp_ledger/ledger:ledger-canister-wasm-notify-method",
        "@mainnet_icp_index_canister//file",
        "@mainnet_icp_ledger-archive-node-canister//file",
        "@mainnet_icp_ledger_canister//file",
    ],
    env = {
        "CARGO_MANIFEST_DIR": "rs/rosetta-api/icp_ledger",
        "IC_ICP_INDEX_CANISTER_WASM_PATH": "$(rootpath //rs/rosetta-api/icp_ledger/index:ic-icp-index-canister)",
        "LEDGER_ARCHIVE_NODE_CANISTER_WASM_PATH": "$(rootpath //rs/rosetta-api/icp_ledger/archive:ledger-archive-node-canister-wasm)",
        "LEDGER_CANISTER_NOTIFY_METHOD_WASM_PATH": "$(rootpath //rs/rosetta-api/icp_ledger/ledger:ledger-canister-wasm-notify-method)",
        "LEDGER_CANISTER_WASM_PATH": "$(rootpath //rs/rosetta-api/icp_ledger/ledger:ledger-canister-wasm)",
        "LEDGER_PROXY_WASM_PATH": "$(rootpath :ledger_proxy.wasm)",
        "MAINNET_ICP_INDEX_CANISTER_WASM_PATH": "$(rootpath @mainnet_icp_index_canister//file)",
        "MAINNET_ICP_LEDGER_ARCHIVE_NODE_CANISTER_WASM_PATH": "$(rootpath @mainnet_icp_ledger-archive-node-canister//file)",
        "MAINNET_ICP_LEDGER_CANISTER_WASM_PATH": "$(rootpath @mainnet_icp_ledger_canister//file)",
        "POCKET_IC_BIN": "$(rootpath //rs/pocket_ic_server:pocket-ic-server)",
        "TEST_NOTIFIED_WASM_PATH": "$(rootpath :test_notified_canister)",
    },
    deps = [
        # Keep sorted.
        ":icp_ledger",
        "//packages/ic-ledger-hash-of:ic_ledger_hash_of",
        "//packages/icrc-ledger-types:icrc_ledger_types",
        "//packages/pocket-ic",
        "//rs/canister_client/sender",
        "//rs/crypto/sha2",
        "//rs/nns/constants",
        "//rs/rosetta-api/icp_ledger/index:ic-icp-index",
        "//rs/rosetta-api/icp_ledger/test_utils",
        "//rs/rosetta-api/ledger_canister_core",
        "//rs/rosetta-api/ledger_core",
        "//rs/rust_canisters/canister_test",
        "//rs/rust_canisters/dfn_candid",
        "//rs/rust_canisters/dfn_protobuf",
        "//rs/rust_canisters/http_types",
        "//rs/rust_canisters/on_wire",
        "//rs/types/base_types",
        "@crate_index//:candid",
        "@crate_index//:candid_parser",
        "@crate_index//:hex",
        "@crate_index//:maplit",
        "@crate_index//:rand",
        "@crate_index//:rand_chacha",
        "@crate_index//:serde",
        "@crate_index//:serde_bytes",
    ],
)

# To run this test,
#
#     bazel \
#         test \
#         --test_env=SSH_AUTH_SOCK \
#         //rs/rosetta-api/icp_ledger:ledger_canister_integration_golden_nns_state_test
#
# The only unusual thing in this command is `--test_env=SSH_AUTH_SOCK`. That causes the
# SSH_AUTH_SOCK environment variable to be "forwarded" from your shell to the sandbox where the test
# is run. This authorizes the test to download the test data.
#
# Additionally, the following flags are recommended (but not required):
#
# --test_output=streamed
# --test_arg=--nocapture
#
# These let you watch the progress of the test, rather than only being able to see the output only
# at the end.
#
# See the .bazelrc for more configuration information.
rust_ic_test_suite(
    name = "ledger_canister_integration_golden_nns_state_test",
    # This uses on the order of 10 GB of disk space.
    # Therefore, size = "large" is not large enough.
    size = "enormous",
    srcs = [
        "tests/golden_nns_state.rs",
    ],
    data = [
        "//rs/rosetta-api/icp_ledger/archive:ledger-archive-node-canister-wasm",
        "//rs/rosetta-api/icp_ledger/index:ic-icp-index-canister",
        "//rs/rosetta-api/icp_ledger/ledger:ledger-canister-wasm-notify-method",
        "@mainnet_icp_index_canister//file",
        "@mainnet_icp_ledger-archive-node-canister//file",
        "@mainnet_icp_ledger_canister//file",
    ],
    env = {
        "CARGO_MANIFEST_DIR": "rs/rosetta-api/icp_ledger",
        "IC_ICP_INDEX_CANISTER_WASM_PATH": "$(rootpath //rs/rosetta-api/icp_ledger/index:ic-icp-index-canister)",
        "LEDGER_ARCHIVE_NODE_CANISTER_WASM_PATH": "$(rootpath //rs/rosetta-api/icp_ledger/archive:ledger-archive-node-canister-wasm)",
        "LEDGER_CANISTER_NOTIFY_METHOD_WASM_PATH": "$(rootpath //rs/rosetta-api/icp_ledger/ledger:ledger-canister-wasm-notify-method)",
        "MAINNET_ICP_INDEX_CANISTER_WASM_PATH": "$(rootpath @mainnet_icp_index_canister//file)",
        "MAINNET_ICP_LEDGER_ARCHIVE_NODE_CANISTER_WASM_PATH": "$(rootpath @mainnet_icp_ledger-archive-node-canister//file)",
        "MAINNET_ICP_LEDGER_CANISTER_WASM_PATH": "$(rootpath @mainnet_icp_ledger_canister//file)",
    },
    tags = [
        "fi_tests_nightly",  # Run this test in the fi-tests-nightly GitHub Action job.
        "no-sandbox",  # such that the test can access the file $SSH_AUTH_SOCK.
        "requires-network",  # Because mainnet state is downloaded (and used).
    ],
    deps = [
        # Keep sorted.
        ":icp_ledger",
        "//rs/nns/constants",
        "//rs/nns/test_utils/golden_nns_state",
        "//rs/rosetta-api/icp_ledger/index:ic-icp-index",
        "//rs/rosetta-api/icp_ledger/test_utils",
        "//rs/state_machine_tests",
        "//rs/types/base_types",
        "@crate_index//:candid",
        "@crate_index//:candid_parser",
    ],
)

rust_test(
    name = "protobuf_encoding_test",
    srcs = ["tests/protobuf_encoding.rs"],
    deps = [
        # Keep sorted.
        ":icp_ledger",
        "//packages/ic-ledger-hash-of:ic_ledger_hash_of",
        "//rs/rosetta-api/ledger_core",
        "//rs/rust_canisters/dfn_protobuf",
        "@crate_index//:proptest",
        "@crate_index//:serde_bytes",
    ],
)

did_git_test(
    name = "ledger_did_git_test",
    did = ":ledger.did",
)

generated_files_check(
    name = "check_generated_files",
    srcs = ["tests/check_generated_files.rs"],
    data = [
        ":protos",
        "//rs/types/base_types:protos",
    ] + glob(["src/gen/**"]),
    manifest_dir = "rs/rosetta-api/icp_ledger",
    deps = [
        # Keep sorted.
        "//rs/rosetta-api/icp_ledger/protobuf_generator:lib",
        "//rs/test_utilities/compare_dirs",
        "@crate_index//:tempfile",
    ],
)

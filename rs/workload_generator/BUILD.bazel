load("@rules_rust//cargo:defs.bzl", "cargo_build_script")
load("@rules_rust//rust:defs.bzl", "rust_binary")

package(default_visibility = ["//visibility:public"])

DEPENDENCIES = [
    "//rs/canister_client",
    "//rs/canister_client/sender",
    "//rs/config",
    "//rs/crypto/sha2",
    "//rs/monitoring/metrics",
    "//rs/http_endpoints/metrics",
    "//rs/test_utilities/identity",
    "//rs/types/management_canister_types",
    "//rs/types/types",
    "@crate_index//:backoff",
    "@crate_index//:byte-unit",
    "@crate_index//:candid",
    "@crate_index//:chrono",
    "@crate_index//:clap_3_2_25",
    "@crate_index//:console",
    "@crate_index//:futures",
    "@crate_index//:hex",
    "@crate_index//:indicatif",
    "@crate_index//:itertools",
    "@crate_index//:lazy_static",
    "@crate_index//:prometheus",
    "@crate_index//:rand",
    "@crate_index//:serde",
    "@crate_index//:serde_json",
    "@crate_index//:slog",
    "@crate_index//:slog-scope",
    "@crate_index//:slog-term",
    "@crate_index//:tokio",
    "@crate_index//:url",
    "@crate_index//:wat",
]

MACRO_DEPENDENCIES = []

BUILD_DEPENDENCIES = []

ALIASES = {}

cargo_build_script(
    name = "build_script",
    srcs = ["build.rs"],
    aliases = ALIASES,
    data = [],  # build script data (e.g. template files) goes here
    version = "0.9.0",
    deps = BUILD_DEPENDENCIES,
)

rust_binary(
    name = "ic-workload-generator",
    srcs = glob(["src/*.rs"]),
    aliases = ALIASES,
    compile_data = ["src/counter.wat"],
    proc_macro_deps = MACRO_DEPENDENCIES,
    deps = DEPENDENCIES + [":build_script"],
)

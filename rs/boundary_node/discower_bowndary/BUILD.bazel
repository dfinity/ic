load("@rules_rust//rust:defs.bzl", "rust_binary", "rust_library", "rust_test")

package(default_visibility = ["//visibility:public"])

DEPENDENCIES = [
    "@crate_index//:anyhow",
    "@crate_index//:tokio",
    "@crate_index//:tokio-util",
    "@crate_index//:arc-swap",
    "@crate_index//:url",
    "@crate_index//:ic-agent",
    "@crate_index//:http",
    "@crate_index//:thiserror",
    "@crate_index//:tracing",
    "@crate_index//:tracing-subscriber",
    "@crate_index//:simple_moving_average",
    "@crate_index//:rand",
    "@crate_index//:ring",
]

VERSION = "0.1.0"

rust_library(
    name = "discower-bowndary",
    srcs = glob(["src/**"]),
    aliases = {},
    proc_macro_deps = ["@crate_index//:async-trait"],
    version = VERSION,
    deps = DEPENDENCIES,
)

rust_test(
    name = "discower-bowndary-test",
    aliases = {},
    crate = ":discower-bowndary",
    proc_macro_deps = [],
    deps = DEPENDENCIES,
)

rust_binary(
    name = "basic-library-usage",
    srcs = ["examples/basic_library_usage.rs"],
    aliases = {},
    proc_macro_deps = [],
    version = VERSION,
    deps = DEPENDENCIES + [":discower-bowndary"],
)

rust_binary(
    name = "fetch-api-bns",
    srcs = ["examples/fetch_api_bns.rs"],
    aliases = {},
    proc_macro_deps = [],
    version = VERSION,
    deps = DEPENDENCIES + [":discower-bowndary"],
)

rust_binary(
    name = "api-bn-dynamic-routing",
    srcs = ["examples/api_bn_dynamic_routing.rs"],
    aliases = {},
    proc_macro_deps = [],
    version = VERSION,
    deps = DEPENDENCIES + [":discower-bowndary"],
)

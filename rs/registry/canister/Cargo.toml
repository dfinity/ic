[package]
name = "registry-canister"
version.workspace = true
authors.workspace = true
edition.workspace = true
description.workspace = true
documentation.workspace = true

[[bin]]
name = "registry-canister"
path = "canister/canister.rs"

[dependencies]
build-info = { workspace = true }

candid = { workspace = true }
dfn_candid = { workspace = true }
dfn_core = { workspace = true }
dfn_http_metrics = { workspace = true }
futures = { workspace = true }
ic-base-types = { workspace = true }
ic-certified-map = { workspace = true }
ic-cdk = { workspace = true }
ic-crypto-node-key-validation = { workspace = true }
ic-crypto-sha2 = { workspace = true }
ic-crypto-utils-basic-sig = { workspace = true }
ic-crypto-utils-ni-dkg = { workspace = true }
ic-management-canister-types-private = { workspace = true }
ic-metrics-encoder = { workspace = true }
ic-nervous-system-canisters = { workspace = true }
ic-nervous-system-clients = { workspace = true }
ic-nervous-system-common = { workspace = true }
ic-nervous-system-common-build-metadata = { workspace = true }
ic-nervous-system-string = { workspace = true }
ic-nns-common = { workspace = true }
ic-nns-constants = { workspace = true }
ic-protobuf = { workspace = true }
ic-registry-canister-api = { workspace = true }
ic-registry-keys = { workspace = true }
ic-registry-routing-table = { workspace = true }
ic-registry-subnet-features = { workspace = true }
ic-registry-subnet-type = { workspace = true }
ic-registry-transport = { workspace = true }
ic-registry-node-provider-rewards = { workspace = true }
ic-stable-structures = { workspace = true }
ic-types = { workspace = true }
idna = { workspace = true }
lazy_static = { workspace = true }
leb128 = { workspace = true }
ipnet = { workspace = true }
maplit = { workspace = true }
on_wire = { workspace = true }
prost = { workspace = true }
serde = { workspace = true }
url = { workspace = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
getrandom = { version = "0.2", features = ["custom"] }

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
assert_matches = { workspace = true }
candid_parser = { workspace = true }
canister-test = { path = "../../rust_canisters/canister_test" }
ic-canister-client-sender = { path = "../../canister_client/sender" }
ic-config = { path = "../../config" }
ic-crypto-node-key-generation = { path = "../../crypto/node_key_generation" }
ic-crypto-test-utils-ni-dkg = { path = "../../crypto/test_utils/ni-dkg" }
ic-crypto-test-utils-reproducible-rng = { path = "../../crypto/test_utils/reproducible_rng" }
ic-interfaces-registry = { path = "../../interfaces/registry" }
ic-registry-client-fake = { path = "../fake" }
ic-registry-nns-data-provider = { path = "../nns_data_provider" }
ic-registry-proto-data-provider = { path = "../proto_data_provider" }
ic-replica-tests = { path = "../../replica_tests" }
ic-test-utilities = { path = "../../test_utilities" }
ic-test-utilities-types = { path = "../../test_utilities/types" }
ic-types-test-utils = { path = "../../types/types_test_utils" }
lazy_static = { workspace = true }
rand = { workspace = true }
rand_distr = "0.4.0"
serde_json = { workspace = true }

[build-dependencies]
build-info-build = { workspace = true }

[dev-dependencies]
ic-crypto-test-utils-ni-dkg = { workspace = true }
ic-crypto-test-utils-reproducible-rng = { workspace = true }
ic-crypto-tree-hash = { workspace = true }
ic-nervous-system-common-test-keys = { workspace = true }
ic-nns-test-utils = { workspace = true }
ic-nns-test-utils-macros = { workspace = true }
ic-test-utilities-compare-dirs = { workspace = true }
itertools = { workspace = true }
registry-canister-protobuf-generator = { workspace = true }
tempfile = { workspace = true }
tokio = { workspace = true }

[package]
name = "ic-nns-integration-tests"
version.workspace = true
authors.workspace = true
edition.workspace = true
description.workspace = true
documentation.workspace = true

[[bin]]
name = "mem-utils-test-canister"
path = "test_canisters/mem_utils_test.rs"

[[bin]]
name = "governance-mem-test-canister"
path = "test_canisters/governance_mem_test_canister.rs"

[[bin]]
name = "unstoppable-canister"
path = "test_canisters/unstoppable_canister.rs"

[[bin]]
name = "unstoppable-sns-root-canister"
path = "test_canisters/unstoppable_sns_root_canister.rs"

[[bin]]
name = "canister-playground-canister"
path = "test_canisters/canister_playground_canister.rs"


# Dependencies required to compile the test canisters.
[dependencies]
assert_matches = { workspace = true }
async-trait = { workspace = true }
bytes = { workspace = true }
candid = { workspace = true }
cycles-minting-canister = { path = "../../nns/cmc" }
dfn_candid = { path = "../../rust_canisters/dfn_candid" }
dfn_core = { path = "../../rust_canisters/dfn_core" }
dfn_json = { path = "../../rust_canisters/dfn_json" }
dfn_protobuf = { path = "../../rust_canisters/dfn_protobuf" }
futures = { workspace = true }
ic-base-types = { path = "../../types/base_types" }
ic-cdk = { workspace = true }
ic-cdk-macros = { workspace = true }
ic-cdk-timers = { workspace = true }
ic-ledger-core = { path = "../../rosetta-api/ledger_core" }
ic-nervous-system-clients = { path = "../../nervous_system/clients" }
ic-nervous-system-common = { path = "../../nervous_system/common" }
ic-nervous-system-runtime = { path = "../../nervous_system/runtime" }
ic-nns-common = { path = "../common" }
ic-nns-governance = { path = "../governance" }
ic-sns-root = { path = "../../sns/root" }
ic-sns-swap = { path = "../../sns/swap" }
ic-stable-structures = { workspace = true }
icrc-ledger-types = { path = "../../../packages/icrc-ledger-types" }
icp-ledger = { path = "../../rosetta-api/icp_ledger" }
lazy_static = "1.4.0"
lifeline = { path = "../handlers/lifeline/impl" }
prometheus-parse = "0.2.4"
prost = { workspace = true }
strum = { workspace = true }
tempfile = "3.1.0"

# Dependencies required to compile the tests.
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
canister-test = { path = "../../rust_canisters/canister_test" }
crossbeam-channel = { workspace = true }
hex = { workspace = true }
ic-canister-client-sender = { path = "../../canister_client/sender" }
ic-canisters-http-types = { path = "../../rust_canisters/http_types" }
ic-config = { path = "../../config" }
ic-crypto = { path = "../../crypto" }
ic-crypto-sha2 = { path = "../../crypto/sha2" }
ic-error-types = { path = "../../types/error_types" }
ic-management-canister-types = { path = "../../types/management_canister_types" }
ic-nervous-system-common-test-keys = { path = "../../nervous_system/common/test_keys" }
ic-nervous-system-root = { path = "../../nervous_system/root" }
ic-nns-constants = { path = "../constants" }
ic-nns-handler-root = { path = "../handlers/root/impl" }
ic-nns-gtc = { path = "../gtc" }
ic-nns-test-utils = { path = "../../nns/test_utils" }
ic-nns-test-utils-macros = { path = "../../nns/test_utils_macros" }
ic-sns-wasm = { path = "../sns-wasm" }
ic-sns-init = { path = "../../sns/init" }
ic-protobuf = { path = "../../protobuf" }
ic-registry-keys = { path = "../../registry/keys" }
ic-registry-routing-table = { path = "../../registry/routing_table" }
ic-registry-subnet-type = { path = "../../registry/subnet_type" }
ic-registry-transport = { path = "../../registry/transport" }
ic-state-machine-tests = { path = "../../state_machine_tests" }
ic-test-utilities = { path = "../../test_utilities" }
ic-types = { path = "../../types/types" }
ic-types-test-utils = { path = "../../types/types_test_utils" }
ic-xrc-types = "1.0.0"
maplit = "1.0.2"
on_wire = { path = "../../rust_canisters/on_wire" }
phantom_newtype = { path = "../../phantom_newtype" }
rand = "0.8"
registry-canister = { path = "../../registry/canister" }
rustc-hash = "1.1.0"
serde = { workspace = true }
serde_bytes = { workspace = true }
tokio = { workspace = true }
wat = "1.0.52"
assert_matches = { workspace = true }
xrc-mock = { path = "../../rosetta-api/tvl/xrc_mock" }

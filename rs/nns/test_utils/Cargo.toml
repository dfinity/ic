[package]
name = "ic-nns-test-utils"
version.workspace = true
authors.workspace = true
edition.workspace = true
description.workspace = true
documentation.workspace = true

[dependencies]
assert_matches = { workspace = true }
candid = { workspace = true }
canister-test = { path = "../../rust_canisters/canister_test" }
cycles-minting-canister = { path = "../../nns/cmc" }
dfn_candid = { path = "../../rust_canisters/dfn_candid" }
dfn_core = { path = "../../rust_canisters/dfn_core" }
dfn_http = { path = "../../rust_canisters/dfn_http" }
dfn_json = { path = "../../rust_canisters/dfn_json" }
dfn_protobuf = { path = "../../rust_canisters/dfn_protobuf" }
flate2 = "1.0.27"
futures = { workspace = true }
hex = { workspace = true }
ic-icrc1 = { path = "../../rosetta-api/icrc1" }
ic-base-types = { path = "../../types/base_types" }
ic-btc-interface = { workspace = true }
ic-canister-client-sender = { path = "../../canister_client/sender" }
ic-config = { path = "../../config" }
ic-crypto-node-key-generation = { path = "../../crypto/node_key_generation" }
ic-crypto-node-key-validation = { path = "../../crypto/node_key_validation" }
ic-crypto-sha2 = { path = "../../crypto/sha2" }
ic-crypto-test-utils-ni-dkg = { path = "../../crypto/test_utils/ni-dkg" }
ic-crypto-test-utils-reproducible-rng = { path = "../../crypto/test_utils/reproducible_rng" }
ic-crypto-utils-ni-dkg = { path = "../../crypto/utils/ni_dkg" }
ic-management-canister-types = { path = "../../types/management_canister_types" }
ic-nervous-system-clients = { path = "../../nervous_system/clients" }
ic-nervous-system-common = { path = "../../nervous_system/common" }
ic-nervous-system-common-test-keys = { path = "../../nervous_system/common/test_keys" }
ic-nervous-system-root = { path = "../../nervous_system/root" }
ic-nns-common = { path = "../common" }
ic-nns-constants = { path = "../constants" }
ic-nns-governance = { path = "../governance" }
ic-nns-gtc = { path = "../gtc" }
ic-nns-gtc-accounts = { path = "../gtc_accounts" }
ic-nns-handler-root = { path = "../handlers/root/impl" }
ic-nns-handler-lifeline-interface = { path = "../handlers/lifeline/interface" }
ic-protobuf = { path = "../../protobuf" }
ic-registry-keys = { path = "../../registry/keys" }
ic-registry-routing-table = { path = "../../registry/routing_table" }
ic-registry-subnet-type = { path = "../../registry/subnet_type" }
ic-registry-transport = { path = "../../registry/transport" }
ic-sns-init = { path = "../../sns/init" }
ic-sns-governance = { path = "../../sns/governance" }
ic-sns-swap = { path = "../../sns/swap" }
ic-sns-wasm = { path = "../sns-wasm" }
ic-state-machine-tests = { path = "../../state_machine_tests" }
ic-test-utilities = { path = "../../test_utilities" }
ic-test-utilities-types = { path = "../../test_utilities/types" }
ic-types = { path = "../../types/types" }
ic-utils = { path = "../../utils" }
icp-ledger = { path = "../../rosetta-api/icp_ledger" }
icrc-ledger-types = { path = "../../../packages/icrc-ledger-types" }
lifeline = { path = "../handlers/lifeline/impl" }
maplit = "1.0.2"
num-traits = { workspace = true }
on_wire = { path = "../../rust_canisters/on_wire" }
prometheus-parse = "0.2.4"
prost = { workspace = true }
rand = { version = "0.8.4" }
registry-canister = { path = "../../registry/canister" }
serde = { workspace = true }
tokio = { workspace = true }
walrus = "0.19.0"

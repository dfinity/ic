[package]
name = "ic-types"
version.workspace = true
authors.workspace = true
edition.workspace = true
description.workspace = true
documentation.workspace = true

[dependencies]
base64 = { workspace = true }
bincode = { workspace = true }
candid = { workspace = true }
hex = { workspace = true }
ic-base-types = { path = "../base_types" }
ic-btc-replica-types = { path = "../../bitcoin/replica_types" }
ic-limits = { path = "../../limits" }
ic-crypto-internal-types = { path = "../../crypto/internal/crypto_lib/types" }
ic-crypto-sha2 = { path = "../../crypto/sha2" }
ic-crypto-tree-hash = { path = "../../crypto/tree_hash" }
ic-error-types = { path = "../error_types" }
ic-management-canister-types = { path = "../management_canister_types" }
ic-protobuf = { path = "../../protobuf" }
ic-validate-eq = { path = "../../utils/validate_eq" }
ic-validate-eq-derive = { path = "../../utils/validate_eq_derive" }
ic-utils = { path = "../../utils" }
maplit = "1.0.2"
once_cell = "1.8"
phantom_newtype = { path = "../../phantom_newtype" }
prost = { workspace = true }
serde = { workspace = true }
serde_bytes = { workspace = true }
serde_cbor = { workspace = true }
serde_json = { workspace = true }
serde_with = { workspace = true }
strum = { workspace = true }
strum_macros = { workspace = true }
thiserror = { workspace = true }
thousands = "0.2.0"

[target.'cfg(not(all(target_arch = "wasm32", target_os = "unknown")))'.dependencies]
chrono = { workspace = true }

[dev-dependencies]
assert_matches = { workspace = true }
hex-literal = "0.4.1"
ic-crypto-test-utils-canister-threshold-sigs = { path = "../../crypto/test_utils/canister_threshold_sigs" }
ic-crypto-test-utils-reproducible-rng = { path = "../../crypto/test_utils/reproducible_rng" }
ic-exhaustive-derive = { path = "../exhaustive_derive" }
ic-types-test-utils = { path = "../types_test_utils" }
pretty_assertions = { workspace = true }
rand = { workspace = true }
rand_chacha = { workspace = true }
rusty-fork = "0.3.0"

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
proptest = { workspace = true }
proptest-derive = { workspace = true }
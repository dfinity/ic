load("@rules_rust//cargo:defs.bzl", "cargo_build_script")
load("@rules_rust//rust:defs.bzl", "rust_binary", "rust_library", "rust_test")

package(default_visibility = ["//rs:ic-os-pkg"])

cargo_build_script(
    name = "build_script",
    srcs = ["build.rs"],
    data = ["templates/guestos_vm_template.xml"],
)

DEPENDENCIES = [
    # Keep sorted.
    ":build_script",
    "//rs/ic_os/config_types",
    "//rs/ic_os/deterministic_ips",
    "//rs/ic_os/metrics_tool",
    "//rs/ic_os/network",
    "//rs/ic_os/utils",
    "//rs/types/types",
    "@crate_index//:anyhow",
    "@crate_index//:askama",
    "@crate_index//:clap",
    "@crate_index//:macaddr",
    "@crate_index//:regex",
    "@crate_index//:serde",
    "@crate_index//:serde_json",
    "@crate_index//:serde_with",
    "@crate_index//:tempfile",
    "@crate_index//:url",
]

DEV_DEPENDENCIES = [
    # Keep sorted.
    "@crate_index//:goldenfile",
    "@crate_index//:once_cell",
    "@crate_index//:tempfile",
    "@crate_index//:url",
]

MACRO_DEPENDENCIES = []

ALIASES = {}

BIN_SOURCES = [
    "src/main.rs",
    "src/guest_vm_config.rs",
]

LIB_SOURCES = glob(
    ["src/**/*.rs"],
    exclude = BIN_SOURCES,
)

rust_library(
    name = "config_lib",
    srcs = LIB_SOURCES,
    crate_name = "config",
    visibility = [
        "//rs:ic-os-pkg",
        "//rs:system-tests-pkg",
    ],
    deps = DEPENDENCIES,
)

rust_library(
    name = "config_lib_dev",
    srcs = LIB_SOURCES,
    crate_features = ["dev"],
    crate_name = "config",
    visibility = [
        "//rs:ic-os-pkg",
        "//rs:system-tests-pkg",
    ],
    deps = DEPENDENCIES,
)

rust_test(
    name = "config_lib_test",
    crate = ":config_lib_dev",
    crate_features = ["dev"],
    # You may add other deps that are specific to the test configuration
    deps = DEV_DEPENDENCIES,
)

rust_binary(
    name = "config",
    srcs = BIN_SOURCES,
    aliases = ALIASES,
    crate_name = "config",
    proc_macro_deps = MACRO_DEPENDENCIES,
    deps = [
        ":config_lib",
    ] + DEPENDENCIES,
)

rust_binary(
    name = "config_dev",
    srcs = BIN_SOURCES,
    aliases = ALIASES,
    crate_name = "config",
    proc_macro_deps = MACRO_DEPENDENCIES,
    deps = [
        ":config_lib_dev",
    ] + DEPENDENCIES,
)

rust_test(
    name = "config_test",
    crate = ":config_dev",
    crate_features = ["dev"],
    data = glob(["golden/*"]),
    env = {"CARGO_MANIFEST_DIR": "rs/ic_os/generate_guestos_vm_config"},
    # Run without sandbox so that goldenfiles can be updated by passing "--test_env UPDATE_GOLDENFILES=1"
    tags = ["local"],
    # You may add other deps that are specific to the test configuration
    deps = DEV_DEPENDENCIES,
)

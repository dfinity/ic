load("@rules_rust//cargo:defs.bzl", "cargo_build_script")
load("@rules_rust//rust:defs.bzl", "rust_library", "rust_test")

package(default_visibility = ["//rs:ic-os-pkg"])

cargo_build_script(
    name = "build_script",
    srcs = ["build.rs"],
    build_script_env = {
        "CARGO_MANIFEST_DIR": "rs/ic_os/attestation",
        "PROTOC": "$(execpath @com_google_protobuf//:protoc)",
        "RUSTFMT": "$(execpath @rules_rust//rust/toolchain:current_rustfmt_files)",
    },
    data = [
        "proto/attestation.proto",
        "@com_google_protobuf//:protoc",
        "@rules_rust//rust/toolchain:current_rustfmt_files",
    ],
    deps = [
        "@crate_index//:prost-build",
        "@crate_index//:tonic-build",
    ],
)

rust_library(
    name = "attestation",
    srcs = glob(["src/**/*.rs"]),
    crate_name = "attestation",
    deps = [
        ":build_script",
        "//rs/ic_os/config_types",
        "//rs/ic_os/sev",
        "//rs/interfaces/registry",
        "//rs/protobuf",
        "//rs/registry/helpers",
        "//rs/types/types",
        "@crate_index//:anyhow",
        "@crate_index//:candid",
        "@crate_index//:der",
        "@crate_index//:itertools",
        "@crate_index//:pem",
        "@crate_index//:prost",
        "@crate_index//:ring",
        "@crate_index//:serde",
        "@crate_index//:sev",
        "@crate_index//:thiserror",
        "@crate_index//:tonic",
    ],
)

rust_test(
    name = "attestation_test",
    crate = ":attestation",
    deps = ["//rs/ic_os/attestation/testing"],
)

load("@rules_rust//cargo:defs.bzl", "cargo_build_script")
load("@rules_rust//rust:defs.bzl", "rust_binary", "rust_library", "rust_test")
load("//bazel:defs.bzl", "rust_ic_test")

BUILD_DEPENDENCIES = []

LIB_DEPENDENCIES = [
    # Keep sorted.
    "//packages/ic-ed25519",
    "//packages/ic-error-types",
    "//packages/pocket-ic:pocket-ic",
    "//rs/bitcoin/adapter",
    "//rs/boundary_node/ic_boundary",
    "//rs/canister_sandbox:backend_lib",
    "//rs/config",
    "//rs/crypto/iccsa",
    "//rs/crypto/sha2",
    "//rs/crypto/utils/threshold_sig_der",
    "//rs/http_endpoints/nns_delegation_manager",
    "//rs/http_endpoints/public",
    "//rs/https_outcalls/adapter:adapter_with_http",
    "//rs/https_outcalls/client",
    "//rs/https_outcalls/service",
    "//rs/interfaces",
    "//rs/interfaces/adapter_client",
    "//rs/interfaces/registry",
    "//rs/interfaces/state_manager",
    "//rs/ledger_suite/icp:icp_ledger",
    "//rs/ledger_suite/icp/index:ic-icp-index",
    "//rs/ledger_suite/icrc1/index-ng",
    "//rs/limits",
    "//rs/monitoring/logger",
    "//rs/monitoring/metrics",
    "//rs/nns/cmc",
    "//rs/nns/common",
    "//rs/nns/constants",
    "//rs/nns/governance/api",
    "//rs/nns/governance/init",
    "//rs/nns/handlers/root/impl:root",
    "//rs/nns/sns-wasm",
    "//rs/protobuf",
    "//rs/registry/canister",
    "//rs/registry/keys",
    "//rs/registry/proto_data_provider",
    "//rs/registry/routing_table",
    "//rs/registry/subnet_type",
    "//rs/registry/transport",
    "//rs/replicated_state",
    "//rs/state_machine_tests",
    "//rs/state_manager",
    "//rs/test_utilities",
    "//rs/test_utilities/registry",
    "//rs/types/management_canister_types",
    "//rs/types/types",
    "//rs/utils/thread",
    "//rs/validator/ingress_message",
    "@crate_index//:aide",
    "@crate_index//:askama",
    "@crate_index//:axum",
    "@crate_index//:axum-extra",
    "@crate_index//:axum-server",
    "@crate_index//:backoff",
    "@crate_index//:base64",
    "@crate_index//:bitcoin",
    "@crate_index//:bytes",
    "@crate_index//:candid",
    "@crate_index//:clap",
    "@crate_index//:ctrlc",
    "@crate_index//:flate2",
    "@crate_index//:form_urlencoded",
    "@crate_index//:fqdn",
    "@crate_index//:futures",
    "@crate_index//:hex",
    "@crate_index//:http",
    "@crate_index//:http-body-util",
    "@crate_index//:hyper",
    "@crate_index//:hyper-util",
    "@crate_index//:ic-agent",
    "@crate_index//:ic-cdk",
    "@crate_index//:ic-gateway",
    "@crate_index//:ic-utils",
    "@crate_index//:itertools",
    "@crate_index//:libc",
    "@crate_index//:rand",
    "@crate_index//:reqwest",
    "@crate_index//:serde",
    "@crate_index//:serde_cbor",
    "@crate_index//:serde_json",
    "@crate_index//:slog",
    "@crate_index//:strum",
    "@crate_index//:tempfile",
    "@crate_index//:time",
    "@crate_index//:tokio",
    "@crate_index//:tokio-util",
    "@crate_index//:tonic",
    "@crate_index//:tower",
    "@crate_index//:tower-http",
    "@crate_index//:tracing",
    "@crate_index//:tracing-appender",
    "@crate_index//:tracing-subscriber",
    "@crate_index//:uuid",
    "@crate_index//:wat",
]

TEST_DEPENDENCIES = [
    # Keep sorted.
    "//packages/pocket-ic:pocket-ic",
    "//rs/bitcoin/adapter/test_utils",
    "//rs/config",
    "//rs/interfaces/registry",
    "//rs/nns/constants",
    "//rs/registry/canister",
    "//rs/registry/proto_data_provider",
    "//rs/registry/routing_table",
    "//rs/registry/transport",
    "//rs/types/management_canister_types",
    "//rs/types/types",
    "@crate_index//:candid",
    "@crate_index//:candid_parser",
    "@crate_index//:flate2",
    "@crate_index//:hex",
    "@crate_index//:ic-agent",
    "@crate_index//:ic-btc-interface",
    "@crate_index//:ic-cdk",
    "@crate_index//:ic-gateway",
    "@crate_index//:ic-utils",
    "@crate_index//:nix",
    "@crate_index//:prometheus",
    "@crate_index//:rcgen",
    "@crate_index//:reqwest",
    "@crate_index//:rustls",
    "@crate_index//:serde",
    "@crate_index//:serde_json",
    "@crate_index//:slog",
    "@crate_index//:tempfile",
    "@crate_index//:tokio",
    "@crate_index//:walrus",
    "@crate_index//:wat",
]

SPEC_TEST_DEPENDENCIES = TEST_DEPENDENCIES + [
    "//rs/tests/research/spec_compliance",
    "//rs/registry/subnet_type",
]

MACRO_DEPENDENCIES = [
    "@crate_index//:async-trait",
]

ALIASES = {}

MAINNET_CANISTER_DATA = [
    "@internet_identity_dev_at_mainnet_commit//file",
    "@mainnet_cycles_ledger_canister//file",
    "@mainnet_cycles_ledger_index//file",
    "@mainnet_ic-icrc1-archive//file",
    "@mainnet_ic-icrc1-index-ng//file",
    "@mainnet_ic-icrc1-ledger//file",
    "@mainnet_icp_index_canister//file",
    "@mainnet_icp_ledger_canister//file",
    "@mainnet_nns_cycles-minting-canister//file",
    "@mainnet_nns_registry_canister//file",
    "@mainnet_nns_root-canister//file",
    "@mainnet_nns_sns-wasm-canister//file",
    "@mainnet_sns-governance-canister//file",
    "@mainnet_sns-root-canister//file",
    "@mainnet_sns-swap-canister//file",
    "@nns_governance_canister_test_at_mainnet_commit//file",
    "@sns_aggregator//file",
    "@nns_dapp_canister//file",
]

MAINNET_CANISTER_ENV = {
    "REGISTRY_CANISTER_WASM_PATH": "$(location @mainnet_nns_registry_canister//file)",
    "CYCLES_MINTING_CANISTER_WASM_PATH": "$(location @mainnet_nns_cycles-minting-canister//file)",
    "ICP_LEDGER_CANISTER_WASM_PATH": "$(location @mainnet_icp_ledger_canister//file)",
    "ICP_INDEX_CANISTER_WASM_PATH": "$(location @mainnet_icp_index_canister//file)",
    "CYCLES_LEDGER_CANISTER_WASM_PATH": "$(location @mainnet_cycles_ledger_canister//file)",
    "CYCLES_LEDGER_INDEX_CANISTER_WASM_PATH": "$(location @mainnet_cycles_ledger_index//file)",
    "GOVERNANCE_TEST_CANISTER_WASM_PATH": "$(location @nns_governance_canister_test_at_mainnet_commit//file)",
    "ROOT_CANISTER_WASM_PATH": "$(location @mainnet_nns_root-canister//file)",
    "SNS_WASM_CANISTER_WASM_PATH": "$(location @mainnet_nns_sns-wasm-canister//file)",
    "SNS_ROOT_CANISTER_WASM_PATH": "$(location @mainnet_sns-root-canister//file)",
    "SNS_GOVERNANCE_CANISTER_WASM_PATH": "$(location @mainnet_sns-governance-canister//file)",
    "SNS_SWAP_CANISTER_WASM_PATH": "$(location @mainnet_sns-swap-canister//file)",
    "SNS_LEDGER_CANISTER_WASM_PATH": "$(location @mainnet_ic-icrc1-ledger//file)",
    "SNS_LEDGER_ARCHIVE_CANISTER_WASM_PATH": "$(location @mainnet_ic-icrc1-archive//file)",
    "SNS_LEDGER_INDEX_CANISTER_WASM_PATH": "$(location @mainnet_ic-icrc1-index-ng//file)",
    "SNS_AGGREGATOR_TEST_CANISTER_WASM_PATH": "$(location @sns_aggregator//file)",
    "INTERNET_IDENTITY_TEST_CANISTER_WASM_PATH": "$(location @internet_identity_dev_at_mainnet_commit//file)",
    "NNS_DAPP_TEST_CANISTER_WASM_PATH": "$(location @nns_dapp_canister//file)",
}

cargo_build_script(
    name = "build_script",
    srcs = ["build.rs"],
    aliases = ALIASES,
    build_script_env = MAINNET_CANISTER_ENV,
    data = MAINNET_CANISTER_DATA + [
        "templates/dashboard.html",
    ],
    deps = BUILD_DEPENDENCIES,
)

rust_binary(
    name = "pocket-ic-server",
    testonly = True,
    srcs = ["src/main.rs"],
    proc_macro_deps = MACRO_DEPENDENCIES,
    # TODO: restrict the visibility
    visibility = ["//visibility:public"],
    deps = LIB_DEPENDENCIES + [
        ":pocket-ic-server-lib",
        "//rs/canister_sandbox:build_script",
    ],
)

rust_library(
    name = "pocket-ic-server-lib",
    testonly = True,
    srcs = [
        "src/beta_features.rs",
        "src/external_canister_types.rs",
        "src/lib.rs",
        "src/pocket_ic.rs",
    ] + glob([
        "src/state_api/**/*.rs",
    ]),
    compile_data = MAINNET_CANISTER_DATA,
    crate_name = "pocket_ic_server",
    proc_macro_deps = MACRO_DEPENDENCIES,
    rustc_env = MAINNET_CANISTER_ENV,
    version = "9.0.3",
    deps = LIB_DEPENDENCIES + [":build_script"],
)

rust_ic_test(
    name = "pocket-ic-server-lib-test",
    crate = ":pocket-ic-server-lib",
    proc_macro_deps = MACRO_DEPENDENCIES,
    deps = TEST_DEPENDENCIES,
)

rust_test(
    name = "external_types_tests",
    size = "small",
    srcs = ["tests/external_types_tests.rs"],
    data = MAINNET_CANISTER_DATA,
    rustc_env = MAINNET_CANISTER_ENV,
    # this test is manual to not block automatic PR merge
    # bumping mainnet canister versions
    # from which the external types are derived
    tags = ["pocketic_tests_nightly"],
    deps = [":pocket-ic-server-lib"] + TEST_DEPENDENCIES,
)

[
    rust_test(
        name = name,
        size = "medium",
        srcs = [
            "tests/common.rs",
            "tests/" + name + ".rs",
        ],
        aliases = {},
        data = [
            ":pocket-ic-server",
            "@ii_dev_canister//file",
            "@mozilla_root_ca_store//file",
        ],
        env = {
            "RUST_TEST_THREADS": "2",
            "POCKET_IC_BIN": "$(rootpath :pocket-ic-server)",
            "II_WASM": "$(rootpath @ii_dev_canister//file)",
            "SSL_CERT_FILE": "$(rootpath @mozilla_root_ca_store//file)",
        },
        tags = [
            "cpu:8",
            # TODO: remove 'requires-network' tag when the root cause for sporadic error below on Apple Silicon is identified and fixed.
            #  ---- test_http_gateway stdout ----
            #  thread 'test_http_gateway' panicked at rs/pocket_ic_server/tests/test.rs:383:48:
            #  called `Result::unwrap()` on an `Err` value: reqwest::Error {
            #    kind: Request, url: "http://7tjcv-pp777-77776-qaaaa-cai.raw.localhost:49380/",
            #    source: hyper_util::client::legacy::Error(
            #      Connect,
            #      ConnectError("tcp connect error", Os { code: 1, kind: PermissionDenied, message: "Operation not permitted" })
            #    )
            #  }
            "requires-network",
            "test_macos",
        ],
        deps = TEST_DEPENDENCIES,
    )
    for name in [
        "test",
        "gateway",
    ]
]

rust_test(
    name = "spec_test",
    # the test sometimes times out on CI with default timeout
    # of "moderate" (5 minutes) - 2025-07-03
    timeout = "long",
    srcs = [
        "tests/common.rs",
        "tests/spec_test.rs",
    ],
    data = [
        ":pocket-ic-server",
        "//hs/spec_compliance:ic-ref-test",
        "//rs/tests/httpbin-rs:httpbin",
        "//rs/tests/research:ic-hs",
        "//rs/universal_canister/impl:universal_canister.wasm.gz",
    ],
    env = {
        "HTTPBIN_BIN": "$(rootpath //rs/tests/httpbin-rs:httpbin)",
        "POCKET_IC_BIN": "$(rootpath :pocket-ic-server)",
        "IC_REF_TEST_ROOT": "rs/tests/research/ic-hs",
        "IC_REF_TEST_BIN": "$(rootpath //hs/spec_compliance:ic-ref-test)",
        "UNIVERSAL_CANISTER_WASM_PATH": "$(rootpath //rs/universal_canister/impl:universal_canister.wasm.gz)",
    },
    tags = [
        "cpu:8",
    ],
    deps = SPEC_TEST_DEPENDENCIES,
)

rust_test(
    name = "bitcoin_integration_tests",
    size = "small",
    srcs = [
        "tests/bitcoin_integration_tests.rs",
    ],
    aliases = {},
    data = [
        ":pocket-ic-server",
        "//:bitcoind",
        "@bitcoin_example_canister//file",
        "@btc_canister//file",
        "@mozilla_root_ca_store//file",
    ],
    env = {
        "POCKET_IC_BIN": "$(rootpath :pocket-ic-server)",
        "BASIC_BITCOIN_WASM": "$(rootpath @bitcoin_example_canister//file)",
        "BITCOIND_BIN": "$(rootpath //:bitcoind)",
        "BTC_WASM": "$(rootpath @btc_canister//file)",
        "SSL_CERT_FILE": "$(rootpath @mozilla_root_ca_store//file)",
    },
    tags = [
        # TODO: remove 'requires-network' tag when the root cause for sporadic error below on Apple Silicon is identified and fixed.
        # Failed to crate http gateway: Failed to bind to address 127.0.0.1:0: Operation not permitted (os error 1)
        "requires-network",
        "test_macos",
    ],
    deps = TEST_DEPENDENCIES,
)

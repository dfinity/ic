[package]
name = "ic-http-endpoints-public"
version.workspace = true
authors.workspace = true
edition.workspace = true
description.workspace = true
documentation.workspace = true

[dependencies]
askama = { workspace = true }
async-trait = { workspace = true }
axum = { workspace = true }
bytes = { workspace = true }
byte-unit = "4.0.14"
cfg-if = "1.0.0"
crossbeam = "0.8.4"
hex = { workspace = true }
http = "1"
http-body = "1.0.0"
http-body-util = "0.1.0"
futures = { workspace = true }
futures-util = { workspace = true }
hyper = { workspace = true }
hyper-util = { version = "0.1.3", features = ["full"] }
ic-async-utils = { path = "../../async_utils" }
ic-certification = { path = "../../certification" }
ic-config = { path = "../../config" }
ic-crypto-interfaces-sig-verification = { path = "../../crypto/interfaces/sig_verification" }
ic-crypto-tls-interfaces = { path = "../../crypto/tls_interfaces" }
ic-crypto-tree-hash = { path = "../../crypto/tree_hash" }
ic-crypto-utils-threshold-sig-der = { path = "../../crypto/utils/threshold_sig_der" }
ic-error-types = { path = "../../types/error_types" }
ic-interfaces = { path = "../../interfaces" }
ic-interfaces-registry = { path = "../../interfaces/registry" }
ic-interfaces-state-manager = { path = "../../interfaces/state_manager" }
ic-logger = { path = "../../monitoring/logger" }
ic-tracing = { path = "../../monitoring/tracing" }
ic-metrics = { path = "../../monitoring/metrics" }
ic-pprof = { path = "../../monitoring/pprof" }
ic-registry-client-helpers = { path = "../../registry/helpers" }
ic-registry-provisional-whitelist = { path = "../../registry/provisional_whitelist" }
ic-registry-subnet-type = { path = "../../registry/subnet_type" }
ic-replicated-state = { path = "../../replicated_state" }
ic-types = { path = "../../types/types" }
ic-validator = { path = "../../validator" }
inferno = "0.11.19"
prometheus = { workspace = true }
prost = { workspace = true }
rand = "0.8.3"
serde = { workspace = true }
serde_cbor = { workspace = true }
slog = { workspace = true }
tempfile = "3.1.0"
threadpool = "1.8.1"
tokio = { workspace = true }
tokio-io-timeout = "1.2.0"
tokio-rustls = { workspace = true }
tower = { workspace = true }
tower-http = { version = "0.5.2", features = ["limit", "cors"] }
tracing-flame = "0.2.0"
tracing-subscriber = { workspace = true }
url = "2.1.1"


[target.'cfg(target_os = "linux")'.dependencies]
# this library uses libunwind, which is only applicable to Linux
ic-backtrace = { path = "../../monitoring/backtrace" }

[dev-dependencies]
ic-canister-client = { path = "../../canister_client" }
ic-canister-client-sender = { path = "../../canister_client/sender" }
ic-canonical-state = { path = "../../canonical_state" }
ic-certification-test-utils = { path = "../../certification/test-utils" }
ic-crypto-temp-crypto = { path = "../../crypto/temp_crypto" }
ic-crypto-tls-interfaces-mocks = { path = "../../crypto/tls_interfaces/mocks" }
ic-interfaces-mocks = { path = "../../interfaces/mocks" }
ic-interfaces-registry-mocks = { path = "../../interfaces/registry/mocks" }
ic-interfaces-state-manager-mocks = { path = "../../interfaces/state_manager/mocks" }
ic-protobuf = { path = "../../protobuf" }
ic-registry-keys = { path = "../../registry/keys" }
ic-registry-routing-table = { path = "../../registry/routing_table" }
ic-test-utilities = { path = "../../test_utilities" }
ic-test-utilities-state = { path = "../../test_utilities/state" }
ic-test-utilities-time = { path = "../../test_utilities/time" }
ic-test-utilities-types = { path = "../../test_utilities/types" }
mockall = { workspace = true }
maplit = "1.0.2"
pretty_assertions = { workspace = true }
proptest = "1.0.0"
rustls = { version = "0.21.12", features = ["dangerous_configuration"] }
serde_bytes = { workspace = true }
tower-test = "0.4.0"
reqwest = { workspace = true }
rstest = { workspace = true }

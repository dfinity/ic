---
source: rs/embedders/tests/instrumentation.rs
assertion_line: 53
expression: out
---
(module
  (type (;0;) (func (param i32 i32) (result i32)))
  (type (;1;) (func))
  (type (;2;) (func (param i64 i64 i32) (result i64)))
  (type (;3;) (func (param i32)))
  (type (;4;) (func (param i64 i64 i64)))
  (type (;5;) (func (param i64) (result i64)))
  (type (;6;) (func (param i32 i32) (result i32 i32)))
  (import "__" "out_of_instructions" (func $addTwo (;0;) (type 1)))
  (import "__" "try_grow_wasm_memory" (func (;1;) (type 0)))
  (import "__" "try_grow_stable_memory" (func (;2;) (type 2)))
  (import "__" "internal_trap" (func (;3;) (type 3)))
  (import "__" "stable_read_first_access" (func (;4;) (type 4)))
  (func (;5;) (type 0) (param i32 i32) (result i32)
    global.get 0
    i64.const 4
    i64.sub
    global.set 0
    global.get 0
    i64.const 0
    i64.lt_s
    if ;; label = @1
      call $addTwo
    end
    local.get 0
    local.get 1
    i32.add
  )
  (func (;6;) (type 5) (param i64) (result i64)
    (local i64)
    global.get 0
    local.get 0
    i64.sub
    local.tee 1
    global.get 0
    i64.gt_s
    if (result i64) ;; label = @1
      i64.const -9223372036854775808
    else
      local.get 1
    end
    global.set 0
    global.get 0
    i64.const 0
    i64.lt_s
    if ;; label = @1
      call $addTwo
    end
    local.get 0
  )
  (func (;7;) (type 6) (param i32 i32) (result i32 i32)
    (local i32 i32 i32 i32)
    local.get 0
    local.get 1
    i32.ge_u
    if ;; label = @1
      i32.const 0
      i32.const 0
      return
    end
    local.get 0
    local.set 2
    loop ;; label = @1
      local.get 2
      i32.load8_u 1
      local.tee 3
      i32.const 1
      i32.and
      local.get 4
      i32.add
      local.set 4
      local.get 3
      i32.const 1
      i32.shr_u
      i32.const 1
      i32.and
      local.get 5
      i32.add
      local.set 5
      local.get 2
      i32.const 1
      i32.add
      local.tee 2
      local.get 1
      i32.lt_u
      br_if 0 (;@1;)
    end
    local.get 1
    local.get 0
    i32.sub
    local.get 4
    i32.sub
    local.get 1
    local.get 0
    i32.sub
    local.get 5
    i32.sub
  )
  (memory (;0;) i64 0 6553600)
  (memory (;1;) 1600 1600)
  (global (;0;) (mut i64) i64.const 0)
  (global (;1;) (mut i64) i64.const 0)
  (global (;2;) (mut i64) i64.const 0)
  (export "addTwo" (func 5))
  (export "stable_memory" (memory 0))
  (export "stable_bytemap_memory" (memory 1))
  (export "canister counter_instructions" (global 0))
  (export "canister counter_dirty_pages" (global 1))
  (export "canister counter_accessed_pages" (global 2))
)

load("@rules_rust//rust:defs.bzl", "rust_binary", "rust_library", "rust_test")

package(default_visibility = ["//visibility:public"])

DEPENDENCIES = [
    "//rs/config",
    "//rs/crypto/utils/threshold_sig_der",
    "//rs/monitoring/logger",
    "//rs/orchestrator/registry_replicator",
    "//rs/recovery",
    "//rs/registry/client",
    "//rs/registry/helpers",
    "//rs/registry/local_store",
    "//rs/types/types",
    "@crate_index//:chrono",
    "@crate_index//:clap_3_2_25",
    "@crate_index//:rand",
    "@crate_index//:reqwest",
    "@crate_index//:serde",
    "@crate_index//:serde_json",
    "@crate_index//:slog",
    "@crate_index//:slog-async",
    "@crate_index//:slog-term",
    "@crate_index//:tokio",
    "@crate_index//:url",
]

DEV_DEPENDENCIES = [
    "//rs/test_utilities/tmpdir",
]

MACRO_DEPENDENCIES = []

ALIASES = {}

rust_library(
    name = "backup",
    testonly = True,
    srcs = glob(["src/**"]),
    aliases = ALIASES,
    crate_name = "ic_backup",
    proc_macro_deps = MACRO_DEPENDENCIES,
    version = "1.0.2",
    deps = DEPENDENCIES,
)

rust_binary(
    name = "ic-backup",
    testonly = True,
    srcs = ["src/main.rs"],
    aliases = ALIASES,
    proc_macro_deps = MACRO_DEPENDENCIES,
    deps = DEPENDENCIES + [":backup"],
)

rust_test(
    name = "backup_test",
    crate = ":backup",
    data = ["test_data/fake_input_config.json.template"],
    deps = DEPENDENCIES + DEV_DEPENDENCIES,
)

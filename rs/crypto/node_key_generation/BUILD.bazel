load("@rules_rust//rust:defs.bzl", "rust_library", "rust_test", "rust_test_suite")

package(default_visibility = ["//visibility:public"])

DEPENDENCIES = [
    "//rs/config",
    "//rs/crypto/internal/crypto_lib/threshold_sig/tecdsa",
    "//rs/crypto/internal/crypto_lib/types",
    "//rs/crypto/internal/crypto_service_provider",
    "//rs/crypto/internal/logmon",
    "//rs/crypto/node_key_validation",
    "//rs/crypto/tls_interfaces",
    "//rs/crypto/utils/basic_sig",
    "//rs/interfaces",
    "//rs/monitoring/logger",
    "//rs/protobuf",
    "//rs/types/types",
    "@crate_index//:tokio",
]

MACRO_DEPENDENCIES = []

DEV_DEPENDENCIES = [
    "//rs/crypto",
    "//rs/crypto/internal/csp_test_utils",
    "//rs/crypto/temp_crypto",
    "//rs/crypto/test_utils",
    "//rs/crypto/test_utils/keys",
    "//rs/crypto/test_utils/local_csp_vault",
    "//rs/monitoring/metrics",
    "//rs/registry/fake",
    "//rs/registry/proto_data_provider",
    "//rs/types/base_types",
    "//rs/types/types_test_utils",
    "//rs/test_utilities",
    "@crate_index//:assert_matches",
    "@crate_index//:hex",
    "@crate_index//:tempfile",
]

MACRO_DEV_DEPENDENCIES = []

ALIASES = {}

rust_library(
    name = "node_key_generation",
    srcs = glob(["src/**/*.rs"]),
    aliases = ALIASES,
    crate_name = "ic_crypto_node_key_generation",
    edition = "2021",
    proc_macro_deps = MACRO_DEPENDENCIES,
    deps = DEPENDENCIES,
)

rust_test(
    name = "node_key_generation_test",
    aliases = ALIASES,
    crate = ":node_key_generation",
    edition = "2021",
    proc_macro_deps = MACRO_DEPENDENCIES + MACRO_DEV_DEPENDENCIES,
    deps = DEPENDENCIES + DEV_DEPENDENCIES,
)

rust_test_suite(
    name = "node_key_generation_integration",
    srcs = glob(["tests/**/*.rs"]),
    aliases = ALIASES,
    edition = "2021",
    proc_macro_deps = MACRO_DEPENDENCIES + MACRO_DEV_DEPENDENCIES,
    deps = [":node_key_generation"] + DEPENDENCIES + DEV_DEPENDENCIES,
)

[package]
name = "ic-replica"
version.workspace = true
authors.workspace = true
edition.workspace = true
description.workspace = true
documentation.workspace = true

[dependencies]
clap = { workspace = true }
hex = { workspace = true }
ic-artifact-pool = { path = "../artifact_pool" }
ic-async-utils = { path = "../async_utils" }
ic-btc-adapter-client = { path = "../bitcoin/client" }
ic-btc-consensus = { path = "../bitcoin/consensus" }
ic-config = { path = "../config" }
ic-consensus = { path = "../consensus" }
ic-crypto = { path = "../crypto" }
ic-crypto-sha2 = { path = "../crypto/sha2" }
ic-cycles-account-manager = { path = "../cycles_account_manager" }
ic-execution-environment = { path = "../execution_environment" }
ic-http-endpoints-metrics = { path = "../http_endpoints/metrics" }
ic-http-endpoints-public = { path = "../http_endpoints/public" }
ic-http-endpoints-xnet = { path = "../http_endpoints/xnet" }
ic-https-outcalls-adapter-client = { path = "../https_outcalls/client" }
ic-interfaces = { path = "../interfaces" }
ic-interfaces-certified-stream-store = { path = "../interfaces/certified_stream_store" }
ic-interfaces-registry = { path = "../interfaces/registry" }
ic-interfaces-state-manager = { path = "../interfaces/state_manager" }
ic-logger = { path = "../monitoring/logger" }
ic-messaging = { path = "../messaging" }
ic-metrics = { path = "../monitoring/metrics" }
ic-pprof = { path = "../monitoring/pprof" }
ic-protobuf = { path = "../protobuf" }
ic-registry-client = { path = "../registry/client" }
ic-registry-client-helpers = { path = "../registry/helpers" }
ic-registry-local-store = { path = "../registry/local_store" }
ic-registry-subnet-type = { path = "../registry/subnet_type" }
ic-replica-setup-ic-network = { path = "./setup_ic_network" }
ic-replicated-state = { path = "../replicated_state" }
ic-state-manager = { path = "../state_manager" }
ic-sys = { path = "../sys" }
ic-tracing = { path = "../monitoring/tracing" }
ic-tracing-jaeger-exporter = { path = "../monitoring/tracing/jaeger_exporter" }
ic-types = { path = "../types/types" }
ic-xnet-payload-builder = { path = "../xnet/payload_builder" }
libc = { workspace = true }
nix = { workspace = true }
num_cpus = { workspace = true }
pprof = { workspace = true, optional = true }
prometheus = { workspace = true }
rand = { workspace = true }
regex = { workspace = true }
slog = { workspace = true }
tempfile = { workspace = true }
tikv-jemalloc-ctl = "0.5"
tikv-jemallocator = "0.5"
tokio = { workspace = true }
tracing = { workspace = true }
tracing-flame = "0.2.0"
tracing-subscriber = { workspace = true }

[dev-dependencies]
assert_cmd = { workspace = true }
canister-test = { path = "../rust_canisters/canister_test" }
criterion = { workspace = true }
ic-interfaces-registry-mocks = { path = "../interfaces/registry/mocks" }
ic-management-canister-types = { path = "../types/management_canister_types" }
ic-test-utilities = { path = "../test_utilities" }
predicates = { workspace = true }
wat = { workspace = true }

[[bench]]
name = "calls"
harness = false

[[bin]]
name = "replica"
path = "src/main.rs"

[features]
profiler = ["pprof"]
malicious_code = [
    "ic-consensus/malicious_code",
    "ic-state-manager/malicious_code",
]

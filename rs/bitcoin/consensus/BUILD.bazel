load("@rules_rust//rust:defs.bzl", "rust_library", "rust_test")

package(default_visibility = ["//visibility:public"])

rust_library(
    name = "consensus",
    srcs = glob(["src/**"]),
    crate_name = "ic_btc_consensus",
    version = "0.1.0",
    deps = [
        # Keep sorted.
        "//packages/ic-error-types",
        "//rs/bitcoin/replica_types",
        "//rs/config",
        "//rs/interfaces",
        "//rs/interfaces/adapter_client",
        "//rs/interfaces/registry",
        "//rs/interfaces/state_manager",
        "//rs/monitoring/logger",
        "//rs/monitoring/metrics",
        "//rs/protobuf",
        "//rs/registry/helpers",
        "//rs/registry/subnet_features",
        "//rs/replicated_state",
        "//rs/types/types",
        "@crate_index//:prometheus",
        "@crate_index//:prost",
        "@crate_index//:slog",
        "@crate_index//:thiserror",
    ],
)

rust_test(
    name = "consensus_test",
    crate = ":consensus",
    crate_features = [
        "proptest",
    ],
    deps = [
        # Keep sorted.
        "//packages/ic-error-types",
        "//rs/bitcoin/replica_types",
        "//rs/config",
        "//rs/interfaces",
        "//rs/interfaces/adapter_client",
        "//rs/interfaces/registry",
        "//rs/interfaces/registry/mocks",
        "//rs/interfaces/state_manager",
        "//rs/interfaces/state_manager/mocks",
        "//rs/monitoring/logger",
        "//rs/monitoring/metrics",
        "//rs/protobuf",
        "//rs/registry/helpers",
        "//rs/registry/subnet_features",
        "//rs/replicated_state",
        "//rs/test_utilities",
        "//rs/test_utilities/logger",
        "//rs/test_utilities/state",
        "//rs/test_utilities/time",
        "//rs/test_utilities/types",
        "//rs/types/types",
        "@crate_index//:ic-btc-interface",
        "@crate_index//:mockall",
        "@crate_index//:prometheus",
        "@crate_index//:proptest",
        "@crate_index//:prost",
        "@crate_index//:slog",
        "@crate_index//:thiserror",
    ],
)

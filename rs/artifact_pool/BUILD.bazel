load("@rules_rust//rust:defs.bzl", "rust_binary", "rust_library", "rust_test")
load("//bazel:defs.bzl", "rust_bench")

package(default_visibility = ["//visibility:public"])

DEPENDENCIES = [
    # Keep sorted.
    "//rs/config",
    "//rs/constants",
    "//rs/interfaces",
    "//rs/monitoring/logger",
    "//rs/monitoring/metrics",
    "//rs/protobuf",
    "//rs/sys",
    "//rs/types/types",
    "@crate_index//:bincode",
    "@crate_index//:byteorder",
    "@crate_index//:clap_3_2_25",
    "@crate_index//:nix",
    "@crate_index//:prometheus",
    "@crate_index//:prost",
    "@crate_index//:serde",
    "@crate_index//:serde_json",
    "@crate_index//:slog",
    "@crate_index//:strum",
    "@crate_index//:tempfile",
    "@lmdb_rkv",
    "@lmdb_rkv//lmdb-sys",
] + select({
    "@platforms//os:osx": [
        "@crate_index//:rocksdb",
    ],
    "//conditions:default": [
    ],
})

MACRO_DEPENDENCIES = []

ALIASES = {}

DEV_DEPENDENCIES = [
    # Keep sorted.
    "//rs/crypto/test_utils/canister_threshold_sigs",
    "//rs/test_utilities",
    "//rs/test_utilities/artifact_pool",
    "//rs/test_utilities/consensus",
    "//rs/test_utilities/logger",
    "//rs/test_utilities/registry",
    "//rs/test_utilities/time",
    "//rs/test_utilities/types",
    "//rs/types/management_canister_types",
    "@crate_index//:criterion",
    "@crate_index//:rand",
    "@crate_index//:slog-async",
    "@crate_index//:slog-envlogger",
    "@crate_index//:slog-term",
]

DEV_MACRO_DEPENDENCIES = []

rust_library(
    name = "artifact_pool",
    srcs = glob(["src/**"]),
    aliases = ALIASES,
    crate_features = select({
        "@platforms//os:osx": ["rocksdb_backend"],
        "//conditions:default": [],
    }),
    crate_name = "ic_artifact_pool",
    proc_macro_deps = MACRO_DEPENDENCIES,
    version = "0.9.0",
    deps = DEPENDENCIES,
)

rust_binary(
    name = "ic-consensus-pool-util",
    srcs = ["src/bin/consensus_pool_util.rs"],
    aliases = ALIASES,
    proc_macro_deps = MACRO_DEPENDENCIES,
    deps = DEPENDENCIES + [
        ":artifact_pool",
        "@crate_index//:serde-bytes-repr",
    ],
)

rust_test(
    name = "artifact_pool_test",
    crate = ":artifact_pool",
    deps = DEV_DEPENDENCIES,
)

rust_bench(
    name = "load_blocks_bench",
    testonly = True,
    srcs = ["benches/load_blocks.rs"],
    aliases = ALIASES,
    proc_macro_deps = MACRO_DEPENDENCIES + DEV_MACRO_DEPENDENCIES,
    deps = DEPENDENCIES + DEV_DEPENDENCIES + [":artifact_pool"],
)

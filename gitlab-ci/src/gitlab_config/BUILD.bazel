load("@python_deps//:requirements.bzl", "requirement")
load("@rules_python//python:defs.bzl", "py_library")

py_library(
    name = "utils",
    srcs = ["utils.py"],
)

py_library(
    name = "dfinity_gitlab_config",
    srcs = ["dfinity_gitlab_config.py"],
    deps = [
        ":utils",
        requirement("gitpython"),
        requirement("python-gitlab"),
        requirement("pyyaml"),
    ],
)

py_test(
    name = "validate_job_name",
    srcs = ["main.py"],
    args = [
        "--cfg-validate-job-name",
        "--cfg-file",
        "gitlab-ci/config/zz-generated-gitlab-ci.yaml",
    ],
    data = ["//gitlab-ci/config:zz_generated"],
    imports = ["../../src/"],  # this specifies the PYTHONPATH
    main = "main.py",
    deps = [
        ":dfinity_gitlab_config",
    ],
)

py_test(
    name = "bash_linter",
    srcs = ["main.py"],
    args = [
        "--cfg-bash-linter",
        "--cfg-file",
        "gitlab-ci/config/zz-generated-gitlab-ci.yaml",
    ],
    data = ["//gitlab-ci/config:zz_generated"],
    imports = ["../../src/"],
    main = "main.py",
    deps = [
        ":dfinity_gitlab_config",
    ],
)

py_test(
    name = "gitlab_config_linter",
    srcs = ["main.py"],
    args = [
        "--cfg-gitlab-linter",
        "--cfg-file",
        "gitlab-ci/config/zz-generated-gitlab-ci.yaml",
    ],
    data = ["//gitlab-ci/config:zz_generated"],
    env_inherit = [
        "HOME",
    ],
    imports = ["../../src/"],
    main = "main.py",
    tags = [
        "requires-network",
    ],
    deps = [
        ":dfinity_gitlab_config",
    ],
)

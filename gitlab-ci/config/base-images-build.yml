.rules-build-base-images:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $SCHEDULE_NAME == "build-push-base-images"'
    - if: '$CI_COMMIT_BRANCH == "master" && $CI_PIPELINE_SOURCE == "schedule" && $SCHEDULE_NAME == "run-all-master"'
      when: manual
      allow_failure: true
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - gitlab-ci/config/base-images-build.yml
        - ic-os/boundary-guestos/context/Dockerfile.base
        - ic-os/guestos/context/Dockerfile.base
        - ic-os/guestos/context/packages.common
        - ic-os/guestos/context/packages.dev
        - ic-os/hostos/context/Dockerfile.base
        - ic-os/hostos/context/packages.common
        - ic-os/hostos/context/packages.dev
        - ic-os/setupos/context/Dockerfile.base
        - ic-os/setupos/context/packages.common
        - ic-os/setupos/context/packages.dev

.build-base-image: &build-base-image |
  set -euo pipefail

  TAG=$(date '+%Y-%m-%d-%H%M')
  echo -e "\e[0Ksection_start:$(date +%s):${IMAGE}[collapsed=true]\r\e[0KClick here to see the ${IMAGE} build"
  pushd "$CONTEXT"
  podman build "${BUILD_ARGS[@]}" --squash-all --no-cache -t "docker.io/dfinity/${IMAGE}:${TAG}" -f Dockerfile.base .
  popd
  echo -e "\e[0Ksection_end:$(date +%s):${IMAGE}\r\e[0K"

  if [ "${CI_COMMIT_REF_NAME:-}" == "master" ]; then
      podman login -u "$DOCKER_HUB_USER" -p "$DOCKER_HUB_PASSWORD" docker.io
      podman push "dfinity/${IMAGE}:${TAG}" --digestfile digestfile
      echo "dfinity/${IMAGE}@$(cat digestfile)" > "digestfile-${IMAGE}"
      echo "$REF_FILE" >> "digestfile-${IMAGE}"
      rm -f digestfile
  fi

.build-base-image-job:
  extends:
    - .rules-build-base-images
  needs: []
  artifacts:
    paths:
      - digestfile*
  script:
  - *build-base-image

build-guestos-base:
  extends:
    - .build-base-image-job
  variables:
    CONTEXT: "${CI_PROJECT_DIR}/ic-os/guestos/context"
    IMAGE: "guestos-base"
    REF_FILE: "ic-os/guestos/context/docker-base.prod"

build-guestos-base-dev:
  extends:
    - .build-base-image-job
  variables:
    CONTEXT: "${CI_PROJECT_DIR}/ic-os/guestos/context"
    IMAGE: "guestos-base-dev"
    REF_FILE: "ic-os/guestos/context/docker-base.dev"
  script:
  - BUILD_ARGS=(--build-arg "PACKAGE_FILES=packages.common packages.dev")
  - *build-base-image

build-boundaryos-base:
  extends:
    - .build-base-image-job
  variables:
    CONTEXT: "${CI_PROJECT_DIR}/ic-os/boundary-guestos/context"
    IMAGE: "boundaryos-base"
    REF_FILE: "ic-os/boundary-guestos/context/docker-base.prod"

build-hostos-base:
  extends:
    - .build-base-image-job
  variables:
    CONTEXT: "${CI_PROJECT_DIR}/ic-os/hostos/context"
    IMAGE: "hostos-base"
    REF_FILE: "ic-os/hostos/context/docker-base.prod"

build-hostos-base-dev:
  extends:
    - .build-base-image-job
  variables:
    CONTEXT: "${CI_PROJECT_DIR}/ic-os/hostos/context"
    IMAGE: "hostos-base-dev"
    REF_FILE: "ic-os/hostos/context/docker-base.dev"
  script:
  - BUILD_ARGS=(--build-arg "PACKAGE_FILES=packages.common packages.dev")
  - *build-base-image

build-setupos-base:
  extends:
    - .build-base-image-job
  variables:
    CONTEXT: "${CI_PROJECT_DIR}/ic-os/setupos/context"
    IMAGE: "setupos-base"
    REF_FILE: "ic-os/setupos/context/docker-base.prod"

build-setupos-base-dev:
  extends:
    - .build-base-image-job
  variables:
    CONTEXT: "${CI_PROJECT_DIR}/ic-os/setupos/context"
    IMAGE: "setupos-base-dev"
    REF_FILE: "ic-os/setupos/context/docker-base.dev"
  script:
  - BUILD_ARGS=(--build-arg "PACKAGE_FILES=packages.common packages.dev")
  - *build-base-image

build-base-images-ref-update:
  extends:
    - .rules-build-base-images
  needs:
    - build-guestos-base
    - build-guestos-base-dev
    - build-boundaryos-base
    - build-hostos-base
    - build-hostos-base-dev
    - build-setupos-base
    - build-setupos-base-dev
  dependencies:
    - build-guestos-base
    - build-guestos-base-dev
    - build-boundaryos-base
    - build-hostos-base
    - build-hostos-base-dev
    - build-setupos-base
    - build-setupos-base-dev
  script:
   - |
     set -euo pipefail
     if ! ls -1 digestfile-*; then
       echo "No digestfiles, nothing to do!"
       exit 0
     fi

     # update image ref in ref files
     for FILE in digestfile-*; do
         IMAGE="$(head -1 "$FILE")"
         REF_FILE="$(tail -1 "$FILE")"
         echo "docker.io/$IMAGE" > "$REF_FILE"
     done
     rm -f digestfile*

     # commit, push & create new merge request
     TAG=$(date '+%Y-%m-%d-%H%M')
     git remote set-url origin \
         "https://gitlab-ci-token:${GITLAB_API_TOKEN}@gitlab.com/${CI_PROJECT_PATH}.git" || true
     git config --global user.email "idx@dfinity.org"
     git config --global user.name "IDX GitLab Automation"
     git checkout -b "base-image-refs-update-${TAG}"
     git add .
     if git diff --cached --quiet; then
         echo "No changes to commit."
         exit 0
     fi
     git commit -m "Updating container base image refs"
     git push \
         -o merge_request.create \
         -o merge_request.title="Updating container base images refs [$TAG]" \
         origin "base-image-refs-update-${TAG}" 2>&1 | tee push.info

stages:
  - init
  - test
  - finalize

default:
  # Retry config copied from:
  # https://gitlab.com/gitlab-org/gitlab/blob/master/.gitlab/ci/global.gitlab-ci.yml#L1-9
  # Complete description available at:
  # https://docs.gitlab.com/ee/ci/yaml/#retry
  retry:
    max: 2  # This is confusing but this means "3 runs at max".
    when:
      - unknown_failure
      - api_failure
      - runner_system_failure
  # Generally only the last push to a branch matters and older jobs can be cancelled.
  # https://docs.gitlab.com/ee/ci/yaml/#interruptible
  # Jobs can override this by setting `interruptible: false`.
  interruptible: true
  artifacts:
    expire_in: 3 days
    when: always
  image:
    name: "registry.gitlab.com/dfinity-lab/core/docker/ic-build:96177205e9f7896a8b5501abfb1cc6fc5f584f2b5cf99f06ba922e05597ad7d9"
  tags:
    - dfinity-ic

variables:
  TEST_ES_HOSTNAMES: >-
    elasticsearch.testnet.dfinity.network:443
  GIT_CLONE_PATH: $CI_BUILDS_DIR/clean/$CI_PROJECT_NAME
  GET_SOURCES_ATTEMPTS: 5
  GIT_DEPTH: 0  # Pull the complete repo initially
  GIT_STRATEGY: "fetch"  # And then pull only new commits

before_script:
  - |
    # Execute the before_script section
    echo -e "\e[0Ksection_end:$(date +%s):before_script\r\e[0K"  # first close before_script section, if open

    # Start the (collapsed) before_script section
    set -eExuo pipefail
    echo -e "\e[0Ksection_start:$(date +%s):before_script[collapsed=true]\r\e[0KClick here to see the before_script section"

    date +%s > "/tmp/job_start_date_${CI_JOB_ID:-}"
    # date -Iseconds is not supported by BSD date (macOS)
    date +"%Y-%m-%dT%H:%M:%S%z" > "/tmp/job_start_iso_date_${CI_JOB_ID:-}"
    date
    command -v ssh-agent > /dev/null
    test -z "${SSH_AUTH_SOCK:-}" && { eval "$(ssh-agent -s)"; ssh-add - <<< "${SSH_PRIVATE_KEY}"; }
    mkdir -p ~/.ssh
    chmod 0700 ~/.ssh

    echo -e "Host *\nUser gitlab-runner\n" > ~/.ssh/config
    date

    export ROOT_PIPELINE_ID=${PARENT_PIPELINE_ID:-$CI_PIPELINE_ID}

    if [ "${CI_DISPOSABLE_ENVIRONMENT:-false}" != "true" ]; then
      # MacOS + shell builds
      export CARGO_TARGET_DIR="$CI_PROJECT_DIR/target"
    fi

    # docker login for RO to overcome anonymous pull limit of 100 pulls / 6h
    # enterprise logged in account has 5000 pulls / 24h
    if [ "$(uname)" == "Linux" ]; then
      docker login -u "$DOCKER_HUB_USER" -p "$DOCKER_HUB_PASSWORD_RO"
      docker-bin login -u "$DOCKER_HUB_USER" -p "$DOCKER_HUB_PASSWORD_RO"

      if [ "${NODE_NAME:-}" != "" ]; then
          echo "NODE: $NODE_NAME"
      fi

      # set ownership to ic-build container's user,
      # but ignore errors that happen due to git gc:
      #   `chown: changing ownership of '.git/shallow.lock': No such file or directory`
      sudo chown "$(id -u):$(id -g)" -fR "${CI_PROJECT_DIR}" || true
    fi

  - echo -e "\e[0Ksection_end:$(date +%s):before_script\r\e[0K"


# TESTING NOTE:
# $SHELL_WRAPPER allows us to emulate CI runs without actually executing the complicated and
#                time-consuming operations.
#                In normal execution, "$SHELL_WRAPPER" will be substituted with "/usr/bin/time"
#                In CI validation, "$SHELL_WRAPPER" will be substituted with "echo"

after_script:
  - |
    # Start the after_script section
    echo -e "\e[0Ksection_start:$(date +%s):after_script[collapsed=true]\r\e[0KClick here to see the after_script section. It does not affect the job success status"

    # Export all the environmental variables so that the GITLAB configured variables are available to after_script.sh
    export ROOT_PIPELINE_ID=${PARENT_PIPELINE_ID:-$CI_PIPELINE_ID}
    buildevents cmd "$ROOT_PIPELINE_ID" "$CI_JOB_ID" after-script -- "${CI_PROJECT_DIR}"/gitlab-ci/src/after_script/after_script.sh

    rm -rf "${CI_PROJECT_DIR}/target"

    # Finish and collapse the after_script section
    echo -e "\e[0Ksection_end:$(date +%s):after_script\r\e[0K"

# 1. If on the RC branch and "hotfix" (case insensitive) is in the commit message,
#    then allow manual execution of prod hourly and nightly tests.
# 2. Otherwise, if on the RC branch then perform automatic execution of prod hourly and nightly
#    tests.
# 3. Otherwise, if on any other branch and triggered by a merge request allow for manual
#    execution of prod hourly and nightly tests.
.rules-rollout-pipeline-auto:
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^(rc--|hotfix-.+-rc--).+/ && $CI_COMMIT_MESSAGE =~ /hotfix/i && $CI_PIPELINE_SOURCE != "trigger"'
      when: manual
      allow_failure: true
    - if: '$CI_COMMIT_BRANCH =~ /^(rc--|hotfix-.+-rc--).+/ && $CI_PIPELINE_SOURCE != "trigger"'
      when: always
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: manual
      allow_failure: true
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
      when: manual
      allow_failure: true

.rules-master-pipeline-no-merge-train:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_EVENT_TYPE != "merge_train"'
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $SCHEDULE_NAME == "run-all-master"'
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH =~ /^(rc--|hotfix-.+-rc--).+/'

.rules-master-pipeline-no-merge-train-rust-bazel-changed:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_EVENT_TYPE != "merge_train"'
      changes:
        - ".bazelrc"
        - ".bazelversion"
        - "**/*.bazel"
        - "**/*.bzl"
        - "**/*.lock"
        - "**/*.rs"
        - "**/*.toml"
        - "gitlab-ci/container/Dockerfile"
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $SCHEDULE_NAME == "run-all-master"'
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH =~ /^(rc--|hotfix-.+-rc--).+/'

.rules-master-pipeline-and-merge-request:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $SCHEDULE_NAME == "run-all-master"'
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH =~ /^(rc--|hotfix-.+-rc--).+/'

.rules-master-pipeline-and-merge-request-rust-changed:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - "**/*.rs"
        - "**/*.toml"
        - "**/*.lock"
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $SCHEDULE_NAME == "run-all-master"'
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH =~ /^(rc--|hotfix-.+-rc--).+/'

.rules-post-master:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_EVENT_TYPE != "merge_train"'
      when: manual
      allow_failure: true
    - if: '$SCHEDULE_NAME == "run-all-master"'

# Server blocks for custom domains
include "/var/opt/nginx/domains.conf";

server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name .boundary.dfinity.network;
    server_name .mainnet.dfinity.network;

    location / {
        # Observability
        include "includes/request_id.conf";

        return 308 $scheme://$primary_application_domain$request_uri;
    }
}

# API Domains ONLY
server {
    listen 443 ssl;
    listen [::]:443 ssl;

    include "/run/ic-node/etc/nginx/conf.d/api_domain.conf";
    include "includes/error_pages.conf";

    location = / {
        # Observability
        include "includes/request_id.conf";

        include "includes/method_get.conf";
        return 302 https://dashboard.internetcomputer.org/;
    }

    location ~ (/api/v2/status|/health) {
        # Observability
        include "includes/request_id.conf";

        # Prereqs
        include "includes/method_get.conf";

        # CORS
        set $cors_allow_methods "HEAD, GET";
        include "includes/response_headers.conf";
        include "includes/options.conf";

        # Proxy
        proxy_pass "http://ic_boundary";
        include "includes/proxy_headers.conf";
    }

    location ~ /api/v2/canister/[0-9a-zA-Z\-]+/query {
        # Observability
        include "includes/request_id.conf";

        # Prereqs
        include "includes/method_post.conf";

        # CORS
        set $cors_allow_methods "HEAD, POST";
        include "includes/response_headers.conf";
        include "includes/options.conf";

        # Proxy
        proxy_pass "http://ic_boundary";
        include "includes/proxy_headers.conf";
    }

    location ~ /api/(v2|v3)/canister/[0-9a-zA-Z\-]+/call {
        # Observability
        include "includes/request_id.conf";

        # Prereqs
        include "includes/method_post.conf";

        # CORS
        set $cors_allow_methods "HEAD, POST";
        include "includes/response_headers.conf";
        include "includes/options.conf";

        # Proxy
        proxy_pass "http://ic_boundary";
        include "includes/proxy_headers.conf";
    }

    location ~ /api/v2/(canister|subnet)/[0-9a-zA-Z\-]+/read_state {
        # Observability
        include "includes/request_id.conf";

        # Prereqs
        include "includes/method_post.conf";

        # CORS
        set $cors_allow_methods "HEAD, POST";
        include "includes/response_headers.conf";
        include "includes/options.conf";

        # Proxy
        proxy_pass "http://ic_boundary";
        include "includes/proxy_headers.conf";
    }
}

# System and Application Domains ONLY
server {
    listen 443 ssl;
    listen [::]:443 ssl;

    include "/run/ic-node/etc/nginx/conf.d/server_domain.conf";
    include "includes/error_pages.conf";

    location = / {
        # Observability
        include "includes/request_id.conf";

        include "includes/method_get.conf";
        return 302 https://dashboard.internetcomputer.org/;
    }

    location ~ (/api/v2/status|/health) {
        # Observability
        include "includes/request_id.conf";

        # Prereqs
        include "includes/method_get.conf";

        # CORS
        set $cors_allow_methods "HEAD, GET";
        include "includes/response_headers.conf";
        include "includes/options.conf";

        # Proxy
        proxy_pass "http://ic_boundary";
        include "includes/proxy_headers.conf";
    }

    location ~ /api/v2/canister/[0-9a-zA-Z\-]+/query {
        # Observability
        include "includes/request_id.conf";

        # Prereqs
        include "includes/method_post.conf";

        # CORS
        set $cors_allow_methods "HEAD, POST";
        include "includes/response_headers.conf";
        include "includes/options.conf";

        # Proxy
        proxy_pass "http://ic_boundary";
        include "includes/proxy_headers.conf";
    }

    location ~ /api/(v2|v3)/canister/[0-9a-zA-Z\-]+/call {
        # Observability
        include "includes/request_id.conf";

        # Prereqs
        include "includes/method_post.conf";

        # CORS
        set $cors_allow_methods "HEAD, POST";
        include "includes/response_headers.conf";
        include "includes/options.conf";

        # Proxy
        proxy_pass "http://ic_boundary";
        include "includes/proxy_headers.conf";
    }

    location ~ /api/v2/(canister|subnet)/[0-9a-zA-Z\-]+/read_state {
        # Observability
        include "includes/request_id.conf";

        # Prereqs
        include "includes/method_post.conf";

        # CORS
        set $cors_allow_methods "HEAD, POST";
        include "includes/response_headers.conf";
        include "includes/options.conf";

        # Proxy
        proxy_pass "http://ic_boundary";
        include "includes/proxy_headers.conf";
    }

    # Custom Domains
    location ~ /registrations\/?$ {
        # Observability
        include "includes/request_id.conf";

        # Prereqs
        include "includes/method_post.conf";

        # Limits
        limit_req zone=rgs_global nodelay;
        limit_req zone=rgs_per_ip nodelay;

        # CORS
        set $cors_allow_methods "HEAD, POST";
        include "includes/response_headers.conf";
        include "includes/options.conf";

        # Proxy
        proxy_pass "http://cert_issuer";
        include "includes/proxy_headers.conf";
    }

    location ~ /registrations/[0-9a-zA-Z]+$ {
        # Observability
        include "includes/request_id.conf";

        # Limits
        limit_req zone=rgs_global nodelay;
        limit_req zone=rgs_per_ip nodelay;

        # CORS
        set $cors_allow_methods "HEAD, GET, PUT, DELETE";
        include "includes/response_headers.conf";
        include "includes/options.conf";

        # Proxy
        proxy_pass "http://cert_issuer";
        include "includes/proxy_headers.conf";
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;

    include "/run/ic-node/etc/nginx/conf.d/server_raw_domain.conf";
    include "includes/error_pages.conf";

    location = / {
        # Observability
        include "includes/request_id.conf";

        include "includes/method_get.conf";
        return 302 https://dashboard.internetcomputer.org/;
    }

    location = /api/v2/status {
        # Observability
        include "includes/request_id.conf";

        include "includes/method_get.conf";
        return 307 $scheme://$primary_application_domain$request_uri;
    }

    location ~ /api/v2/canister/[0-9a-zA-Z\-]+/query {
        # Observability
        include "includes/request_id.conf";

        include "includes/method_post.conf";
        return 307 $scheme://$primary_application_domain$request_uri;
    }

    location ~ /api/(v2|v3)/canister/[0-9a-zA-Z\-]+/call {
        # Observability
        include "includes/request_id.conf";

        include "includes/method_post.conf";
        return 307 $scheme://$primary_application_domain$request_uri;
    }

    location ~ /api/v2/(canister|subnet)/[0-9a-zA-Z\-]+/read_state {
        # Observability
        include "includes/request_id.conf";

        include "includes/method_post.conf";
        return 307 $scheme://$primary_application_domain$request_uri;
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;

    include "/run/ic-node/etc/nginx/conf.d/server_domain_escaped.conf";
    include "includes/error_pages.conf";

    ########################################################
    # TODO as a follow up for BOUN-65
    # Eventually we need to remove the redirects
    ########################################################

    location = /api/v2/status {
        # Observability
        include "includes/request_id.conf";

        include "includes/method_get.conf";
        return 307 $scheme://$primary_api_domain$request_uri;
    }

    location ~ /api/v2/canister/[0-9a-zA-Z\-]+/query {
        # Observability
        include "includes/request_id.conf";

        include "includes/method_post.conf";
        return 307 $scheme://$primary_api_domain$request_uri;
    }

    location ~ /api/(v2|v3)/canister/[0-9a-zA-Z\-]+/call {
        # Observability
        include "includes/request_id.conf";

        include "includes/method_post.conf";
        return 307 $scheme://$primary_api_domain$request_uri;
    }

    location ~ /api/v2/(canister|subnet)/[0-9a-zA-Z\-]+/read_state {
        # Observability
        include "includes/request_id.conf";

        include "includes/method_post.conf";
        return 307 $scheme://$primary_api_domain$request_uri;
    }

    location / {
        # Observability
        include "includes/request_id.conf";

        # CORS
        set $cors_allow_methods "HEAD, GET, OPTIONS";
        include "includes/response_headers.conf";
        include "includes/options.conf";

        # Cache
        include "includes/cache.conf";

        proxy_pass http://icx_proxy;
        include "includes/proxy_headers.conf";

        proxy_set_header x-icx-require-certification "1";

        add_header "X-Cache-Status" $upstream_cache_status;
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;

    include "/run/ic-node/etc/nginx/conf.d/server_raw_domain_escaped.conf";
    include "includes/error_pages.conf";

    location / {
        # Observability
        include "includes/request_id.conf";

        # CORS
        set $cors_allow_methods "HEAD, GET, POST, OPTIONS";
        include "includes/response_headers.conf";
        include "includes/options.conf";

        # Cache
        include "includes/cache.conf";
        include "includes/slice.conf";

        proxy_pass http://icx_proxy;
        include "includes/proxy_headers.conf";
    }
}

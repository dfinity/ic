user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 8192;
}

# During an nginx reload, all the existing workers finish up with their clients
# and shutdown gracefully. If their clients don't finish up, they never shut
# down. We've chosen a 10 minute timeout to limit the impact on long downloads
# that happen to occur during an nginx reload.
worker_shutdown_timeout 10m;

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    # Keepalive settings
    ## Idle connection timeout
    keepalive_timeout 30; # default 75s

    ## Close keepalive connections more frequently to free per-connection resources
    keepalive_time 10m; # default 1h
    keepalive_requests 500; # default 1000

    # Client timeouts
    ## Full header reading timeout
    client_header_timeout 15s; # default 60s
    ## Timeout between two read operations from the client, not full body transmit time
    client_body_timeout 15s; # default 60s
    ## Timeout between two write operations to the client, not full body transmit time
    send_timeout 15s; # default 60s
    ## More aggressively close timed out connections, don't linger in FIN_WAIT1
    reset_timedout_connection on;

    # Do not emit server version in headers
    server_tokens off;

    # Disable body checking since it's streamed directly to backend and limited there
    client_max_body_size 0;

    # Required for keepalive connections
    proxy_http_version 1.1;

    # Increase timeout a bit
    proxy_read_timeout 120;

    # Keepalives
    proxy_socket_keepalive on;

    # Disable request & response buffering since we don't need to cache anything here
    proxy_request_buffering off;
    proxy_buffering off;

    # Enlarge buffers, they should be big enough to fit a full response header.
    # IC response headers can be quite big due to `ic-certificate` and similar
    proxy_buffer_size 32k;
    proxy_buffers 4 64k;
    proxy_busy_buffers_size 64k;
    proxy_connect_timeout 20s; # default 60s

    # HTTP2
    http2 on;
    http2_max_concurrent_streams 100;

    # Increase some hash sizes
    server_names_hash_bucket_size 128;

    include "/etc/nginx/mime.types";
    default_type application/octet-stream;

    ##
    # TLS Settings
    ##

    # Dropping SSLv3, ref: POODLE
    # Dropping TLSv1/v1.1, deprecated: https://datatracker.ietf.org/doc/rfc8996/
    ssl_protocols TLSv1.2 TLSv1.3;

    # Switching this off is recommended when no old TLS version is used and/or weak ciphers are disabled
    # This allows client to choose the cipher that it has better support for (e.g. AES hardware acceleration)
    # See https://wiki.mozilla.org/Security/Server_Side_TLS#Recommended_configurations (Cipher preference: client chooses)
    ssl_prefer_server_ciphers off;

    ssl_certificate /run/ic-node/etc/nginx/certs/fullchain.pem;
    ssl_trusted_certificate /run/ic-node/etc/nginx/certs/chain.pem;
    ssl_certificate_key /run/ic-node/etc/nginx/keys/privkey.pem;

    # Predefined DHE params from RFC 7919 https://github.com/internetstandards/dhe_groups/blob/master/ffdhe4096.pem
    ssl_dhparam /etc/nginx/ffdhe4096.pem;

    # Increase session timeout to 1 hour (Cloudflare uses even 18 hours)
    # See https://blog.cloudflare.com/tls-session-resumption-full-speed-and-secure/
    # 256MB should be good for ~1M sessions
    ssl_session_timeout 1h;
    ssl_session_cache shared:SSL:256m;

    # Session tickets seem to weaken Perfect Forward Secrecy.
    # See:
    # - https://www.imperialviolet.org/2013/06/27/botchingpfs.html
    # - https://blog.compass-security.com/2017/06/about-tls-perfect-forward-secrecy-and-session-resumption/
    ssl_session_tickets off;

    # prime256v1 (NIST P-256) curve is considered less safe
    # See http://safecurves.cr.yp.to/
    ssl_ecdh_curve secp521r1:secp384r1;

    # ssllabs.com Cipher Strength - see https://wiki.mozilla.org/Security/Server_Side_TLS#Recommended_configurations
    # TLSv1.3 ciphers are enabled with it by default and don't need to be specified here
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

    # Lowered from default 16k to get faster TTFB
    ssl_buffer_size 4k;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 1.1.1.1 1.0.0.1 [2606:4700:4700::1111] [2606:4700:4700::1001] valid=300s; # Cloudflare
    resolver_timeout 5s;

    ##
    # Logging Settings
    ##

    log_format access escape=json '{'
        '"body_bytes_sent":'          '"$body_bytes_sent",'
        '"bytes_sent":'               '"$bytes_sent",'
        '"cache_bypass_reason":'      '"$upstream_http_x_ic_cache_bypass_reason",'
        '"cache_status":'             '"$upstream_http_x_ic_cache_status",'
        '"cache_status_nginx":'       '"$upstream_cache_status",'
        '"content_length":'           '"$content_length",'
        '"content_type":'             '"$content_type",'
        '"error_cause":'              '"$upstream_http_x_ic_error_cause",'
        '"geo_country_code":'         '"$upstream_http_x_ic_country_code",'
        '"hostname":'                 '"$hostname",'
        '"http_host":'                '"$http_host",'
        '"http_origin":'              '"$http_origin",'
        '"http_referer":'             '"$http_referer",'
        '"http_user_agent":'          '"$http_user_agent",'
        '"https":'                    '"$https",'
        '"ic_canister_id":'           '"$upstream_http_x_ic_canister_id",'
        '"ic_canister_id_cbor":'      '"$upstream_http_x_ic_canister_id_cbor",'
        '"ic_method_name":'           '"$upstream_http_x_ic_method_name",'
        '"ic_node_id":'               '"$upstream_http_x_ic_node_id",'
        '"ic_request_type":'          '"$upstream_http_x_ic_request_type",'
        '"ic_sender":'                '"$upstream_http_x_ic_sender",'
        '"ic_subnet_id":'             '"$upstream_http_x_ic_subnet_id",'
        '"msec":'                     '"$msec",'
        '"query_string":'             '"$query_string",'
        '"remote_addr":'              '"$remote_addr",'
        '"retries":'                  '"$upstream_http_x_ic_retries",'
        '"request_id":'               '"$request_uuid",'
        '"request_length":'           '"$request_length",'
        '"request_method":'           '"$request_method",'
        '"request_time":'             '"$request_time",'
        '"request_time_headers":'     '"$upstream_header_time",'
        '"request_uri":'              '"$request_uri",'
        '"server_protocol":'          '"$server_protocol",'
        '"ssl_cipher":'               '"$ssl_cipher",'
        '"ssl_protocol":'             '"$ssl_protocol",'
        '"status":'                   '"$status",'
        '"status_upstream":'          '"$upstream_status",'
        '"upstream":'                 '"$upstream_addr"'
    '}';

    access_log syslog:server=unix:/var/lib/vector/nginx.socket,tag=access,nohostname access;
    error_log /dev/null emerg;

    ##
    # Virtual Host Configs
    ##

    include /etc/nginx/conf.d/*.conf;
}

package(default_visibility = ["//ic-os/components:__subpackages__"])

exports_files(glob(
    ["*"],
    exclude = [
        "BUILD.bazel",
    ],
))

genrule(
    name = "test-kernel-cmdline-function-runner",
    testonly = True,
    srcs = [":functions.sh"],
    outs = ["test-kernel-cmdline-function.sh"],
    cmd = """
    cat <<EOF > $@
#!/bin/bash
set -eux
source $(location functions.sh)
export TEST_CMDLINE=\\$$(mktemp)
trap 'rm -rf \\$$TEST_CMDLINE' EXIT

# Test parameter set to 1.
echo 'otherparm_quoted="abc def" testparm=1' > "\\$$TEST_CMDLINE"
kernel_cmdline_bool_default_true testparm || {
    echo >&2 expected kernel_cmdline_bool_default_true testparm to be true
    exit 1
}
kernel_cmdline_bool_default_false testparm || {
    echo >&2 expected kernel_cmdline_bool_default_false testparm to be true
    exit 1
}

# Test parameter set to 0.
echo 'otherparm_quoted="abc def" testparm=0' > "\\$$TEST_CMDLINE"
kernel_cmdline_bool_default_true testparm && {
    echo >&2 expected kernel_cmdline_bool_default_false testparm to be false
    exit 1
} || true
kernel_cmdline_bool_default_false testparm && {
    echo >&2 expected kernel_cmdline_bool_default_false testparm to be false
    exit 1
} || true

# Test parameter set (equivalent to 1).
echo 'otherparm_quoted="abc def" testparm' > "\\$$TEST_CMDLINE"
kernel_cmdline_bool_default_true testparm || {
    echo >&2 expected kernel_cmdline_bool_default_true testparm to be true
    exit 1
}
kernel_cmdline_bool_default_false testparm || {
    echo >&2 expected kernel_cmdline_bool_default_false testparm to be true
    exit 1
}

# Test parameter absent.
echo 'otherparm_quoted="abc def" notestparm' > "\\$$TEST_CMDLINE"
kernel_cmdline_bool_default_true testparm || {
    echo >&2 expected kernel_cmdline_bool_default_true testparm to be true
    exit 1
}
kernel_cmdline_bool_default_false testparm && {
    echo >&2 expected kernel_cmdline_bool_default_false testparm to be false
    exit 1
} || true
EOF
    """,
    tags = ["manual"],
)

sh_test(
    name = "test-kernel-cmdline-function",
    srcs = ["test-kernel-cmdline-function-runner"],
    data = [":functions.sh"],
)

#!/bin/bash

# This script dynamically creates the correct mounts based on whether
# we are running system A or B -- we will not "know" at build time
# what we are going to be booted from because the same image could
# be placed into either system A or system B root partition during
# upgrades.
#
# The dynamically changing mounts are:
# - /boot is /dev/hostlvm/A_boot (system A) or /dev/hostlvm/B_boot (system B)
# - /var is /dev/hostlvm/A_var (system A) or /dev/hostlvm/B_var (system B)
#
# This is generated dynamically to avoid changing /etc/fstab (root
# filesystem might be read-only).
#
# systemd doc advises to "not use shell scripts" as generators --
# while I agree with that and the rationale behind it, this script
# is written carefully and works correctly, and is quicker to write
# than setting up a compiled binary (for now).

UNIT_DIR="$1"

function get_boot_arg_value() {
    local ARGNAME="$1"
    for ARG in $(cat /proc/cmdline); do
        echo "$ARG" | while IFS='=' read KEY VALUE; do
            if [ "$ARGNAME" == "$KEY" ]; then echo "$VALUE"; fi
        done
    done
}

function make_requires() {
    mkdir -p "${UNIT_DIR}"/$1.requires
    ln -s ../$2 "${UNIT_DIR}"/$1.requires/$2
}

function make_boot_mount() {
    if [ "$1" == A ]; then
        local DEVICE=/dev/hostlvm/A_boot
    else
        local DEVICE=/dev/hostlvm/B_boot
    fi
    echo "# Automatically generated by /etc/systemd/system-generators/mount-generator"
    echo "[Unit]"
    echo "SourcePath=/etc/systemd/system-generators/mount-generator"
    echo "Before=local-fs.target"
    echo
    echo "[Mount]"
    echo "What=$DEVICE"
    echo "Where=/boot"
    echo "Type=ext4"
    echo "Options=defaults"
}

function make_var_setup() {
    if [ "$1" == A ]; then
        local DEVICE=A_var
    else
        local DEVICE=B_var
    fi
    echo "# Automatically generated by /etc/systemd/system-generators/mount-generator"
    echo "[Unit]"
    echo "SourcePath=/etc/systemd/system-generators/mount-generator"
    echo "Description=Setup for var"
    echo "DefaultDependencies=no"
    echo "After=dev-hostlvm-${DEVICE}.device"
    echo "Requires=dev-hostlvm-${DEVICE}.device"
    echo "Before=var.mount"
    echo ""
    echo "[Service]"
    echo "Type=oneshot"
    echo "RemainAfterExit=yes"
    echo "ExecStart=/opt/ic/bin/setup-var.sh /dev/hostlvm/${DEVICE}"
}

function make_var_mount() {
    if [ "$1" == A ]; then
        local DEVICE=/dev/hostlvm/A_var
    else
        local DEVICE=/dev/hostlvm/B_var
    fi
    echo "# Automatically generated by /etc/systemd/system-generators/mount-generator"
    echo "[Unit]"
    echo "SourcePath=/etc/systemd/system-generators/mount-generator"
    echo "Before=local-fs.target"
    echo "Requires=var-setup.service"
    echo
    echo "[Mount]"
    echo "What=$DEVICE"
    echo "Where=/var"
    echo "Type=ext4"
    echo "Options=defaults"
}

CURRENT_SYSTEM=$(get_boot_arg_value dfinity.system)

make_boot_mount "$CURRENT_SYSTEM" >"$UNIT_DIR"/boot.mount
make_requires localfs.target boot.mount
make_requires boot-efi.mount boot.mount
make_requires boot-grub.mount boot.mount

make_var_setup "$CURRENT_SYSTEM" >"$UNIT_DIR"/var-setup.service
make_var_mount "$CURRENT_SYSTEM" >"$UNIT_DIR"/var.mount

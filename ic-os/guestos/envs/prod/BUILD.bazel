load("@bazel_skylib//rules:write_file.bzl", "write_file")
load("//bazel:defs.bzl", "file_size_check")
load("//bazel:mainnet-icos-images.bzl", "MAINNET_APP", "MAINNET_LATEST", "MAINNET_NNS")
load("//ic-os:defs.bzl", "extract_mainnet_guestos_image", "icos_build")
load("//ic-os/guestos:defs.bzl", "image_deps")
load("//publish:defs.bzl", "artifact_bundle")

# The macro contains several targets.
# Check
#       //ic-os/guestos/BUILD.bazel for examples
#    or //ic-os/defs.bzl for the full list of targets.
icos_images = icos_build(
    name = "prod",
    image_deps_func = image_deps,
    visibility = [
        "//rs:ic-os-pkg",
        "//testnet/tools:icos_deploy-pkg",
    ],
)

file_size_check(
    name = "disk_img_size_check",
    file = icos_images.disk_image,
    max_file_size = 450 * 1000 * 1000,  # 419 MB on 2025-03-21
)

file_size_check(
    name = "update_img_size_check",
    file = icos_images.update_image,
    max_file_size = 450 * 1000 * 1000,  # 416 MB on 2025-03-21
)

file_size_check(
    name = "update_img_test_size_check",
    file = icos_images.update_image_test,
    max_file_size = 450 * 1000 * 1000,  # 417 MB on 2025-06-26
)

# Export checksums & build artifacts
# (image is used for GuestOS upgrades)
artifact_bundle(
    name = "bundle-update",
    inputs = [
        icos_images.update_image,
        icos_images.update_image_test,
        icos_images.launch_measurements,
    ],
    prefix = "guest-os/update-img",
    visibility = ["//visibility:public"],
)

extract_mainnet_guestos_image(
    name = "mainnet_latest_guest_img",
    disk_img = "@mainnet_latest_disk_img//file",
    visibility = ["//rs/tests:__subpackages__"],
)

write_file(
    name = "mainnet_latest_launch_measurements",
    out = "mainnet_latest_launch_measurements.json",
    content = [json.encode(MAINNET_LATEST["launch_measurements"])],
    visibility = ["//rs/tests:__subpackages__"],
)

extract_mainnet_guestos_image(
    name = "mainnet_nns_guest_img",
    disk_img = "@mainnet_nns_disk_img//file",
    visibility = ["//rs/tests:__subpackages__"],
)

write_file(
    name = "mainnet_nns_launch_measurements",
    out = "mainnet_nns_launch_measurements.json",
    content = [json.encode(MAINNET_NNS["launch_measurements"])],
    visibility = ["//rs/tests:__subpackages__"],
)

extract_mainnet_guestos_image(
    name = "mainnet_app_guest_img",
    disk_img = "@mainnet_app_disk_img//file",
    visibility = ["//rs/tests:__subpackages__"],
)

write_file(
    name = "mainnet_app_launch_measurements",
    out = "mainnet_app_launch_measurements.json",
    content = [json.encode(MAINNET_APP["launch_measurements"])],
    visibility = ["//rs/tests:__subpackages__"],
)

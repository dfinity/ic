# SetupOS - Base Image
#
# Build steps:
# - `docker build -t dfinity/setupos-base:<tag> -f Dockerfile.base .`
# - `docker push/pull dfinity/setupos-base:<tag>`
# - `docker build -t dfinity/setupos-base-dev:<tag> --build-arg PACKAGE_FILES="packages.common packages.dev" -f Dockerfile.base .`
# - `docker push/pull dfinity/setupos-base-dev:<tag>`
#
# First build stage:
# - Download and cache minimal Ubuntu Server 24.04 LTS Docker image
# - Install and cache upstream packages from built-in Ubuntu repositories
#
# NOTE! If you edit this file, you will need to perform the following
# operations to get your changes deployed.
#
# 1. Get your MR approved and merged into master
# 2. On the next hourly master pipeline, click the "deploy-setup-os-baseimg" job
# 3. Note the sha256 and update the sha256 reference in the neighboring Dockerfiles.
FROM ubuntu:24.04

USER root:root

ENV SOURCE_DATE_EPOCH=0
ENV TZ=UTC

# For the prod image, just use packages.common to define the packages installed
# on target.
# For the dev image, use both "packages.common" and "packages.dev" -- this can
# be set via docker build args (see above).
ARG PACKAGE_FILES=packages.common
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
COPY packages.* /tmp/
RUN echo "Starting apt-get update..." && \
    for i in {1..3}; do \
        echo "Attempt $i of apt-get update..."; \
        apt-get -y update && break || (echo "apt-get update failed, retrying in 10s..." && sleep 10); \
    done && \
    echo "Starting apt-get upgrade..." && \
    apt-get -y upgrade && \
    echo "Starting package installation..." && \
    for i in {1..3}; do \
        echo "Attempt $i of package installation..."; \
        if apt-get -y --no-install-recommends install $(for P in ${PACKAGE_FILES}; do cat /tmp/$P | sed -e "s/#.*//" ; done); then \
            echo "Package installation succeeded on attempt $i"; \
            break; \
        else \
            echo "Package installation failed on attempt $i, retrying in 15s..."; \
            sleep 15; \
        fi; \
    done && \
    rm /tmp/packages.*

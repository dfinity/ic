# A .bazelrc used internally by DFINITY for metrics, cache, etc

# Build event upload configuration
build:bes --bes_results_url=https://dash.idx.dfinity.network/invocation/
build:bes --bes_backend=bes.idx.dfinity.network
build:bes --bes_timeout=180s # Default is no timeout.
build:bes --remote_build_event_upload=minimal

# DFINITY internal remote cache setup
build --remote_cache=bazel-remote.idx.dfinity.network
build --experimental_remote_cache_async
build --experimental_remote_cache_compression # If enabled, compress/decompress cache blobs with zstd.
# TODO: re-enable after fixing the error like this:
# `Failed to fetch file with hash 'xxx' because it does not exist remotely. --remote_download_outputs=minimal does not work if your remote cache evicts files during builds.`
# Probably disabling `--experimental_remote_cache_async` will help
#build --remote_download_minimal # https://bazel.build/reference/command-line-reference#flag--remote_download_minimal
#build --remote_download_outputs=toplevel # Still download outputs from top level targets.

build --experimental_remote_downloader=bazel-remote.idx.dfinity.network --experimental_remote_downloader_local_fallback
build:local --experimental_remote_downloader=
build --remote_local_fallback
build    --remote_upload_local_results=false

# Run `bazel build ... --config=local` to build targets without cache
build:local --remote_cache=

# Upload bes by default when running system tests so that e.g. failures can
# be shared easily without having to rerun a potentially very-long systest
build:systest --config=bes

"""
This module contains utilities to work with code generated by prost-build.
"""

load("@rules_rust//rust:defs.bzl", "rust_binary", "rust_test")

# the prost crate expects PROTOC_INCLUDE to point to a directory containing
# various .proto files. Creating a directory is not straightforward in Bazel
# so as a workaround we simply point to the sources.
PROTOC_INCLUDE = "external/protobuf~/src"

def generated_files_check(name, srcs, deps, data, manifest_dir):
    rust_test(
        name = name,
        srcs = srcs,
        data = data + [
            "@rules_rust//rust/toolchain:current_rustfmt_files",
            "@com_google_protobuf//:protoc",
            "@com_google_protobuf//:descriptor_proto_srcs",
            "@com_google_protobuf//:protobuf_headers",
            "@com_google_protobuf//:well_known_type_protos",
        ],
        env = {
            "PROTOC": "$(rootpath @com_google_protobuf//:protoc)",
            "PROTOC_INCLUDE": PROTOC_INCLUDE,
            "CARGO_MANIFEST_DIR": manifest_dir,
            "RUSTFMT": "$(rootpath @rules_rust//rust/toolchain:current_rustfmt_files)",
        },
        deps = deps,
    )

def protobuf_generator(name, srcs, manifest_dir, deps = [], data = []):
    binary_name = "_%s_bin" % name
    rust_binary(
        name = binary_name,
        srcs = srcs,
        data = data,
        deps = deps,
    )

    native.sh_binary(
        name = name,
        data = data + [
            ":" + binary_name,
            "@com_google_protobuf//:well_known_type_protos",
            "@com_google_protobuf//:descriptor_proto_srcs",
            "@com_google_protobuf//:protoc",
            "@com_google_protobuf//:protobuf_headers",
            "@rules_rust//rust/toolchain:current_rustfmt_files",
        ],
        srcs = ["//bazel:prost_generator.sh"],
        env = {
            "PROTOC": "$(location @com_google_protobuf//:protoc)",
            "PROTOC_INCLUDE": PROTOC_INCLUDE,
            "CARGO_MANIFEST_DIR": manifest_dir,
            "GENERATOR": "$(location :%s)" % binary_name,
            "RUSTFMT": "$(rootpath @rules_rust//rust/toolchain:current_rustfmt_files)",
        },
        tags = ["local", "manual", "pb-generator"],
    )

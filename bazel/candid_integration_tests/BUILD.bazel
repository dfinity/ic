load("@python_deps//:requirements.bzl", "requirement")
load("//bazel:candid.bzl", "did_git_test")

did_git_test(
    name = "example_did_git_test",
    did = ":example.did",
    tags = ["manual"],  # only executed as part of candid_integration_tests
)

did_git_test(
    name = "example_did_git_test_also_reverse",
    did = ":example.did",
    enable_also_reverse = True,
    tags = ["manual"],  # only executed as part of candid_integration_tests
)

genrule(
    name = "create_new_did_file",
    srcs = [":example.did"],
    outs = ["new.did"],
    cmd_bash = "cat $(location example.did) > $@",
)

did_git_test(
    name = "new_did_git_test",
    did = ":new.did",
    tags = ["manual"],  # only executed as part of candid_integration_tests
)

py_test(
    name = "candid_integration_tests",
    srcs = ["candid_integration_tests.py"],
    data = [
        ":example.did",
        ":example_backup.did",
        ":example_did_git_test",
        ":example_did_git_test_also_reverse",
        ":new_did_git_test",
        "//:WORKSPACE.bazel",
    ],
    env = {
        "DID_FILE_PATH": "$(location :example.did)",
        "BACKUP_DID_FILE_PATH": "$(location :example_backup.did)",
        "TEST_BIN": "$(location :example_did_git_test)",
        "TEST_BIN_ALSO_REVERSE": "$(location :example_did_git_test_also_reverse)",
        "NEW_DID_TEST": "$(location :new_did_git_test)",
        "WORKSPACE": "$(rootpath //:WORKSPACE.bazel)",
    },
    tags = ["local"],
    deps = [requirement("pytest")],
)

type EcdsaPublicKeyResponse = record {
  public_key : blob;
  chain_code : blob;
};
type EcdsaPublicKeyResult = variant {
  Ok : EcdsaPublicKeyResponse;
  Err : text;
};
type SignWithEcdsaResult = variant {
  Ok : blob;
  Err : text;
};
type HttpHeader = record {
  name : text;
  value : text;
};
type HttpResponse = record {
  status : nat;
  headers : vec HttpHeader;
  body : blob;
};
type TransformArgs = record {
  response : HttpResponse;
  context : blob;
};
service : {
  ecdsa_public_key : (opt principal, vec blob, text) -> (EcdsaPublicKeyResult);
  sign_with_ecdsa : (blob, vec blob, text) -> (SignWithEcdsaResult);
  canister_http : () -> (HttpResponse);
  canister_http_with_transform : () -> (HttpResponse);
  transform : (TransformArgs) -> (HttpResponse) query;
}

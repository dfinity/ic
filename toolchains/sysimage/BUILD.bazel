load("@python_deps//:requirements.bzl", "requirement")
load("@rules_python//python:defs.bzl", "py_binary")

package(default_visibility = ["//visibility:public"])

exports_files([
    "build_container_base_image.py",
    "build_disk_image.py",
    "build_ext4_image.py",
    "build_fat32_image.py",
    "build_lvm_image.py",
    "build_upgrade_image.py",
    "build_vfat_image.py",
    "inject_files.py",
    "verity_sign.py",
])

py_library(
    name = "container_utils",
    srcs = ["container_utils.py"],
    deps = [
        requirement("invoke"),
    ],
)

# Creates a tar file as output
py_binary(
    name = "build_container_base_image",
    srcs = [
        "build_container_base_image.py",
    ],
    deps = [
        ":container_utils",
        requirement("loguru"),
        requirement("simple_parsing"),
    ],
)

py_binary(
    name = "build_container_filesystem_tar",
    srcs = [
        "build_container_filesystem_tar.py",
    ],
    deps = [
        ":container_utils",
    ],
)

# Process wrapper for commands that are run as part of the ic-os build.
sh_binary(
    name = "proc_wrapper",
    srcs = ["proc_wrapper.sh"],
)

sh_binary(
    name = "run_in_namespace",
    srcs = ["run_in_namespace.sh"],
)

sh_test(
    name = "run_in_namespace_test",
    srcs = ["run_in_namespace_test.sh"],
    data = ["@ubuntu-base-24.04.1-base-amd64.tar.gz//file"],
    env = {"UBUNTU_BASE_PATH": "$(location @ubuntu-base-24.04.1-base-amd64.tar.gz//file)"},
    tags = ["local"],
    deps = [":run_in_namespace"],
)

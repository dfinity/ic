[workspace]

members = [
    "packages/icrc-cbor",
    "packages/icrc-ledger-agent",
    "packages/icrc-ledger-client",
    "packages/icrc-ledger-client-cdk",
    "packages/icrc-ledger-types",
    "packages/ic-dummy-getrandom-for-wasm",
    "packages/ic-ed25519",
    "packages/ic-ethereum-types",
    "packages/ic-metrics-assert",
    "packages/ic-secp256k1",
    "packages/ic-sha3",
    "packages/ic-ledger-hash-of",
    "packages/ic-signature-verification",
    "packages/pocket-ic",
    "packages/pocket-ic/test_canister",
    "packages/ic-vetkd-utils",
    "rs/artifact_pool",
    "rs/http_endpoints/async_utils",
    "rs/backup",
    "rs/bitcoin/adapter",
    "rs/bitcoin/client",
    "rs/bitcoin/service",
    "rs/bitcoin/ckbtc/agent",
    "rs/bitcoin/ckbtc/minter",
    "rs/bitcoin/ckbtc/kyt",
    "rs/bitcoin/consensus",
    "rs/bitcoin/checker",
    "rs/bitcoin/mock",
    "rs/bitcoin/replica_types",
    "rs/bitcoin/validation",
    "rs/boundary_node/canary_proxy",
    "rs/boundary_node/certificate_issuance/certificate_issuer",
    "rs/boundary_node/certificate_issuance/certificate_orchestrator",
    "rs/boundary_node/ic_boundary",
    "rs/boundary_node/rate_limits",
    "rs/boundary_node/rate_limits/api",
    "rs/boundary_node/rate_limits/canister_client",
    "rs/boundary_node/salt_sharing",
    "rs/boundary_node/salt_sharing/api",
    "rs/boundary_node/systemd_journal_gatewayd_shim",
    "rs/canister_client",
    "rs/canister_client/read_state_response_parser",
    "rs/canister_client/sender",
    "rs/cross-chain/proposal-cli",
    "rs/cycles_account_manager",
    "rs/ethereum/cketh/minter",
    "rs/ethereum/evm-rpc-client",
    "rs/ethereum/ledger-suite-orchestrator",
    "rs/https_outcalls/adapter",
    "rs/https_outcalls/client",
    "rs/https_outcalls/consensus",
    "rs/https_outcalls/service",
    "rs/canister_sandbox",
    "rs/canonical_state",
    "rs/canonical_state/tree_hash",
    "rs/canonical_state/tree_hash/test_utils",
    "rs/certification",
    "rs/certification/test-utils",
    "rs/config",
    "rs/consensus",
    "rs/consensus/mocks",
    "rs/consensus/utils",
    "rs/criterion_time",
    "rs/crypto",
    "rs/crypto/ecdsa_secp256r1",
    "rs/crypto/for_verification_only",
    "rs/crypto/iccsa",
    "rs/crypto/internal/crypto_lib/basic_sig/der_utils",
    "rs/crypto/internal/crypto_lib/basic_sig/ecdsa_secp256k1",
    "rs/crypto/internal/crypto_lib/basic_sig/ecdsa_secp256r1",
    "rs/crypto/internal/crypto_lib/basic_sig/ed25519",
    "rs/crypto/internal/crypto_lib/basic_sig/iccsa",
    "rs/crypto/internal/crypto_lib/basic_sig/iccsa/test_utils",
    "rs/crypto/internal/crypto_lib/basic_sig/rsa_pkcs1",
    "rs/crypto/internal/crypto_lib/bls12_381/type",
    "rs/crypto/internal/crypto_lib/bls12_381/vetkd",
    "rs/crypto/internal/crypto_lib/hmac",
    "rs/crypto/internal/crypto_lib/multi_sig/bls12_381",
    "rs/crypto/internal/crypto_lib/seed",
    "rs/crypto/internal/crypto_lib/sha2",
    "rs/crypto/secrets_containers",
    "rs/crypto/internal/crypto_lib/threshold_sig/bls12_381",
    "rs/crypto/internal/crypto_lib/threshold_sig/canister_threshold_sig",
    "rs/crypto/internal/crypto_lib/threshold_sig/canister_threshold_sig/test_utils",
    "rs/crypto/internal/crypto_lib/tls",
    "rs/crypto/internal/crypto_lib/types",
    "rs/crypto/internal/crypto_service_provider",
    "rs/crypto/internal/crypto_service_provider/protobuf_generator",
    "rs/crypto/internal/csp_test_utils",
    "rs/crypto/internal/logmon",
    "rs/crypto/test_utils/reproducible_rng",
    "rs/crypto/internal/test_vectors",
    "rs/crypto/node_key_generation",
    "rs/crypto/node_key_validation",
    "rs/crypto/prng",
    "rs/crypto/sha2",
    "rs/crypto/utils/canister_threshold_sig",
    "rs/crypto/temp_crypto",
    "rs/crypto/test_utils",
    "rs/crypto/test_utils/canister_sigs",
    "rs/crypto/test_utils/canister_threshold_sigs",
    "rs/crypto/test_utils/metrics",
    "rs/crypto/test_utils/ni-dkg",
    "rs/crypto/test_utils/tls",
    "rs/crypto/tls_interfaces",
    "rs/crypto/tls_interfaces/mocks",
    "rs/crypto/tree_hash",
    "rs/crypto/tree_hash/test_utils",
    "rs/crypto/utils/basic_sig",
    "rs/crypto/utils/ni_dkg",
    "rs/crypto/utils/threshold_sig",
    "rs/crypto/utils/threshold_sig_der",
    "rs/crypto/utils/tls",
    "rs/cup_explorer",
    "rs/depcheck",
    "rs/drun",
    "rs/recovery",
    "rs/recovery/subnet_splitting",
    "rs/replay",
    "rs/embedders",
    "rs/execution_environment",
    "rs/execution_environment/benches/lib",
    "rs/execution_environment/tools",
    "rs/http_endpoints/metrics",
    "rs/http_endpoints/public",
    "rs/http_endpoints/xnet",
    "rs/http_utils",
    "rs/ic_os/deterministic_ips",
    "rs/ic_os/build_tools/dflate",
    "rs/ic_os/build_tools/diroid",
    "rs/ic_os/config",
    "rs/ic_os/config_types",
    "rs/ic_os/fstrim_tool",
    "rs/ic_os/metrics_tool",
    "rs/ic_os/os_tools/guestos_tool",
    "rs/ic_os/os_tools/hostos_tool",
    "rs/ic_os/build_tools/inject_files",
    "rs/ic_os/dev_test_tools/launch-single-vm",
    "rs/ic_os/network",
    "rs/ic_os/nft_exporter",
    "rs/ic_os/nss_icos",
    "rs/ic_os/dev_test_tools/setupos-inject-configuration",
    "rs/ic_os/build_tools/partition_tools",
    "rs/ic_os/dev_test_tools/setupos-disable-checks",
    "rs/ic_os/os_tools/setupos_tool",
    "rs/ic_os/utils",
    "rs/ic_os/vsock/guest",
    "rs/ic_os/vsock/host",
    "rs/ic_os/vsock/vsock_lib",
    "rs/ingress_manager",
    "rs/interfaces",
    "rs/interfaces/adapter_client",
    "rs/interfaces/certified_stream_store",
    "rs/interfaces/certified_stream_store/mocks",
    "rs/interfaces/mocks",
    "rs/interfaces/registry",
    "rs/interfaces/registry/mocks",
    "rs/interfaces/state_manager",
    "rs/interfaces/state_manager/mocks",
    "rs/limits",
    "rs/ic_os/linux_kernel_command_line",
    "rs/memory_tracker",
    "rs/messaging",
    "rs/monitoring/adapter_metrics/client",
    "rs/monitoring/adapter_metrics/server",
    "rs/monitoring/adapter_metrics/service",
    "rs/monitoring/logger",
    "rs/monitoring/metrics",
    "rs/monitoring/pprof",
    "rs/monitoring/tracing/jaeger_exporter",
    "rs/monitoring/tracing/logging_layer",
    "rs/nervous_system/agent",
    "rs/nervous_system/candid_utils",
    "rs/nervous_system/clients",
    "rs/nervous_system/collections/union_multi_map",
    "rs/nervous_system/common",
    "rs/nervous_system/common/build_metadata",
    "rs/nervous_system/common/test_canister",
    "rs/nervous_system/common/test_keys",
    "rs/nervous_system/common/test_utils",
    "rs/nervous_system/common/validation",
    "rs/nervous_system/histogram",
    "rs/nervous_system/humanize",
    "rs/nervous_system/initial_supply",
    "rs/nervous_system/instruction_stats",
    "rs/nervous_system/instruction_stats_update_attribute",
    "rs/nervous_system/integration_tests",
    "rs/nervous_system/lock",
    "rs/nervous_system/linear_map",
    "rs/nervous_system/neurons_fund",
    "rs/nervous_system/neurons_fund/nfplot",
    "rs/nervous_system/proto",
    "rs/nervous_system/proto/protobuf_generator",
    "rs/nervous_system/proxied_canister_calls_tracker",
    "rs/nervous_system/root",
    "rs/nervous_system/runtime",
    "rs/nervous_system/string",
    "rs/nervous_system/temporary",
    "rs/nervous_system/tools/release-runscript",
    "rs/nervous_system/tools/sync-with-released-nervous-system-wasms",
    "rs/nns/constants",
    "rs/nns/common",
    "rs/nns/common/protobuf_generator",
    "rs/nns/cmc",
    "rs/nns/governance",
    "rs/nns/governance/api",
    "rs/nns/governance/init",
    "rs/nns/governance/protobuf_generator",
    "rs/nns/handlers/lifeline/impl",
    "rs/nns/handlers/lifeline/interface",
    "rs/nns/handlers/root/impl",
    "rs/nns/handlers/root/impl/protobuf_generator",
    "rs/nns/handlers/root/interface",
    "rs/nns/identity",
    "rs/nns/init",
    "rs/nns/integration_tests",
    "rs/nns/nns-ui",
    "rs/nns/test_utils",
    "rs/nns/test_utils/golden_nns_state",
    "rs/nns/test_utils_macros",
    "rs/nns/gtc",
    "rs/nns/gtc/protobuf_generator",
    "rs/nns/gtc_accounts",
    "rs/nns/sns-wasm",
    "rs/nns/sns-wasm/protobuf_generator",
    "rs/determinism_test",
    "rs/orchestrator",
    "rs/orchestrator/dashboard",
    "rs/orchestrator/registry_replicator",
    "rs/p2p/artifact_downloader",
    "rs/p2p/artifact_manager",
    "rs/p2p/consensus_manager",
    "rs/p2p/peer_manager",
    "rs/p2p/memory_transport",
    "rs/p2p/quic_transport",
    "rs/p2p/state_sync_manager",
    "rs/p2p/test_utils",
    "rs/replica/setup_ic_network",
    "rs/phantom_newtype",
    "rs/prep",
    "rs/protobuf",
    "rs/protobuf/generator",
    "rs/pocket_ic_server",
    "rs/registry/admin",
    "rs/registry/admin-derive",
    "rs/registry/canister",
    "rs/registry/canister/api",
    "rs/registry/canister/protobuf_generator",
    "rs/registry/canister_data_provider",
    "rs/registry/client",
    "rs/registry/canister-client",
    "rs/registry/fake",
    "rs/registry/helpers",
    "rs/registry/local_registry",
    "rs/registry/local_store",
    "rs/registry/local_store/artifacts",
    "rs/registry/keys",
    "rs/registry/proto",
    "rs/registry/proto/generator",
    "rs/registry/proto_data_provider",
    "rs/registry/provisional_whitelist",
    "rs/registry/regedit",
    "rs/registry/node_provider_rewards",
    "rs/registry/nns_data_provider",
    "rs/registry/nns_data_provider_wrappers",
    "rs/registry/routing_table",
    "rs/registry/subnet_features",
    "rs/registry/subnet_type",
    "rs/registry/transport",
    "rs/registry/transport/protobuf_generator",
    "rs/replica",
    "rs/replica_tests",
    "rs/replicated_state",
    "rs/rosetta-api/icp",
    "rs/rosetta-api/common/rosetta_core",
    "rs/rosetta-api/icp/runner",
    "rs/rosetta-api/icp/client",
    "rs/ledger_suite/icp",
    "rs/ledger_suite/icp/archive",
    "rs/ledger_suite/icp/ledger",
    "rs/ledger_suite/icp/protobuf_generator",
    "rs/ledger_suite/icp/index",
    "rs/rosetta-api/icp/tests/integration_tests",
    "rs/ledger_suite/icp/test_utils",
    "rs/ledger_suite/common/ledger_core",
    "rs/ledger_suite/common/ledger_canister_core",
    "rs/rosetta-api/icp/ledger_canister_blocks_synchronizer",
    "rs/rosetta-api/icp/ledger_canister_blocks_synchronizer/test_utils",
    "rs/ledger_suite/icrc1",
    "rs/ledger_suite/icrc1/index-ng",
    "rs/ledger_suite/icrc1/ledger",
    "rs/ledger_suite/tests/sm-tests",
    "rs/ledger_suite/icrc1/archive",
    "rs/ledger_suite/icrc1/test_utils",
    "rs/ledger_suite/icrc1/tokens_u64",
    "rs/ledger_suite/icrc1/tokens_u256",
    "rs/ledger_suite/icp/test_utils",
    "rs/rosetta-api/icp/test_utils/sender_canister",
    "rs/rosetta-api/icrc1",
    "rs/rosetta-api/icrc1/client",
    "rs/rosetta-api/icrc1/runner",
    "rs/rosetta-api/tvl/xrc_mock",
    "rs/rust_canisters/call_tree_test",
    "rs/rust_canisters/canister_creator",
    "rs/rust_canisters/canister_log",
    "rs/rust_canisters/canister_serve",
    "rs/rust_canisters/canister_test",
    "rs/rust_canisters/dfn_core",
    "rs/rust_canisters/dfn_candid",
    "rs/rust_canisters/dfn_http",
    "rs/rust_canisters/dfn_http_metrics",
    "rs/rust_canisters/dfn_json",
    "rs/rust_canisters/dfn_macro",
    "rs/rust_canisters/dfn_protobuf",
    "rs/rust_canisters/downstream_calls_test",
    "rs/rust_canisters/ecdsa",
    "rs/rust_canisters/http_types",
    "rs/rust_canisters/load_simulator",
    "rs/rust_canisters/memory_test",
    "rs/rust_canisters/on_wire",
    "rs/rust_canisters/proxy_canister",
    "rs/rust_canisters/response_payload_test",
    "rs/rust_canisters/stable_reader",
    "rs/rust_canisters/stable_structures",
    "rs/rust_canisters/statesync_test",
    "rs/rust_canisters/tests",
    "rs/rust_canisters/xnet_test",
    "rs/sns/audit",
    "rs/sns/cli",
    "rs/sns/governance",
    "rs/sns/governance/proposal_criticality",
    "rs/sns/governance/protobuf_generator",
    "rs/sns/governance/token_valuation",
    "rs/sns/governance/proposals_amount_total_limit",
    "rs/sns/init",
    "rs/sns/init/protobuf_generator",
    "rs/sns/integration_tests",
    "rs/sns/root",
    "rs/sns/root/protobuf_generator",
    "rs/sns/swap",
    "rs/sns/swap/proto_library",
    "rs/sns/test_utils",
    "rs/sns/testing",
    "rs/starter",
    "rs/state_manager",
    "rs/state_machine_tests",
    "rs/state_layout",
    "rs/state_tool",
    "rs/sys",
    "rs/system_api",
    "rs/test_utilities",
    "rs/test_utilities/artifact_pool",
    "rs/test_utilities/consensus",
    "rs/test_utilities/execution_environment",
    "rs/test_utilities/load_wasm",
    "rs/test_utilities/compare_dirs",
    "rs/test_utilities/logger",
    "rs/test_utilities/metrics",
    "rs/test_utilities/serialization",
    "rs/test_utilities/state",
    "rs/test_utilities/time",
    "rs/test_utilities/types",
    "rs/test_utilities/tmpdir",
    "rs/tests/boundary_nodes",
    "rs/tests/boundary_nodes/custom_domains",
    "rs/tests/boundary_nodes/integration_test_common",
    "rs/tests/boundary_nodes/performance_test_common",
    "rs/tests/boundary_nodes/utils",
    "rs/tests/ckbtc",
    "rs/tests/consensus",
    "rs/tests/consensus/backup",
    "rs/tests/consensus/orchestrator",
    "rs/tests/consensus/subnet_recovery",
    "rs/tests/consensus/tecdsa",
    "rs/tests/consensus/upgrade",
    "rs/tests/consensus/utils",
    "rs/tests/consensus/vetkd",
    "rs/tests/cross_chain",
    "rs/tests/crypto",
    "rs/tests/driver",
    "rs/tests/execution",
    "rs/tests/financial_integrations",
    "rs/tests/financial_integrations/rosetta/",
    "rs/tests/financial_integrations/rosetta/rosetta_test_lib",
    "rs/tests/message_routing",
    "rs/tests/message_routing/common",
    "rs/tests/message_routing/rejoin_test_lib",
    "rs/tests/message_routing/xnet",
    "rs/tests/message_routing/xnet/slo_test_lib",
    "rs/tests/httpbin-rs",
    "rs/tests/networking",
    "rs/tests/networking/canisters",
    "rs/tests/networking/canister_http",
    "rs/tests/networking/subnet_update_workload",
    "rs/tests/nested",
    "rs/tests/nns",
    "rs/tests/nns/sns",
    "rs/tests/nns/sns/lib",
    "rs/tests/nns/ic_mainnet_nns_recovery",
    "rs/tests/nns/cycles_minting",
    "rs/tests/nns/nns_dapp",
    "rs/tests/node",
    "rs/tests/research",
    "rs/tests/research/spec_compliance",
    "rs/tests/sdk",
    "rs/tests/test_canisters/http_counter",
    "rs/tests/test_canisters/kv_store",
    "rs/tests/test_canisters/message",
    "rs/tests/idx",
    "rs/tests/idx/wabt-tests",
    "rs/tests/testnets",
    "rs/tla_instrumentation/local_key",
    "rs/tla_instrumentation/tla_instrumentation",
    "rs/tla_instrumentation/tla_instrumentation_proc_macros",
    "rs/tree_deserializer",
    "rs/types/types",
    "rs/types/types_test_utils",
    "rs/types/base_types",
    "rs/types/base_types/protobuf_generator",
    "rs/types/error_types",
    "rs/types/management_canister_types",
    "rs/types/wasm_types",
    "rs/universal_canister/lib",
    "rs/utils",
    "rs/utils/ensure",
    "rs/utils/lru_cache",
    "rs/utils/rustfmt",
    "rs/validator",
    "rs/validator/http_request_arbitrary",
    "rs/validator/ingress_message",
    "rs/validator/ingress_message/test_canister",
    "rs/workload_generator",
    "rs/xnet/hyper",
    "rs/xnet/payload_builder",
    "rs/xnet/uri",
]

resolver = "2"

exclude = ["universal_canister/impl"]

[workspace.package]
version = "0.9.0"
authors = ["The Internet Computer Project Developers"]
description = "Autonomous serverless cloud functionality for the public Internet."
documentation = "https://internetcomputer.org/docs/"
edition = "2021"

[profile.release]
# Add debug information to the release build (does NOT reduce the level of optimization!)
# Makes flamegraphs more readable.
# https://doc.rust-lang.org/cargo/reference/manifest.html#the-profile-sections
debug = true

[profile.release-stripped]
inherits = "release"
lto = "thin"
debug = false

[profile.release-lto]
inherits = "release"
# Enable "thin" LTO to reduce both the compilation time and the binary size.
# See: https://doc.rust-lang.org/cargo/reference/profiles.html#lto
lto = "thin"

[profile.canister-release]
inherits = "release"
debug = false
lto = true
opt-level = 'z'

[profile.dev.package.curve25519-dalek]
opt-level = 3

[profile.dev.package.ic_bls12_381]
opt-level = 3

[profile.dev.package.k256]
opt-level = 3

[profile.dev.package.sha2]
opt-level = 3

[profile.dev.package.p256]
opt-level = 3

[workspace.dependencies]
actix-web = "4.9.0"
actix-rt = "2.10.0"
anyhow = "1.0.93"
arbitrary = { version = "1.3.2", features = ["derive"] }
arrayvec = "0.7.4"
askama = { version = "0.12.1", features = ["serde-json"] }
assert_cmd = "2.0.16"
assert_matches = "1.5.0"
async-recursion = "1.0.5"
async-stream = "0.3.6"
async-trait = "0.1.83"
axum = "0.7.9"
backoff = "0.4"
base64 = { version = "0.13.1" }
bincode = "1.3.3"
bitcoin = { version = "0.32.5", features = ["default", "rand", "serde"] }
bitcoincore-rpc = "0.19.0"
# build-info and build-info-build MUST be kept in sync!
build-info = { git = "https://github.com/dfinity-lab/build-info", rev = "701a696844fba5c87df162fbbc1ccef96f27c9d7" }
build-info-build = { git = "https://github.com/dfinity-lab/build-info", rev = "701a696844fba5c87df162fbbc1ccef96f27c9d7", default-features = false }
bytes = "1.9.0"
candid = { version = "0.10.6" }
candid_parser = { version = "0.1.2" }
chrono = { version = "0.4.38", default-features = false, features = [
    "alloc",
    "clock",
    "serde",
] }
ciborium = "0.2.1"
clap = { version = "4.5.20", features = ["derive", "string"] }
# cloudflare v0.12 is broken, master is partly fixed but unreleased yet.
# see:
# - https://github.com/cloudflare/cloudflare-rs/issues/222
# - https://github.com/cloudflare/cloudflare-rs/issues/236
cloudflare = { git = "https://github.com/dfinity/cloudflare-rs.git", rev = "a6538a036926bd756986c9c0a5de356daef48881", default-features = false }
criterion = { version = "0.5.1", features = ["html_reports", "async_tokio"] }
crossbeam-channel = "0.5.13"
curve25519-dalek = { version = "4.1.3", features = [
    "group",
    "precomputed-tables",
] }
dfx-core = { version = "0.1.3" }
ed25519-dalek = { version = "2.1.1", features = [
    "std",
    "zeroize",
    "digest",
    "batch",
    "pkcs8",
    "pem",
    "hazmat",
] }
ethnum = { version = "1.3.2", features = ["serde"] }
flate2 = "1.0.31"
futures = "0.3.31"
futures-util = "0.3.31"
hex = { version = "0.4.3", features = ["serde"] }
http = "1.2.0"
http-body = "1.0.1"
http-body-util = "0.1.2"
humantime-serde = "1.1.1"
hyper = { version = "1.5.1", features = ["full"] }
hyper-rustls = { version = "0.27.3", default-features = false, features = [
    "http1",
    "http2",
    "native-tokio",
    "ring",
    "tls12",
] }
hyper-socks2 = { version = "0.9.1", default-features = false }
hyper-util = { version = "0.1.10", features = ["full"] }
ic-agent = { version = "0.39.2", features = ["pem", "ring"] }
ic-bn-lib = { git = "https://github.com/dfinity/ic-bn-lib", rev = "d74a6527fbaf8a2c1a7076983cc84f5c5a727923" }
ic-btc-interface = "0.2.2"
ic-canister-sig-creation = { git = "https://github.com/dfinity/ic-canister-sig-creation", rev = "7f9e931954637526295269155881207f6c832d6d" }
ic-cbor = "3"
ic-cdk = "0.17.1"
ic-cdk-macros = "0.17.0"
ic-cdk-timers = "0.11.0"
ic-certificate-verification = "3"
ic-certification = "3"
ic-http-certification = "3"
ic-http-gateway = "0.1"
ic-management-canister-types = "0.2.0"
ic-response-verification = "3"
ic-sha3 = "1.0.0"
ic-stable-structures = "0.6.5"
ic-transport-types = { version = "0.39.2" }
ic-utils = { version = "0.39", features = ["raw"] }
ic_bls12_381 = { version = "0.10.0", default-features = false, features = [
    "groups",
    "pairings",
    "alloc",
    "experimental",
    "zeroize",
] }
ic_principal = { version = "0.1.1", default-features = false }
idna = "1.0.2"
inferno = "0.12.0"
ipnet = { version = "2.10.1", features = ["serde"] }
itertools = "0.12.0"
k256 = { version = "0.13.4", default-features = false, features = [
    "arithmetic",
    "ecdsa",
    "pem",
    "pkcs8",
    "precomputed-tables",
    "schnorr",
    "std",
] }
# kube is used by our test driver
k8s-openapi = { version = "0.22.0", features = ["v1_28", "schemars"] }
kube = { version = "0.94.0", features = ["client", "derive"] }
lazy_static = "1.4.0"
leb128 = "0.2.5"
libc = "0.2.158"
libflate = "2.1.0"
libnss = "0.5.0"
local-ip-address = "0.5.6"
macaddr = "1.0"
memmap2 = "0.9.5"
minicbor = { version = "0.19.1", features = ["alloc", "derive"] }
minicbor-derive = "0.13.0"
mockall = "0.13.0"
mockito = "1.2.0"
nftables = "0.4"
nix = { version = "0.24.3", features = ["ptrace"] }
num_cpus = "1.16.0"
num-bigint = "0.4.6"
num-traits = { version = "0.2.12", features = ["libm"] }
opentelemetry = { version = "0.27.0", features = ["metrics", "trace"] }
opentelemetry-otlp = { version = "0.27.0", features = ["grpc-tonic"] }
opentelemetry_sdk = { version = "0.27.0", features = ["trace", "rt-tokio"] }
p256 = { version = "0.13.2", default-features = false, features = [
    "arithmetic",
    "ecdsa",
    "pem",
    "pkcs8",
] }
pairing = "0.23"
parking_lot = "0.12.3"
paste = "1.0.15"
ping = "0.5.0"
pkcs8 = "0.10.2"
pprof = { version = "0.14.0", default-features = false, features = [
    "criterion",
    "flamegraph",
    "prost-codec",
] }
predicates = "3.1.2"
pretty_assertions = "1.4.0"
proc-macro2 = "1.0.89"
prometheus = { version = "0.13.4", features = ["process"] }
prometheus-parse = { version = "0.2.4" }
proptest = "1.5.0"
proptest-derive = "0.5.0"
prost = "0.13.3"
prost-build = "0.13.3"
protobuf = "2.28.0"
quote = "1.0.37"
quinn = { version = "0.11.5", default-features = false, features = [
    "ring",
    "log",
    "runtime-tokio",
    "rustls",
] }
quinn-udp = "0.5.5"
rand = { version = "0.8.5", features = ["small_rng"] }
rand_chacha = "0.3.1"
rayon = "1.10.0"
rcgen = { version = "0.13.1", features = ["zeroize"] }
regex = "1.11.0"
reqwest = { version = "0.12.8", default-features = false, features = [
    "blocking",
    "http2",
    "json",
    "multipart",
    "rustls-tls",
    "rustls-tls-native-roots",
    "socks",
    "stream",
] }
rolling-file = "0.2.0"
rsa = { version = "0.9.6", features = ["sha2"] }
rstest = "0.19.0"
rustc-demangle = { version = "0.1.16" }
rustls = { version = "0.23.18", default-features = false, features = [
    "ring",
    "std",
    "brotli",
] }
schemars = { version = "0.8.21", features = ["derive"] }
serde = { version = "1.0.203", features = ["derive"] }
serde_bytes = "0.11.15"
serde_cbor = "0.11.2"
serde_json = { version = "^1.0.107" }
serde_with = "1.14.0"
serde_yaml = "0.9.33"
sha2 = "0.10.8"
sha3 = "0.10.8"
signature = "2.2.0"
simple_asn1 = "0.6.2"
slog = { version = "2.7.0", features = [
    "max_level_trace",
    "nested-values",
    "release_max_level_trace",
] }
slog-async = { version = "2.8.0", features = ["nested-values"] }
slog-scope = "4.4.0"
slog-term = "2.9.1"
socket2 = { version = "0.5.7", features = ["all"] }
ssh2 = "0.9.4"
static_assertions = "1.1.0"
strum = { version = "0.26.3", features = ["derive"] }
strum_macros = "0.26.4"
subtle = "2.6.1"
syn = { version = "1.0.109", features = ["fold", "full"] }
tar = "0.4.39"
tempfile = "3.12.0"
thiserror = "2.0.3"
threadpool = "1.8.1"
time = { version = "0.3.36", features = ["formatting"] }
tracing-flame = "0.2.0"
tokio = { version = "1.42.0", features = ["full"] }
tokio-metrics = "0.4.0"
tokio-rustls = { version = "0.26.0", default-features = false, features = [
    "ring",
] }
tokio-stream = "0.1.17"
tokio-test = "0.4.4"
tokio-util = { version = "0.7.13", features = ["full"] }
tonic = "0.12.3"
tonic-build = "0.12.3"
tower = { version = "0.5.1", features = ["full"] }
tower-http = { version = "0.6.2", features = [
    "cors",
    "limit",
    "trace",
    "request-id",
    "util",
    "compression-full",
    "tracing",
] }
tracing = "0.1.41"
tracing-appender = "0.2.3"
tracing-opentelemetry = "0.28.0"
tracing-subscriber = { version = "0.3.19", features = [
    "env-filter",
    "fmt",
    "json",
    "time",
] }
turmoil = "0.6.4"
url = { version = "2.5.3", features = ["serde"] }
uuid = { version = "1.11.0", features = ["v4", "serde"] }
walkdir = "2.3.3"
walrus = "0.21.1"
wasm-encoder = { version = "0.221.0", features = ["wasmparser"] }
wasmparser = "0.221.0"
wasmprinter = "0.221.0"
wast = "221.0.0"
wat = "1.221.0"
which = "6.0.3"
x509-cert = { version = "0.2.5", features = ["builder", "hazmat"] }
x509-parser = { version = "0.16.0" }
zeroize = { version = "1.8.1", features = ["zeroize_derive"] }
zstd = "0.13.2"
addr = { version = "0.15.6", default-features = false }
aide = "0.13.4"
arc-swap = "1.7.1"
assert-json-diff = "2.0.1"
async-scoped = "0.9"
axum-extra = "0.9.3"
axum-server = "0.6.0"
backon = "0.4.1"
base32 = "0.4.0"
bech32 = "0.9.0"
bip32 = "0.5"
bit-vec = "0.6.3"
bitcoind = "0.32.0"
bs58 = "0.5.0"
by_address = "1.1.0"
byte-unit = "4.0.14"
byteorder = "1.3.4"
cached = { version = "0.49", default-features = false }
canbench-rs = "0.1.7"
candid-utils = { path = "rs/nervous_system/candid_utils" }
canister-test = { path = "rs/rust_canisters/canister_test" }
canister_http = { path = "rs/tests/networking/canister_http" }
cargo_metadata = "0.14.2"
cc = "1.0"
cddl = "0.9.4"
certificate_orchestrator_interface = { path = "rs/boundary_node/certificate_issuance/certificate_orchestrator_interface" }
cfg-if = "1.0.0"
chacha20poly1305 = "0.10.0"
cloner-canister-types = { path = "rs/tests/networking/canisters" }
colored = "2.0.0"
comparable = "0.5.1"
config = { path = "rs/ic_os/config" }
config_types = { path = "rs/ic_os/config_types" }
console = "0.11"
convert_case = "0.6.0"
crc32fast = "1.2.0"
criterion-time = { path = "rs/criterion_time" }
crossbeam = "0.8.4"
csv = "1.1"
ctrlc = "3.4.5"
cvt = "0.1.1"
cycles-minting-canister = { path = "rs/nns/cmc" }
cycles_minting = { path = "rs/tests/nns/cycles_minting" }
dashmap = "6.1.0"
deterministic_ips = { path = "rs/ic_os/deterministic_ips" }
dfn_candid = { path = "rs/rust_canisters/dfn_candid" }
dfn_core = { path = "rs/rust_canisters/dfn_core" }
dfn_http = { path = "rs/rust_canisters/dfn_http" }
dfn_http_metrics = { path = "rs/rust_canisters/dfn_http_metrics" }
dfn_json = { path = "rs/rust_canisters/dfn_json" }
dfn_macro = { path = "rs/rust_canisters/dfn_macro" }
dfn_protobuf = { path = "rs/rust_canisters/dfn_protobuf" }
downstream-calls-test = { path = "rs/rust_canisters/downstream_calls_test" }
dyn-clone = "1.0.14"
educe = "0.4"
embedders_bench = { path = "rs/embedders/benches/embedders_bench" }
env-file-reader = "0.3.0"
erased-serde = "0.3.11"
escargot = "0.5.7"
ethers-core = "2.0.8"
evm-rpc-client = { path = "rs/ethereum/evm-rpc-client" }
evm_rpc_types = "1.3.0"
exec = "0.3.1"
execution-environment-bench = { path = "rs/execution_environment/benches/lib" }
eyre = "0.6.8"
fe-derive = { path = "rs/crypto/internal/crypto_lib/threshold_sig/canister_threshold_sig/fe-derive" }
form_urlencoded = "1"
fqdn = "0.3.11"
fs_extra = "1.2.0"
get_if_addrs = "0.5.3"
getrandom = "0.2"
group = "0.13"
hashlink = "0.8.0"
hex-literal = "0.4.1"
hkdf = "0.12"
hmac = "0.12"
humantime = "2.1.0"
ic-adapter-metrics-client = { path = "rs/monitoring/adapter_metrics/client" }
ic-adapter-metrics-server = { path = "rs/monitoring/adapter_metrics/server" }
ic-adapter-metrics-service = { path = "rs/monitoring/adapter_metrics/service" }
ic-admin-derive = { path = "rs/registry/admin-derive" }
ic-artifact-downloader = { path = "rs/p2p/artifact_downloader" }
ic-artifact-manager = { path = "rs/p2p/artifact_manager" }
ic-artifact-pool = { path = "rs/artifact_pool" }
ic-backup = { path = "rs/backup" }
ic-base-types = { path = "rs/types/base_types" }
ic-base-types-protobuf-generator = { path = "rs/types/base_types/protobuf_generator" }
ic-bitcoin-canister-mock = { path = "rs/bitcoin/mock" }
ic-boundary = { path = "rs/boundary_node/ic_boundary" }
ic-boundary-nodes-integration-test-common = { path = "rs/tests/boundary_nodes/integration_test_common" }
ic-boundary-nodes-performance-test-common = { path = "rs/tests/boundary_nodes/performance_test_common" }
ic-boundary-nodes-system-test-utils = { path = "rs/tests/boundary_nodes/utils" }
ic-btc-adapter = { path = "rs/bitcoin/adapter" }
ic-btc-adapter-client = { path = "rs/bitcoin/client" }
ic-btc-adapter-test-utils = { path = "rs/bitcoin/adapter/test_utils" }
ic-btc-checker = { path = "rs/bitcoin/checker" }
ic-btc-consensus = { path = "rs/bitcoin/consensus" }
ic-btc-replica-types = { path = "rs/bitcoin/replica_types" }
ic-btc-service = { path = "rs/bitcoin/service" }
ic-btc-validation = { path = "rs/bitcoin/validation" }
ic-canister-client = { path = "rs/canister_client" }
ic-canister-client-sender = { path = "rs/canister_client/sender" }
ic-canister-profiler = { path = "rs/rust_canisters/canister_profiler" }
ic-canister-sandbox-backend-lib = { path = "rs/canister_sandbox" }
ic-canisters-http-types = { path = "rs/rust_canisters/http_types" }
ic-canonical-state = { path = "rs/canonical_state" }
ic-canonical-state-tree-hash = { path = "rs/canonical_state/tree_hash" }
ic-canonical-state-tree-hash-test-utils = { path = "rs/canonical_state/tree_hash/test_utils" }
ic-certification-test-utils = { path = "rs/certification/test-utils" }
ic-certification-version = { path = "rs/canonical_state/certification_version" }
ic-certified-map = "0.3.2"
ic-ckbtc-agent = { path = "rs/bitcoin/ckbtc/agent" }
ic-ckbtc-minter = { path = "rs/bitcoin/ckbtc/minter" }
ic-cketh-minter = { path = "rs/ethereum/cketh/minter" }
ic-cketh-test-utils = { path = "rs/ethereum/cketh/test_utils" }
ic-config = { path = "rs/config" }
ic-consensus = { path = "rs/consensus" }
ic-consensus-dkg = { path = "rs/consensus/dkg" }
ic-consensus-manager = { path = "rs/p2p/consensus_manager" }
ic-consensus-mocks = { path = "rs/consensus/mocks" }
ic-consensus-utils = { path = "rs/consensus/utils" }
ic-crypto = { path = "rs/crypto" }
ic-crypto-ecdsa-secp256r1 = { path = "rs/crypto/ecdsa_secp256r1" }
ic-crypto-for-verification-only = { path = "rs/crypto/for_verification_only" }
ic-crypto-iccsa = { path = "rs/crypto/iccsa" }
ic-crypto-interfaces-sig-verification = { path = "rs/crypto/interfaces/sig_verification" }
ic-crypto-internal-basic-sig-cose = { path = "rs/crypto/internal/crypto_lib/basic_sig/cose" }
ic-crypto-internal-basic-sig-der-utils = { path = "rs/crypto/internal/crypto_lib/basic_sig/der_utils" }
ic-crypto-internal-basic-sig-ecdsa-secp256k1 = { path = "rs/crypto/internal/crypto_lib/basic_sig/ecdsa_secp256k1" }
ic-crypto-internal-basic-sig-ecdsa-secp256r1 = { path = "rs/crypto/internal/crypto_lib/basic_sig/ecdsa_secp256r1" }
ic-crypto-internal-basic-sig-ed25519 = { path = "rs/crypto/internal/crypto_lib/basic_sig/ed25519" }
ic-crypto-internal-basic-sig-iccsa = { path = "rs/crypto/internal/crypto_lib/basic_sig/iccsa" }
ic-crypto-internal-basic-sig-iccsa-test-utils = { path = "rs/crypto/internal/crypto_lib/basic_sig/iccsa/test_utils" }
ic-crypto-internal-basic-sig-rsa-pkcs1 = { path = "rs/crypto/internal/crypto_lib/basic_sig/rsa_pkcs1" }
ic-crypto-internal-bls12-381-type = { path = "rs/crypto/internal/crypto_lib/bls12_381/type" }
ic-crypto-internal-bls12-381-vetkd = { path = "rs/crypto/internal/crypto_lib/bls12_381/vetkd" }
ic-crypto-internal-csp = { path = "rs/crypto/internal/crypto_service_provider" }
ic-crypto-internal-csp-proptest-utils = { path = "rs/crypto/internal/crypto_service_provider/csp_proptest_utils" }
ic-crypto-internal-csp-protobuf-generator = { path = "rs/crypto/internal/crypto_service_provider/protobuf_generator" }
ic-crypto-internal-csp-test-utils = { path = "rs/crypto/internal/csp_test_utils" }
ic-crypto-internal-hmac = { path = "rs/crypto/internal/crypto_lib/hmac" }
ic-crypto-internal-logmon = { path = "rs/crypto/internal/logmon" }
ic-crypto-internal-multi-sig-bls12381 = { path = "rs/crypto/internal/crypto_lib/multi_sig/bls12_381" }
ic-crypto-internal-seed = { path = "rs/crypto/internal/crypto_lib/seed" }
ic-crypto-internal-sha2 = { path = "rs/crypto/internal/crypto_lib/sha2" }
ic-crypto-internal-test-vectors = { path = "rs/crypto/internal/test_vectors" }
ic-crypto-internal-threshold-sig-bls12381 = { path = "rs/crypto/internal/crypto_lib/threshold_sig/bls12_381" }
ic-crypto-internal-threshold-sig-canister-threshold-sig = { path = "rs/crypto/internal/crypto_lib/threshold_sig/canister_threshold_sig" }
ic-crypto-internal-threshold-sig-canister-threshold-sig-test-utils = { path = "rs/crypto/internal/crypto_lib/threshold_sig/canister_threshold_sig/test_utils" }
ic-crypto-internal-tls = { path = "rs/crypto/internal/crypto_lib/tls" }
ic-crypto-internal-types = { path = "rs/crypto/internal/crypto_lib/types" }
ic-crypto-node-key-generation = { path = "rs/crypto/node_key_generation" }
ic-crypto-node-key-validation = { path = "rs/crypto/node_key_validation" }
ic-crypto-prng = { path = "rs/crypto/prng" }
ic-crypto-secrets-containers = { path = "rs/crypto/secrets_containers" }
ic-crypto-sha2 = { path = "rs/crypto/sha2" }
ic-crypto-standalone-sig-verifier = { path = "rs/crypto/standalone-sig-verifier" }
ic-crypto-temp-crypto = { path = "rs/crypto/temp_crypto" }
ic-crypto-temp-crypto-vault = { path = "rs/crypto/temp_crypto/temp_vault" }
ic-crypto-test-utils = { path = "rs/crypto/test_utils" }
ic-crypto-test-utils-canister-sigs = { path = "rs/crypto/test_utils/canister_sigs" }
ic-crypto-test-utils-canister-threshold-sigs = { path = "rs/crypto/test_utils/canister_threshold_sigs" }
ic-crypto-test-utils-csp = { path = "rs/crypto/test_utils/csp" }
ic-crypto-test-utils-keygen = { path = "rs/crypto/test_utils/keygen" }
ic-crypto-test-utils-keys = { path = "rs/crypto/test_utils/keys" }
ic-crypto-test-utils-local-csp-vault = { path = "rs/crypto/test_utils/local_csp_vault" }
ic-crypto-test-utils-metrics = { path = "rs/crypto/test_utils/metrics" }
ic-crypto-test-utils-multi-sigs = { path = "rs/crypto/test_utils/multi_sigs" }
ic-crypto-test-utils-ni-dkg = { path = "rs/crypto/test_utils/ni-dkg" }
ic-crypto-test-utils-reproducible-rng = { path = "rs/crypto/test_utils/reproducible_rng" }
ic-crypto-test-utils-root-of-trust = { path = "rs/crypto/test_utils/root_of_trust" }
ic-crypto-test-utils-tls = { path = "rs/crypto/test_utils/tls" }
ic-crypto-tls-cert-validation = { path = "rs/crypto/node_key_validation/tls_cert_validation" }
ic-crypto-tls-interfaces = { path = "rs/crypto/tls_interfaces" }
ic-crypto-tls-interfaces-mocks = { path = "rs/crypto/tls_interfaces/mocks" }
ic-crypto-tree-hash = { path = "rs/crypto/tree_hash" }
ic-crypto-tree-hash-test-utils = { path = "rs/crypto/tree_hash/test_utils" }
ic-crypto-utils-basic-sig = { path = "rs/crypto/utils/basic_sig" }
ic-crypto-utils-canister-threshold-sig = { path = "rs/crypto/utils/canister_threshold_sig" }
ic-crypto-utils-ni-dkg = { path = "rs/crypto/utils/ni_dkg" }
ic-crypto-utils-threshold-sig = { path = "rs/crypto/utils/threshold_sig" }
ic-crypto-utils-threshold-sig-der = { path = "rs/crypto/utils/threshold_sig_der" }
ic-crypto-utils-tls = { path = "rs/crypto/utils/tls" }
ic-cup-explorer = { path = "rs/cup_explorer" }
ic-cycles-account-manager = { path = "rs/cycles_account_manager" }
ic-dashboard = { path = "rs/orchestrator/dashboard" }
ic-dummy-getrandom-for-wasm = { path = "packages/ic-dummy-getrandom-for-wasm" }
ic-ed25519 = { path = "packages/ic-ed25519" }
ic-embedders = { path = "rs/embedders" }
ic-error-types = { path = "rs/types/error_types" }
ic-ethereum-types = { path = "packages/ic-ethereum-types" }
ic-execution-environment = { path = "rs/execution_environment" }
ic-exhaustive-derive = { path = "rs/types/exhaustive_derive" }
ic-fstrim-tool = { path = "rs/ic_os/fstrim_tool" }
ic-http-endpoints-async-utils = { path = "rs/http_endpoints/async_utils" }
ic-http-endpoints-metrics = { path = "rs/http_endpoints/metrics" }
ic-http-endpoints-public = { path = "rs/http_endpoints/public" }
ic-http-endpoints-xnet = { path = "rs/http_endpoints/xnet" }
ic-http-utils = { path = "rs/http_utils" }
ic-https-outcalls-adapter = { path = "rs/https_outcalls/adapter" }
ic-https-outcalls-adapter-client = { path = "rs/https_outcalls/client" }
ic-https-outcalls-consensus = { path = "rs/https_outcalls/consensus" }
ic-https-outcalls-service = { path = "rs/https_outcalls/service" }
ic-icp-index = { path = "rs/ledger_suite/icp/index" }
ic-icp-rosetta-client = { path = "rs/rosetta-api/icp/client" }
ic-icp-rosetta-runner = { path = "rs/rosetta-api/icp/runner" }
ic-icrc-rosetta = { path = "rs/rosetta-api/icrc1" }
ic-icrc-rosetta-client = { path = "rs/rosetta-api/icrc1/client" }
ic-icrc-rosetta-runner = { path = "rs/rosetta-api/icrc1/runner" }
ic-icrc1 = { path = "rs/ledger_suite/icrc1" }
ic-icrc1-index-ng = { path = "rs/ledger_suite/icrc1/index-ng" }
ic-icrc1-ledger = { path = "rs/ledger_suite/icrc1/ledger" }
ic-icrc1-test-utils = { path = "rs/ledger_suite/icrc1/test_utils" }
ic-icrc1-tokens-u256 = { path = "rs/ledger_suite/icrc1/tokens_u256" }
ic-icrc1-tokens-u64 = { path = "rs/ledger_suite/icrc1/tokens_u64" }
ic-image-upgrader = { path = "rs/orchestrator/image_upgrader" }
ic-ingress-manager = { path = "rs/ingress_manager" }
ic-interfaces = { path = "rs/interfaces" }
ic-interfaces-adapter-client = { path = "rs/interfaces/adapter_client" }
ic-interfaces-certified-stream-store = { path = "rs/interfaces/certified_stream_store" }
ic-interfaces-certified-stream-store-mocks = { path = "rs/interfaces/certified_stream_store/mocks" }
ic-interfaces-mocks = { path = "rs/interfaces/mocks" }
ic-interfaces-registry = { path = "rs/interfaces/registry" }
ic-interfaces-registry-mocks = { path = "rs/interfaces/registry/mocks" }
ic-interfaces-state-manager = { path = "rs/interfaces/state_manager" }
ic-interfaces-state-manager-mocks = { path = "rs/interfaces/state_manager/mocks" }
ic-ledger-canister-blocks-synchronizer = { path = "rs/rosetta-api/icp/ledger_canister_blocks_synchronizer" }
ic-ledger-canister-blocks-synchronizer-test-utils = { path = "rs/rosetta-api/icp/ledger_canister_blocks_synchronizer/test_utils" }
ic-ledger-canister-core = { path = "rs/ledger_suite/common/ledger_canister_core" }
ic-ledger-core = { path = "rs/ledger_suite/common/ledger_core" }
ic-ledger-hash-of = { path = "packages/ic-ledger-hash-of" }
ic-ledger-suite-orchestrator = { path = "rs/ethereum/ledger-suite-orchestrator" }
ic-ledger-suite-orchestrator-test-utils = { path = "rs/ethereum/ledger-suite-orchestrator/test_utils" }
ic-ledger-suite-state-machine-tests = { path = "rs/ledger_suite/tests/sm-tests" }
ic-ledger-test-utils = { path = "rs/ledger_suite/icp/test_utils" }
ic-limits = { path = "rs/limits" }
ic-logger = { path = "rs/monitoring/logger" }
ic-mainnet-nns-recovery = { path = "rs/tests/nns/ic_mainnet_nns_recovery" }
ic-management-canister-types-private = { path = "rs/types/management_canister_types" }
ic-memory-transport = { path = "rs/p2p/memory_transport" }
ic-message = { path = "rs/tests/test_canisters/message" }
ic-messaging = { path = "rs/messaging" }
ic-metrics = { path = "rs/monitoring/metrics" }
ic-metrics-assert = { path = "packages/ic-metrics-assert" }
ic-metrics-encoder = "1.1.1"
ic-nervous-system-agent = { path = "rs/nervous_system/agent" }
ic-nervous-system-canisters = { path = "rs/nervous_system/canisters" }
ic-nervous-system-clients = { path = "rs/nervous_system/clients" }
ic-nervous-system-collections-union-multi-map = { path = "rs/nervous_system/collections/union_multi_map" }
ic-nervous-system-common = { path = "rs/nervous_system/common" }
ic-nervous-system-common-build-metadata = { path = "rs/nervous_system/common/build_metadata" }
ic-nervous-system-common-test-keys = { path = "rs/nervous_system/common/test_keys" }
ic-nervous-system-common-test-utils = { path = "rs/nervous_system/common/test_utils" }
ic-nervous-system-common-validation = { path = "rs/nervous_system/common/validation" }
ic-nervous-system-governance = { path = "rs/nervous_system/governance" }
ic-nervous-system-histogram = { path = "rs/nervous_system/histogram" }
ic-nervous-system-humanize = { path = "rs/nervous_system/humanize" }
ic-nervous-system-initial-supply = { path = "rs/nervous_system/initial_supply" }
ic-nervous-system-integration-tests = { path = "rs/nervous_system/integration_tests" }
ic-nervous-system-linear-map = { path = "rs/nervous_system/linear_map" }
ic-nervous-system-lock = { path = "rs/nervous_system/lock" }
ic-nervous-system-long-message = { path = "rs/nervous_system/long_message" }
ic-nervous-system-proto = { path = "rs/nervous_system/proto" }
ic-nervous-system-proto-protobuf-generator = { path = "rs/nervous_system/proto/protobuf_generator" }
ic-nervous-system-proxied-canister-calls-tracker = { path = "rs/nervous_system/proxied_canister_calls_tracker" }
ic-nervous-system-root = { path = "rs/nervous_system/root" }
ic-nervous-system-runtime = { path = "rs/nervous_system/runtime" }
ic-nervous-system-string = { path = "rs/nervous_system/string" }
ic-nervous-system-temporary = { path = "rs/nervous_system/temporary" }
ic-nervous-system-timestamp = { path = "rs/nervous_system/timestamp" }
ic-networking-subnet-update-workload = { path = "rs/tests/networking/subnet_update_workload" }
ic-neurons-fund = { path = "rs/nervous_system/neurons_fund" }
ic-nns-common = { path = "rs/nns/common" }
ic-nns-common-protobuf-generator = { path = "rs/nns/common/protobuf_generator" }
ic-nns-constants = { path = "rs/nns/constants" }
ic-nns-governance = { path = "rs/nns/governance" }
ic-nns-governance-api = { path = "rs/nns/governance/api" }
ic-nns-governance-init = { path = "rs/nns/governance/init" }
ic-nns-governance-protobuf-generator = { path = "rs/nns/governance/protobuf_generator" }
ic-nns-gtc = { path = "rs/nns/gtc" }
ic-nns-gtc-accounts = { path = "rs/nns/gtc_accounts" }
ic-nns-gtc-protobuf-generator = { path = "rs/nns/gtc/protobuf_generator" }
ic-nns-handler-lifeline-interface = { path = "rs/nns/handlers/lifeline/interface" }
ic-nns-handler-root = { path = "rs/nns/handlers/root/impl" }
ic-nns-handler-root-interface = { path = "rs/nns/handlers/root/interface" }
ic-nns-init = { path = "rs/nns/init" }
ic-nns-test-utils = { path = "rs/nns/test_utils" }
ic-nns-test-utils-golden-nns-state = { path = "rs/nns/test_utils/golden_nns_state" }
ic-nns-test-utils-macros = { path = "rs/nns/test_utils_macros" }
ic-p2p-test-utils = { path = "rs/p2p/test_utils" }
ic-peer-manager = { path = "rs/p2p/peer_manager" }
ic-pprof = { path = "rs/monitoring/pprof" }
ic-prep = { path = "rs/prep" }
ic-protobuf = { path = "rs/protobuf" }
ic-protobuf-generator = { path = "rs/protobuf/generator" }
ic-query-stats = { path = "rs/query_stats" }
ic-quic-transport = { path = "rs/p2p/quic_transport" }
ic-read-state-response-parser = { path = "rs/canister_client/read_state_response_parser" }
ic-recovery = { path = "rs/recovery" }
ic-regedit = { path = "rs/registry/regedit" }
ic-registry-canister-api = { path = "rs/registry/canister/api" }
ic-registry-canister-client = { path = "rs/registry/canister-client" }
ic-registry-client = { path = "rs/registry/client" }
ic-registry-client-fake = { path = "rs/registry/fake" }
ic-registry-client-helpers = { path = "rs/registry/helpers" }
ic-registry-common-proto = { path = "rs/registry/proto" }
ic-registry-common-proto-generator = { path = "rs/registry/proto/generator" }
ic-registry-keys = { path = "rs/registry/keys" }
ic-registry-local-registry = { path = "rs/registry/local_registry" }
ic-registry-local-store = { path = "rs/registry/local_store" }
ic-registry-local-store-artifacts = { path = "rs/registry/local_store/artifacts" }
ic-registry-nns-data-provider = { path = "rs/registry/nns_data_provider" }
ic-registry-nns-data-provider-wrappers = { path = "rs/registry/nns_data_provider_wrappers" }
ic-registry-node-provider-rewards = { path = "rs/registry/node_provider_rewards" }
ic-registry-proto-data-provider = { path = "rs/registry/proto_data_provider" }
ic-registry-provisional-whitelist = { path = "rs/registry/provisional_whitelist" }
ic-registry-replicator = { path = "rs/orchestrator/registry_replicator" }
ic-registry-routing-table = { path = "rs/registry/routing_table" }
ic-registry-subnet-features = { path = "rs/registry/subnet_features" }
ic-registry-subnet-type = { path = "rs/registry/subnet_type" }
ic-registry-transport = { path = "rs/registry/transport" }
ic-registry-transport-protobuf-generator = { path = "rs/registry/transport/protobuf_generator" }
ic-replay = { path = "rs/replay" }
ic-replica = { path = "rs/replica" }
ic-replica-setup-ic-network = { path = "rs/replica/setup_ic_network" }
ic-replica-tests = { path = "rs/replica_tests" }
ic-replicated-state = { path = "rs/replicated_state" }
ic-rosetta-api = { path = "rs/rosetta-api/icp" }
ic-rosetta-test-utils = { path = "rs/rosetta-api/icp/test_utils" }
ic-secp256k1 = { path = "packages/ic-secp256k1" }
ic-sender-canister = { path = "rs/rosetta-api/icp/test_utils/sender_canister" }
ic-sns-cli = { path = "rs/sns/cli" }
ic-sns-governance = { path = "rs/sns/governance" }
ic-sns-governance-api = { path = "rs/sns/governance/api" }
ic-sns-governance-proposal-criticality = { path = "rs/sns/governance/proposal_criticality" }
ic-sns-governance-proposals-amount-total-limit = { path = "rs/sns/governance/proposals_amount_total_limit" }
ic-sns-governance-protobuf-generator = { path = "rs/sns/governance/protobuf_generator" }
ic-sns-governance-token-valuation = { path = "rs/sns/governance/token_valuation" }
ic-sns-init = { path = "rs/sns/init" }
ic-sns-init-protobuf-generator = { path = "rs/sns/init/protobuf_generator" }
ic-sns-root = { path = "rs/sns/root" }
ic-sns-root-protobuf-generator = { path = "rs/sns/root/protobuf_generator" }
ic-sns-swap = { path = "rs/sns/swap" }
ic-sns-swap-proto-library = { path = "rs/sns/swap/proto_library" }
ic-sns-swap-protobuf-generator = { path = "rs/sns/swap/protobuf_generator" }
ic-sns-test-utils = { path = "rs/sns/test_utils" }
ic-sns-wasm = { path = "rs/nns/sns-wasm" }
ic-sns-wasm-protobuf-generator = { path = "rs/nns/sns-wasm/protobuf_generator" }
ic-starter = { path = "rs/starter" }
ic-state-layout = { path = "rs/state_layout" }
ic-state-machine-tests = { path = "rs/state_machine_tests" }
ic-state-manager = { path = "rs/state_manager" }
ic-state-sync-manager = { path = "rs/p2p/state_sync_manager" }
ic-state-tool = { path = "rs/state_tool" }
ic-subnet-splitting = { path = "rs/recovery/subnet_splitting" }
ic-sys = { path = "rs/sys" }
ic-system-api = { path = "rs/system_api" }
ic-system-test-driver = { path = "rs/tests/driver" }
ic-test-artifact-pool = { path = "rs/test_utilities/artifact_pool" }
ic-test-identity = { path = "rs/test_utilities/identity" }
ic-test-state-machine-client = "3.0"
ic-test-utilities = { path = "rs/test_utilities" }
ic-test-utilities-compare-dirs = { path = "rs/test_utilities/compare_dirs" }
ic-test-utilities-consensus = { path = "rs/test_utilities/consensus" }
ic-test-utilities-embedders = { path = "rs/test_utilities/embedders" }
ic-test-utilities-execution-environment = { path = "rs/test_utilities/execution_environment" }
ic-test-utilities-in-memory-logger = { path = "rs/test_utilities/in_memory_logger" }
ic-test-utilities-io = { path = "rs/test_utilities/io" }
ic-test-utilities-load-wasm = { path = "rs/test_utilities/load_wasm" }
ic-test-utilities-logger = { path = "rs/test_utilities/logger" }
ic-test-utilities-metrics = { path = "rs/test_utilities/metrics" }
ic-test-utilities-registry = { path = "rs/test_utilities/registry" }
ic-test-utilities-state = { path = "rs/test_utilities/state" }
ic-test-utilities-time = { path = "rs/test_utilities/time" }
ic-test-utilities-tmpdir = { path = "rs/test_utilities/tmpdir" }
ic-test-utilities-types = { path = "rs/test_utilities/types" }
ic-tests-ckbtc = { path = "rs/tests/ckbtc" }
ic-tracing = { path = "rs/monitoring/tracing" }
ic-tracing-jaeger-exporter = { path = "rs/monitoring/tracing/jaeger_exporter" }
ic-tracing-logging-layer = { path = "rs/monitoring/tracing/logging_layer" }
ic-types = { path = "rs/types/types" }
ic-types-test-utils = { path = "rs/types/types_test_utils" }
ic-universal-canister = { path = "rs/universal_canister/lib" }
ic-utils-ensure = { path = "rs/utils/ensure" }
ic-utils-lru-cache = { path = "rs/utils/lru_cache" }
ic-utils-rustfmt = { path = "rs/utils/rustfmt" }
ic-utils-thread = { path = "rs/utils/thread" }
ic-validate-eq = { path = "rs/utils/validate_eq" }
ic-validate-eq-derive = { path = "rs/utils/validate_eq_derive" }
ic-validator = { path = "rs/validator" }
ic-validator-http-request-test-utils = { path = "rs/validator/http_request_test_utils" }
ic-validator-ingress-message = { path = "rs/validator/ingress_message" }
ic-verify-bls-signature = { version = "0.6", default-features = false }
ic-vetkd-utils = { path = "packages/ic-vetkd-utils" }
ic-wasm-transform = { path = "rs/wasm_transform" }
ic-wasm-types = { path = "rs/types/wasm_types" }
ic-xnet-hyper = { path = "rs/xnet/hyper" }
ic-xnet-payload-builder = { path = "rs/xnet/payload_builder" }
ic-xnet-uri = { path = "rs/xnet/uri" }
ic-xrc-types = "1.1.0"
ic_consensus_system_test_catch_up_test_common = { path = "rs/tests/consensus/catch_up_test_common" }
ic_consensus_system_test_liveness_test_common = { path = "rs/tests/consensus/liveness_test_common" }
ic_consensus_system_test_utils = { path = "rs/tests/consensus/utils" }
ic_consensus_threshold_sig_system_test_utils = { path = "rs/tests/consensus/tecdsa/utils" }
icp-ledger = { path = "rs/ledger_suite/icp" }
icrc-ledger-agent = { path = "packages/icrc-ledger-agent" }
icrc-ledger-client = { path = "packages/icrc-ledger-client" }
icrc-ledger-client-cdk = { path = "packages/icrc-ledger-client-cdk" }
icrc1-test-env = { git = "https://github.com/dfinity/ICRC-1", rev = "26a80d777e079644cd69e883e18dad1a201f5b1a" }
icrc1-test-suite = { git = "https://github.com/dfinity/ICRC-1", rev = "26a80d777e079644cd69e883e18dad1a201f5b1a" }
indexmap = "2.2.6"
indicatif = "0.17.3"
indoc = "1.0.9"
insta = "1.8.0"
instant-acme = "0.7.2"
intmap = "1.1.0"
isocountry = "0.3.2"
json-patch = "0.2.6"
json5 = "0.4.1"
ledger-canister = { path = "rs/ledger_suite/icp/ledger" }
ledger-canister-protobuf-generator = { path = "rs/ledger_suite/icp/protobuf_generator" }
lifeline = { path = "rs/nns/handlers/lifeline/impl" }
linux_kernel_command_line = { path = "rs/ic_os/linux_kernel_command_line" }
lmdb-rkv = { git = "https://github.com/dfinity-lab/lmdb-rs", rev = "f62018b2deb79ea0d53914d5502389433fc3e6da" }
lmdb-rkv-sys = { git = "https://github.com/dfinity-lab/lmdb-rs", rev = "f62018b2deb79ea0d53914d5502389433fc3e6da" }
local_key = { path = "rs/tla_instrumentation/local_key" }
lru = { version = "0.7.8", default-features = false }
maplit = "1.0.2"
maxminddb = "0.24"
memory_tracker = { path = "rs/memory_tracker" }
moka = "0.12.8"
more-asserts = "0.3.1"
network = { path = "rs/ic_os/network" }
nns_dapp = { path = "rs/tests/nns/nns_dapp" }
num-bigint-dig = "0.8"
num-rational = "0.2.2"
on_wire = { path = "rs/rust_canisters/on_wire" }
once_cell = "1.18.0"
openssh-keys = "0.5.0"
opentelemetry-prometheus = "0.13"
os_qualification_utils = { path = "rs/tests/dre/utils" }
partition_tools = { path = "rs/ic_os/build_tools/partition_tools" }
pcre2 = "0.2.6"
pem = "1.1.0"
phantom_newtype = { path = "rs/phantom_newtype" }
pin-project-lite = "0.2.13"
pocket-ic = { path = "packages/pocket-ic" }
pretty-bytes = "0.2.2"
primitive-types = "0.12"
priority-queue = "1.3.1"
proxy_canister = { path = "rs/rust_canisters/proxy_canister" }
publicsuffix = "2.2.3"
rand_distr = "0.4"
rand_pcg = "0.3.1"
random-traffic-test = { path = "rs/rust_canisters/random_traffic_test" }
rate-limit-canister-integration-tests = { path = "rs/boundary_node/rate_limits/integration_tests" }
rate-limits-api = { path = "rs/boundary_node/rate_limits/api" }
ratelimit = "0.9.1"
registry-canister = { path = "rs/registry/canister" }
registry-canister-protobuf-generator = { path = "rs/registry/canister/protobuf_generator" }
rejoin-test-lib = { path = "rs/tests/message_routing/rejoin_test_lib" }
rgb = "0.8.37"
ring = "0.17.7"
ripemd = "0.1.1"
rlp = "0.5.2"
rosetta-core = { path = "rs/rosetta-api/common/rosetta_core" }
rosetta_test_lib = { path = "rs/tests/financial_integrations/rosetta/rosetta_test_lib" }
rusqlite = "~0.28.0"
rust_decimal = "1.36.0"
rust_decimal_macros = "1.36.0"
rustls-pemfile = "2.1.3"
rustversion = "1.0"
rusty-fork = "0.3.0"
salt-sharing-api = { path = "rs/boundary_node/salt_sharing/api" }
scoped_threadpool = "0.1.*"
scopeguard = "1.1.0"
scraper = "0.17.1"
secp256k1 = "0.22"
serde-bytes-repr = "0.1.5"
serde_regex = "1.1"
simple_moving_average = "1.0.2"
slog-envlogger = "2.2.0"
slog-json = "2.6.1"
sns_system_test_lib = { path = "rs/tests/nns/sns/lib" }
spec-compliance = { path = "rs/tests/research/spec_compliance" }
stubborn-io = "0.3.2"
systest-message-routing-common = { path = "rs/tests/message_routing/common" }
tarpc = "0.34"
textplots = "0.8"
thousands = "0.2.0"
tikv-jemalloc-ctl = "0.5"
tikv-jemallocator = "0.5"
tla_instrumentation = { path = "rs/tla_instrumentation/tla_instrumentation" }
tla_instrumentation_proc_macros = { path = "rs/tla_instrumentation/tla_instrumentation_proc_macros" }
tokio-io-timeout = "1.2.0"
tokio-serde = "0.8"
tokio-socks = "0.5.1"
tower-request-id = "0.3.0"
tower-test = "0.4.0"
tower_governor = "0.4.2"
tracing-serde = "0.1.3"
tracing-slog = "0.2"
tree-deserializer = { path = "rs/tree_deserializer" }
trust-dns-resolver = "0.22.0"
universal-canister = { path = "rs/universal_canister/impl" }
utils = { path = "rs/ic_os/utils" }
warp = "0.3.7"
wasm-bindgen = "0.2.84"
wasmtime = { version = "29.0.0", default-features = false }
wasmtime-environ = "29.0.0"
wee_alloc = "0.4.3"
wsl = "0.1.0"
wycheproof = { version = "0.6", default-features = false }
xnet-slo-test-lib = { path = "rs/tests/message_routing/xnet/slo_test_lib" }
xnet-test = { path = "rs/rust_canisters/xnet_test" }
xrc-mock = { path = "rs/rosetta-api/tvl/xrc_mock" }
yansi = "0.5.0"

[workspace.dependencies.ic-wasm]
default-features = false
features = ["exe"]
version = "^0.8.1"

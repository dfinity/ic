[workspace]

members = [
    "packages/icrc-ledger-agent",
    "packages/icrc-ledger-client",
    "packages/icrc-ledger-client-cdk",
    "packages/icrc-ledger-types",
    "packages/ic-ledger-hash-of",
    "packages/ic-signature-verification",
    "packages/pocket-ic",
    "packages/ic-vetkd-utils",
    "rs/artifact_pool",
    "rs/async_utils",
    "rs/backup",
    "rs/bitcoin/adapter",
    "rs/bitcoin/client",
    "rs/bitcoin/service",
    "rs/bitcoin/ckbtc/agent",
    "rs/bitcoin/ckbtc/minter",
    "rs/bitcoin/ckbtc/kyt",
    "rs/bitcoin/consensus",
    "rs/bitcoin/kyt",
    "rs/bitcoin/mock",
    "rs/bitcoin/replica_types",
    "rs/boundary_node/canary_proxy",
    "rs/boundary_node/certificate_issuance/certificate_issuer",
    "rs/boundary_node/certificate_issuance/certificate_orchestrator",
    "rs/boundary_node/certificate_issuance/certificate_syncer",
    "rs/boundary_node/denylist_updater",
    "rs/boundary_node/discower_bowndary",
    "rs/boundary_node/ic_balance_exporter",
    "rs/boundary_node/ic_boundary",
    "rs/boundary_node/icx_proxy",
    "rs/boundary_node/prober",
    "rs/boundary_node/systemd_journal_gatewayd_shim",
    "rs/canister_client",
    "rs/canister_client/sender",
    "rs/cross-chain/proposal-cli",
    "rs/cycles_account_manager",
    "rs/ethereum/cketh/minter",
    "rs/ethereum/evm-rpc-client",
    "rs/ethereum/ledger-suite-orchestrator",
    "rs/https_outcalls/adapter",
    "rs/https_outcalls/client",
    "rs/https_outcalls/consensus",
    "rs/https_outcalls/service",
    "rs/canister_sandbox",
    "rs/canonical_state",
    "rs/canonical_state/tree_hash",
    "rs/canonical_state/tree_hash/test_utils",
    "rs/certification",
    "rs/certification/test-utils",
    "rs/config",
    "rs/consensus",
    "rs/consensus/mocks",
    "rs/consensus/utils",
    "rs/constants",
    "rs/criterion_time",
    "rs/crypto",
    "rs/crypto/ecdsa_secp256r1",
    "rs/crypto/ed25519",
    "rs/crypto/for_verification_only",
    "rs/crypto/iccsa",
    "rs/crypto/internal/crypto_lib/basic_sig/der_utils",
    "rs/crypto/internal/crypto_lib/basic_sig/ecdsa_secp256k1",
    "rs/crypto/internal/crypto_lib/basic_sig/ecdsa_secp256r1",
    "rs/crypto/internal/crypto_lib/basic_sig/ed25519",
    "rs/crypto/internal/crypto_lib/basic_sig/iccsa",
    "rs/crypto/internal/crypto_lib/basic_sig/iccsa/test_utils",
    "rs/crypto/internal/crypto_lib/basic_sig/rsa_pkcs1",
    "rs/crypto/internal/crypto_lib/bls12_381/type",
    "rs/crypto/internal/crypto_lib/bls12_381/vetkd",
    "rs/crypto/internal/crypto_lib/hmac",
    "rs/crypto/internal/crypto_lib/multi_sig/bls12_381",
    "rs/crypto/internal/crypto_lib/seed",
    "rs/crypto/internal/crypto_lib/sha2",
    "rs/crypto/secp256k1",
    "rs/crypto/secrets_containers",
    "rs/crypto/internal/crypto_lib/threshold_sig/bls12_381",
    "rs/crypto/internal/crypto_lib/threshold_sig/tecdsa",
    "rs/crypto/internal/crypto_lib/threshold_sig/tecdsa/test_utils",
    "rs/crypto/internal/crypto_lib/tls",
    "rs/crypto/internal/crypto_lib/types",
    "rs/crypto/internal/crypto_service_provider",
    "rs/crypto/internal/crypto_service_provider/protobuf_generator",
    "rs/crypto/internal/csp_test_utils",
    "rs/crypto/internal/logmon",
    "rs/crypto/test_utils/reproducible_rng",
    "rs/crypto/internal/test_vectors",
    "rs/crypto/node_key_generation",
    "rs/crypto/node_key_validation",
    "rs/crypto/getrandom_for_wasm",
    "rs/crypto/prng",
    "rs/crypto/sha2",
    "rs/crypto/utils/canister_threshold_sig",
    "rs/crypto/temp_crypto",
    "rs/crypto/test_utils",
    "rs/crypto/test_utils/canister_sigs",
    "rs/crypto/test_utils/canister_threshold_sigs",
    "rs/crypto/test_utils/metrics",
    "rs/crypto/test_utils/ni-dkg",
    "rs/crypto/test_utils/tls",
    "rs/crypto/tls_interfaces",
    "rs/crypto/tls_interfaces/mocks",
    "rs/crypto/tree_hash",
    "rs/crypto/tree_hash/test_utils",
    "rs/crypto/utils/basic_sig",
    "rs/crypto/utils/ni_dkg",
    "rs/crypto/utils/threshold_sig",
    "rs/crypto/utils/threshold_sig_der",
    "rs/crypto/utils/tls",
    "rs/cup_explorer",
    "rs/depcheck",
    "rs/drun",
    "rs/recovery",
    "rs/recovery/subnet_splitting",
    "rs/replay",
    "rs/embedders",
    "rs/execution_environment",
    "rs/execution_environment/benches/lib",
    "rs/execution_environment/tools",
    "rs/http_endpoints/public",
    "rs/http_endpoints/metrics",
    "rs/http_utils",
    "rs/ic_os/deterministic_ips",
    "rs/ic_os/dflate",
    "rs/ic_os/diroid",
    "rs/ic_os/config",
    "rs/ic_os/fstrim_tool",
    "rs/ic_os/guestos_tool",
    "rs/ic_os/hostos_tool",
    "rs/ic_os/inject_files",
    "rs/ic_os/launch-single-vm",
    "rs/ic_os/network",
    "rs/ic_os/nft_exporter",
    "rs/ic_os/nss_icos",
    "rs/ic_os/setupos-inject-configuration",
    "rs/ic_os/partition_tools",
    "rs/ic_os/setupos-disable-checks",
    "rs/ic_os/setupos_tool",
    "rs/ic_os/utils",
    "rs/ic_os/vsock/guest",
    "rs/ic_os/vsock/host",
    "rs/ic_os/vsock/vsock_lib",
    "rs/ingress_manager",
    "rs/interfaces",
    "rs/interfaces/adapter_client",
    "rs/interfaces/certified_stream_store",
    "rs/interfaces/certified_stream_store/mocks",
    "rs/interfaces/mocks",
    "rs/interfaces/registry",
    "rs/interfaces/registry/mocks",
    "rs/interfaces/state_manager",
    "rs/interfaces/state_manager/mocks",
    "rs/memory_tracker",
    "rs/messaging",
    "rs/monitoring/adapter_metrics/client",
    "rs/monitoring/adapter_metrics/server",
    "rs/monitoring/adapter_metrics/service",
    "rs/monitoring/logger",
    "rs/monitoring/metrics",
    "rs/monitoring/pprof",
    "rs/nervous_system/agent",
    "rs/nervous_system/clients",
    "rs/nervous_system/collections/union_multi_map",
    "rs/nervous_system/common",
    "rs/nervous_system/common/build_metadata",
    "rs/nervous_system/common/test_canister",
    "rs/nervous_system/common/test_keys",
    "rs/nervous_system/common/test_utils",
    "rs/nervous_system/humanize",
    "rs/nervous_system/integration_tests",
    "rs/nervous_system/lock",
    "rs/nervous_system/neurons_fund",
    "rs/nervous_system/neurons_fund/nfplot",
    "rs/nervous_system/proto",
    "rs/nervous_system/proto/protobuf_generator",
    "rs/nervous_system/proxied_canister_calls_tracker",
    "rs/nervous_system/root",
    "rs/nervous_system/runtime",
    "rs/nervous_system/string",
    "rs/nervous_system/temporary",
    "rs/nervous_system/tools/sync-with-released-nevous-system-wasms",
    "rs/nns/constants",
    "rs/nns/common",
    "rs/nns/common/protobuf_generator",
    "rs/nns/cmc",
    "rs/nns/governance",
    "rs/nns/governance/api",
    "rs/nns/governance/init",
    "rs/nns/governance/protobuf_generator",
    "rs/nns/handlers/lifeline/impl",
    "rs/nns/handlers/lifeline/interface",
    "rs/nns/handlers/root/impl",
    "rs/nns/handlers/root/impl/protobuf_generator",
    "rs/nns/handlers/root/interface",
    "rs/nns/identity",
    "rs/nns/init",
    "rs/nns/inspector",
    "rs/nns/integration_tests",
    "rs/nns/nns-ui",
    "rs/nns/test_utils",
    "rs/nns/test_utils/golden_nns_state",
    "rs/nns/test_utils_macros",
    "rs/nns/gtc",
    "rs/nns/gtc/protobuf_generator",
    "rs/nns/gtc_accounts",
    "rs/nns/sns-wasm",
    "rs/nns/sns-wasm/protobuf_generator",
    "rs/determinism_test",
    "rs/orchestrator",
    "rs/orchestrator/dashboard",
    "rs/orchestrator/registry_replicator",
    "rs/p2p/artifact_downloader",
    "rs/p2p/artifact_manager",
    "rs/p2p/consensus_manager",
    "rs/p2p/peer_manager",
    "rs/p2p/memory_transport",
    "rs/p2p/quic_transport",
    "rs/p2p/state_sync_manager",
    "rs/p2p/test_utils",
    "rs/replica/setup_ic_network",
    "rs/phantom_newtype",
    "rs/prep",
    "rs/protobuf",
    "rs/protobuf/generator",
    "rs/pocket_ic_server",
    "rs/registry/admin",
    "rs/registry/admin-derive",
    "rs/registry/canister",
    "rs/registry/canister/api",
    "rs/registry/canister/protobuf_generator",
    "rs/registry/client",
    "rs/registry/fake",
    "rs/registry/helpers",
    "rs/registry/local_registry",
    "rs/registry/local_store",
    "rs/registry/local_store/artifacts",
    "rs/registry/keys",
    "rs/registry/proto",
    "rs/registry/proto/generator",
    "rs/registry/proto_data_provider",
    "rs/registry/provisional_whitelist",
    "rs/registry/regedit",
    "rs/registry/nns_data_provider",
    "rs/registry/nns_data_provider_wrappers",
    "rs/registry/routing_table",
    "rs/registry/subnet_features",
    "rs/registry/subnet_type",
    "rs/registry/transport",
    "rs/registry/transport/protobuf_generator",
    "rs/replica",
    "rs/replica_tests",
    "rs/replicated_state",
    "rs/rosetta-api",
    "rs/rosetta-api/rosetta_core",
    "rs/rosetta-api/runner",
    "rs/rosetta-api/client",
    "rs/rosetta-api/icp_ledger",
    "rs/rosetta-api/icp_ledger/archive",
    "rs/rosetta-api/icp_ledger/ledger",
    "rs/rosetta-api/icp_ledger/protobuf_generator",
    "rs/rosetta-api/icp_ledger/index",
    "rs/rosetta-api/icp_ledger/rosetta-integration-tests",
    "rs/rosetta-api/icp_ledger/test_utils",
    "rs/rosetta-api/ledger_core",
    "rs/rosetta-api/ledger_canister_core",
    "rs/rosetta-api/ledger_canister_blocks_synchronizer",
    "rs/rosetta-api/ledger_canister_blocks_synchronizer/test_utils",
    "rs/rosetta-api/icrc1",
    "rs/rosetta-api/icrc1/benchmark/generator",
    "rs/rosetta-api/icrc1/benchmark/worker",
    "rs/rosetta-api/icrc1/index",
    "rs/rosetta-api/icrc1/index-ng",
    "rs/rosetta-api/icrc1/ledger",
    "rs/rosetta-api/icrc1/rosetta",
    "rs/rosetta-api/icrc1/rosetta/client",
    "rs/rosetta-api/icrc1/rosetta/runner",
    "rs/rosetta-api/icrc1/ledger/sm-tests",
    "rs/rosetta-api/icrc1/archive",
    "rs/rosetta-api/icrc1/test_utils",
    "rs/rosetta-api/icrc1/tokens_u64",
    "rs/rosetta-api/icrc1/tokens_u256",
    "rs/rosetta-api/hardware_wallet_tests",
    "rs/rosetta-api/test_utils",
    "rs/rosetta-api/test_utils/sender_canister",
    "rs/rosetta-api/tvl",
    "rs/rosetta-api/tvl/xrc_mock",
    "rs/rust_canisters/call_tree_test",
    "rs/rust_canisters/canister_creator",
    "rs/rust_canisters/canister_log",
    "rs/rust_canisters/canister_serve",
    "rs/rust_canisters/canister_test",
    "rs/rust_canisters/dfn_core",
    "rs/rust_canisters/dfn_candid",
    "rs/rust_canisters/dfn_http",
    "rs/rust_canisters/dfn_http_metrics",
    "rs/rust_canisters/dfn_json",
    "rs/rust_canisters/dfn_macro",
    "rs/rust_canisters/dfn_protobuf",
    "rs/rust_canisters/downstream_calls_test",
    "rs/rust_canisters/ecdsa",
    "rs/rust_canisters/http_types",
    "rs/rust_canisters/memory_test",
    "rs/rust_canisters/on_wire",
    "rs/rust_canisters/pmap",
    "rs/rust_canisters/proxy_canister",
    "rs/rust_canisters/response_payload_test",
    "rs/rust_canisters/stable_reader",
    "rs/rust_canisters/stable_structures",
    "rs/rust_canisters/statesync_test",
    "rs/rust_canisters/tests",
    "rs/rust_canisters/xnet_test",
    "rs/scenario_tests",
    "rs/sns/audit",
    "rs/sns/cli",
    "rs/sns/governance",
    "rs/sns/governance/proposal_criticality",
    "rs/sns/governance/protobuf_generator",
    "rs/sns/governance/token_valuation",
    "rs/sns/governance/proposals_amount_total_limit",
    "rs/sns/init",
    "rs/sns/init/protobuf_generator",
    "rs/sns/integration_tests",
    "rs/sns/root",
    "rs/sns/root/protobuf_generator",
    "rs/sns/swap",
    "rs/sns/swap/proto_library",
    "rs/sns/test_utils",
    "rs/starter",
    "rs/state_manager",
    "rs/state_machine_tests",
    "rs/state_layout",
    "rs/state_tool",
    "rs/sys",
    "rs/system_api",
    "rs/test_utilities",
    "rs/test_utilities/artifact_pool",
    "rs/test_utilities/consensus",
    "rs/test_utilities/execution_environment",
    "rs/test_utilities/load_wasm",
    "rs/test_utilities/compare_dirs",
    "rs/test_utilities/logger",
    "rs/test_utilities/metrics",
    "rs/test_utilities/serialization",
    "rs/test_utilities/state",
    "rs/test_utilities/time",
    "rs/test_utilities/types",
    "rs/test_utilities/tmpdir",
    "rs/tests",
    "rs/tests/consensus",
    "rs/tests/consensus/orchestrator",
    "rs/tests/consensus/tecdsa",
    "rs/tests/consensus/utils",
    "rs/tests/driver",
    "rs/tests/httpbin-rs",
    "rs/tests/networking",
    "rs/tests/networking/canisters",
    "rs/tests/networking/canister_http",
    "rs/tests/nested",
    "rs/tests/nns/sns",
    "rs/tests/nns/ic_mainnet_nns_recovery",
    "rs/tests/sdk",
    "rs/tests/test_canisters/http_counter",
    "rs/tests/test_canisters/kv_store",
    "rs/tests/test_canisters/message",
    "rs/tests/testing_verification",
    "rs/tests/testing_verification/wabt-tests",
    "rs/tests/testing_verification/spec_compliance",
    "rs/tests/testing_verification/testnets",
    "rs/tree_deserializer",
    "rs/types/types",
    "rs/types/types_test_utils",
    "rs/types/base_types",
    "rs/types/base_types/protobuf_generator",
    "rs/types/error_types",
    "rs/types/management_canister_types",
    "rs/types/wasm_types",
    "rs/universal_canister/lib",
    "rs/utils",
    "rs/utils/ensure",
    "rs/utils/lru_cache",
    "rs/utils/rustfmt",
    "rs/validator",
    "rs/validator/http_request_arbitrary",
    "rs/validator/ingress_message",
    "rs/validator/ingress_message/test_canister",
    "rs/workload_generator",
    "rs/xnet/endpoint",
    "rs/xnet/hyper",
    "rs/xnet/payload_builder",
    "rs/xnet/uri",
    "rs/registry/node_provider_rewards",
]

resolver = "2"

exclude = ["universal_canister/impl"]

[workspace.package]
version = "0.9.0"
authors = ["The Internet Computer Project Developers"]
description = "Autonomous serverless cloud functionality for the public Internet."
documentation = "https://internetcomputer.org/docs/"
edition = "2021"

[profile.release]
# Add debug information to the release build (does NOT reduce the level of optimization!)
# Makes flamegraphs more readable.
# https://doc.rust-lang.org/cargo/reference/manifest.html#the-profile-sections
debug = true

[profile.release-stripped]
inherits = "release"
lto = "thin"
debug = false

[profile.release-lto]
inherits = "release"
# Enable "thin" LTO to reduce both the compilation time and the binary size.
# See: https://doc.rust-lang.org/cargo/reference/profiles.html#lto
lto = "thin"

[profile.canister-release]
inherits = "release"
debug = false
lto = true
opt-level = 'z'

[profile.dev.package.curve25519-dalek]
opt-level = 3

[profile.dev.package.ic_bls12_381]
opt-level = 3

[profile.dev.package.k256]
opt-level = 3

[profile.dev.package.sha2]
opt-level = 3

[profile.dev.package.p256]
opt-level = 3

[patch.crates-io]
# Current jsonrpc version (0.12.1) does not support ipv6 addressing. When new version is
# released this can be removed.
jsonrpc = { git = "https://github.com/apoelstra/rust-jsonrpc", rev = "e42044d" }

[workspace.dependencies]
anyhow = "^1"
arbitrary = { version = "1.3.0", features = ["derive"] }
arrayvec = "0.7.4"
askama = { version = "0.12.1", features = ["serde-json"] }
assert_matches = "1.5.0"
async-recursion = "1.0.5"
async-scoped = { version = "0.8", features = ["use-tokio"] }
async-stream = "0.3.5"
async-trait = "0.1.81"
axum = "0.7.5"
backoff = "0.4"
base64 = { version = "0.13.1" }
bincode = "1.3.3"
# build-info and build-info-build MUST be kept in sync!
build-info = { git = "https://github.com/dfinity-lab/build-info", rev = "701a696844fba5c87df162fbbc1ccef96f27c9d7" }
build-info-build = { git = "https://github.com/dfinity-lab/build-info", rev = "701a696844fba5c87df162fbbc1ccef96f27c9d7", default-features = false }
bytes = "1.7.1"
candid = { version = "0.10.6" }
candid_parser = { version = "0.1.2" }
chrono = { version = "0.4.38", default-features = false, features = [
    "alloc",
    "clock",
    "serde",
] }
ciborium = "0.2.1"
clap = { version = "4.4.6", features = ["derive", "string"] }
# cloudflare v0.12 is broken, master is partly fixed but unreleased yet.
# see:
# - https://github.com/cloudflare/cloudflare-rs/issues/222
# - https://github.com/cloudflare/cloudflare-rs/issues/236
cloudflare = { git = "https://github.com/dfinity/cloudflare-rs.git", rev = "a6538a036926bd756986c9c0a5de356daef48881", default-features = false, feature = [
    "rustls-tls",
] }
criterion = { version = "0.5.1", features = ["html_reports", "async_tokio"] }
crossbeam-channel = "0.5.13"
curve25519-dalek = { version = "4.1.3", features = [
    "group",
    "precomputed-tables",
] }
ed25519-dalek = { version = "2.1.1", features = [
    "std",
    "zeroize",
    "digest",
    "batch",
    "pkcs8",
    "pem",
    "hazmat",
] }
ethnum = { version = "1.3.2", features = ["serde"] }
flate2 = "1.0.31"
futures = "0.3.30"
futures-util = "0.3.30"
hex = { version = "0.4.3", features = ["serde"] }
http = "1.1.0"
http-body = "1.0.1"
http-body-util = "0.1.2"
humantime-serde = "1.1.1"
hyper = { version = "1.4.1", features = ["full"] }
hyper-rustls = { version = "0.27.2", default-features = false, features = [
    "http1",
    "http2",
    "native-tokio",
    "ring",
    "tls12",
] }
hyper-socks2 = { version = "0.9.1", default-features = false }
hyper-util = { version = "0.1.7", features = ["full"] }
ic-agent = { version = "0.37.1", features = [
    "experimental_sync_call",
    "hyper",
    "reqwest",
    "pem",
] }
ic-btc-interface = "0.2.2"
ic-btc-test-utils = "0.1.0"
ic-btc-validation = "0.1.0"
ic-cbor = "2.3.0"
ic-cdk = "0.13.5"
ic-cdk-macros = "0.9.0"
ic-cdk-timers = "0.7.0"
ic-certification = "2.3.0"
ic-http-certification = "2.3.0"
ic-response-verification = "2.6.0"
ic-stable-structures = "0.6.5"
ic-utils = { version = "0.37.0", features = ["raw"] }
ic_bls12_381 = { version = "=0.10.0", default-features = false, features = [
    "groups",
    "pairings",
    "alloc",
    "experimental",
    "zeroize",
] }
ic_principal = { version = "0.1.1", default-features = false }
idna = "1.0.2"
itertools = "0.12.0"
k256 = { version = "0.13.3", default-features = false, features = [
    "arithmetic",
    "ecdsa",
    "pem",
    "pkcs8",
    "precomputed-tables",
    "schnorr",
    "std",
] }
lazy_static = "1.4.0"
libc = "0.2.155"
libflate = "2.0.0"
libnss = "0.5.0"
local-ip-address = "0.5.6"
minicbor = { version = "0.19.1", features = ["alloc", "derive"] }
minicbor-derive = "0.13.0"
mockall = "0.13.0"
mockito = "1.2.0"
nftables = "0.4"
nix = "0.24.3"
num-bigint = "0.4.6"
num-traits = { version = "0.2.12", features = ["libm"] }
opentelemetry = { version = "0.23.0", features = ["metrics", "trace"] }
opentelemetry-otlp = { version = "0.16.0", features = ["grpc-tonic"] }
opentelemetry-prometheus = "0.16.0"
opentelemetry_sdk = { version = "0.23.0", features = ["trace", "rt-tokio"] }
p256 = { version = "0.13.2", default-features = false, features = [
    "arithmetic",
    "ecdsa",
    "pem",
    "pkcs8",
] }
pairing = "=0.23"
ping = "0.5.0"
pkcs8 = "0.10.2"
pprof = { version = "0.13.0", default-features = false, features = [
    "flamegraph",
    "prost-codec",
] }
pretty_assertions = "1.4.0"
prometheus = { version = "0.13.4", features = ["process"] }
prometheus-parse = { version = "0.2.4" }
proptest = "1.0.0"
prost = "^0.12"
prost-build = "^0.12"
protobuf = "2.28.0"
quinn = { version = "0.11.3", default-features = false, features = [
    "ring",
    "log",
    "runtime-tokio",
    "rustls",
] }
quinn-udp = "0.5.4"
rand = { version = "0.8.5", features = ["small_rng"] }
rand_chacha = "0.3.1"
rayon = "1.10.0"
rcgen = { version = "0.13.1", features = ["zeroize"] }
regex = "1.10.6"
reqwest = { version = "0.12.5", default-features = false, features = [
    "blocking",
    "http2",
    "json",
    "multipart",
    "rustls-tls",
    "rustls-tls-native-roots",
    "socks",
    "stream",
] }
rstest = "0.19.0"
rustls = { version = "0.23.12", default-features = false, features = [
    "ring",
    "std",
] }
serde = { version = "1.0.203", features = ["derive"] }
serde_bytes = "0.11.15"
serde_cbor = "0.11.2"
serde_json = { version = "^1.0.107" }
serde_with = "1.14.0"
serde_yaml = "0.9.33"
sha2 = "0.10.8"
sha3 = "0.10.8"
signature = "2.2.0"
simple_asn1 = "0.6.2"
slog = { version = "2.7.0", features = [
    "max_level_trace",
    "nested-values",
    "release_max_level_debug",
    "release_max_level_trace",
] }
slog-async = { version = "2.8.0", features = ["nested-values"] }
slog-scope = "4.4.0"
slog-term = "2.9.1"
socket2 = { version = "0.5.7", features = ["all"] }
strum = { version = "0.26.2", features = ["derive"] }
strum_macros = "0.26.2"
syn = { version = "1.0.109", features = ["fold", "full"] }
sync_wrapper = "1.0.1"
tar = "=0.4.39"
tempfile = "3.12.0"
thiserror = "1.0.62"
threadpool = "1.8.1"
time = { version = "0.3.36", features = ["formatting"] }
tokio = { version = "1.39.3", features = ["full"] }
tokio-metrics = "0.3.1"
tokio-rustls = { version = "0.26.0", default-features = false, features = [
    "ring",
] }
tokio-util = { version = "0.7.11", features = ["full"] }
tonic = "0.11.0"
tonic-build = "0.11.0"
tower = { version = "0.4.13", features = ["full"] }
tower-http = { version = "0.5.2", features = [
    "cors",
    "limit",
    "trace",
    "request-id",
    "util",
    "compression-full",
    "tracing",
] }
tracing = "0.1.40"
tracing-appender = "0.2.3"
tracing-opentelemetry = "0.24.0"
tracing-subscriber = { version = "0.3.18", features = [
    "env-filter",
    "fmt",
    "json",
] }
turmoil = "0.6.3"
url = { version = "2.5.2", features = ["serde"] }
uuid = { version = "1.10.0", features = ["v4", "serde"] }
walkdir = "=2.3.3"
walrus = "0.21.1"
wasm-encoder = { version =  "0.212.0", features = ["wasmparser"] }
wasmparser = "0.212.0"
wasmprinter = "0.212.0"
wast = "212.0.0"
wat = "=1.212.0"
x509-cert = { version = "0.2.5", features = ["builder", "hazmat"] }
x509-parser = { version = "0.16.0" }
zeroize = { version = "1.8.1", features = ["zeroize_derive"] }
zstd = "0.13.2"

[workspace.dependencies.ic-wasm]
default-features = false
features = ["exe"]
version = "^0.8.1"

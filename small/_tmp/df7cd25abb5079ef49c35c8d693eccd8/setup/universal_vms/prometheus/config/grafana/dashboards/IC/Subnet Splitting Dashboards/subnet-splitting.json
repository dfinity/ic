{
  "annotations": {
    "list": [
      {
        "$$hashKey": "object:4334",
        "builtIn": 1,
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "enable": true,
        "expr": "min_over_time(    timestamp(          count by(ic_subnet) (mr_registry_version{job=\"replica\",ic=\"$ic\",ic_subnet=~\"$ic_subnet\"} >= $registry_version)        >          count by(ic_subnet) (up{job=\"replica\",ic=\"$ic\",ic_subnet=~\"$ic_subnet\"}) * 2 / 3    )[$__range:10s] ) * 1000",
        "hide": false,
        "iconColor": "rgba(0, 211, 255, 1)",
        "limit": 100,
        "name": "Registry Version Changed",
        "showIn": 0,
        "step": "10s",
        "tagKeys": "instance",
        "titleFormat": "Registry Version Changed",
        "type": "dashboard",
        "useValueForTime": true
      }
    ]
  },
  "description": "Operational support for subnet splitting. Informs when it is safe to unhalt subnets; and complete the migration.",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 1,
  "links": [
    {
      "asDropdown": true,
      "icon": "external link",
      "includeVars": true,
      "keepTime": true,
      "tags": [
        "production"
      ],
      "targetBlank": true,
      "type": "dashboards"
    },
    {
      "asDropdown": true,
      "icon": "external link",
      "includeVars": true,
      "keepTime": true,
      "tags": [
        "Subnet Splitting"
      ],
      "targetBlank": true,
      "title": "Subnet Splitting",
      "tooltip": "",
      "type": "dashboards",
      "url": ""
    }
  ],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${datasource}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "stepAfter",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 0,
          "links": [],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 0
      },
      "id": 71,
      "interval": "10s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.2.5",
      "targets": [
        {
          "editorMode": "code",
          "exemplar": true,
          "expr": "label_replace(\n  floor(\n      quantile by(ic, ic_subnet) (\n        0.5,\n        mr_registry_version{job=\"replica\",ic=\"$ic\",ic_subnet=~\"$ic_subnet\"}\n      )\n    and\n        sum by(ic, ic_subnet) (up{job=\"replica\",ic=\"$ic\",ic_subnet=~\"$ic_subnet\"})\n      >\n        2 / 3 * count by(ic, ic_subnet) (up{job=\"replica\",ic=\"$ic\",ic_subnet=~\"$ic_subnet\"})\n  ),\n  \"ic_subnet\", \"$1\", \"ic_subnet\", \"([^-]+)-.*\"\n)",
          "interval": "",
          "legendFormat": "{{ic_subnet}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Subnet Registry Version (Origin Subnet)",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${datasource}"
      },
      "description": "",
      "gridPos": {
        "h": 16,
        "w": 12,
        "x": 12,
        "y": 0
      },
      "id": 85,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "## How to Use the Subnet Splitting Dashboard\n\nThe aim  of the Subnet Splitting dashboard is to inform whether it is safe to (1)\nunhalt the subnet resulting from a split (_subnet B_) and (2) remove a\n`canister_migrations` entry after the corresponding `routing_table` update. It does\nthis by comparing the \"stream end\" indices of all incoming and outgoing streams of the\nmigration source subnet immediately after the `routing_table` update; with the current\n\"stream begin\" indices of the same streams. For (2) it additionally checks whether the\noutgoing streams may contain reject responses to requests addressed to migrated\ncanisters (by comparing the timestamp when an incoming stream was consumed with the\nlatest timestamp when the none of the messages currently in the corresponding outgoing\nstream had yet been enqueued).\n\n### Mechanics\n1. Select the IC instance and subnet being split.\n2. Input the registry version corresponding to the `routing_table` update (a later\nregistry version is also safe to use).\n3. Zoom out the dashboard time range (_Last N hours_ -> _Last N days_ -> _Last N\nweeks_) from the top right until the _Registry Version Changed_ annotation (marking the\npoint in time when the subnet switched to registry version selected at step (2) above)\nbecomes visible. It is a light blue dotted vertical line on the _Subnet Registry\nVersions_ chart.\n\nAt this point, the reg/green stat panels below will show the number of streams\nthat may still contain problematic messages. There are 2 sections: one with checks for\nwhether it is safe to unhalt _subnet B_; and one for whether it is safe to remove the\n`canister_migrations` entry. If all the stat panels in a section show a value of `0`\nand have a green background, it is safe to proceed with the respective step.\n\nIf the value is non-zero and one or more stat panels have a red background, then there\nare still streams that may contain problematic messages and removing the\n`canister_migrations` entry may result in said messages getting dropped. To help\nidentify the streams, the various _Stream_ tables on the right list all streams, either\nwith _Stream end at migration_ and _Stream begin \"now\"_ values; or respectively\n_Incoming stream consumed at_ and _No messages in stream from before_ timestamps; as\nwell as the difference between the two. The paneels under the folded _Misc_ row shows\nthe same data, filtering for backlogged streams only.\n\n### Limitations\n\nDue to Grafana / PromQL limitations, the dashboard will only compute stream end /\nstream begin indices from the selected dashboard time range. So if e.g. the\n`routing table` update happened before the selected time range, the stream end indices\nwill be from the start of the time range, rather than from immediately after the\n`routing_table` update. Similarly, the stream end indices are from the end of the\nselected time range; so if the range does not end at _now_, the stream indices are not\nthe current ones (hence the \"now\" within quotes).\n\nIn order to make the dashboard load in reasonable time, an automatic resolution\n(resulting in around 30 data points across the time range) is used to compute the\nstream indices. This may mean that the \"now\" stream begin indices are actually rounded\nto a timestamp aligned with this resolution rather than the most recent available\nsample.\n\nFinally, zooming out to a longer time range will slow down the dashboard loading\ncorrespondingly. Consider zooming in to a fixed time range that covers the registry\nversion change.\n\nDo note that none of the above will cause false positives (i.e. claim that it is safe\nto remove the `canister_migrations` entry when it is in fact not safe). At worst, they\nmay cause false negatives (e.g. zooming in too close around the registry version change\nmay make it look like streams have not moved past their respective stream end indices\nat the time of the update, when in fact they may have done so since).",
        "mode": "markdown"
      },
      "pluginVersion": "9.2.5",
      "transparent": true,
      "type": "text"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${datasource}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "stepAfter",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 0,
          "links": [],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 8
      },
      "id": 89,
      "interval": "10s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.2.5",
      "targets": [
        {
          "editorMode": "code",
          "exemplar": true,
          "expr": "label_replace(\n  floor(\n      quantile by(ic, ic_subnet) (\n        0.5,\n        mr_registry_version{job=\"replica\",ic=\"$ic\",ic_subnet!~\"$ic_subnet\"}\n      )\n    and\n        sum by(ic, ic_subnet) (up{job=\"replica\",ic=\"$ic\",ic_subnet!~\"$ic_subnet\"})\n      >\n        2 / 3 * count by(ic, ic_subnet) (up{job=\"replica\",ic=\"$ic\",ic_subnet!~\"$ic_subnet\"})\n  ),\n  \"ic_subnet\", \"$1\", \"ic_subnet\", \"([^-]+)-.*\"\n)",
          "interval": "",
          "legendFormat": "{{ic_subnet}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Subnet Registry Version (Other Subnets)",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 16
      },
      "id": 91,
      "title": "Unhalt Subnet B",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${datasource}"
      },
      "description": "",
      "gridPos": {
        "h": 4,
        "w": 12,
        "x": 0,
        "y": 17
      },
      "id": 99,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "# Is it safe to unhalt _subnet B_?\n\nIn order to prevent out-of-order delivery\nof requests, it is only safe to unhalt\n_subnet B_ when all messages in _subnet A_\nstreams before the routing table update\nhave been delivered.\n\nThis ensures that any request sent by\na canister before being migrated to\n_subnet B_ has been delivered before\n_subnet B_ can send any further requests\non behalf of the canister.",
        "mode": "markdown"
      },
      "pluginVersion": "9.2.5",
      "transparent": true,
      "type": "text"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${datasource}"
      },
      "description": "Outgoing streams from subnet `${ic_subnet}`.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "filterable": false,
            "inspect": false
          },
          "links": [],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 12,
        "w": 12,
        "x": 12,
        "y": 17
      },
      "id": 97,
      "interval": "10s",
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 0,
        "showHeader": true,
        "sortBy": [
          {
            "desc": false,
            "displayName": "Difference"
          }
        ]
      },
      "pluginVersion": "9.2.5",
      "targets": [
        {
          "editorMode": "code",
          "exemplar": true,
          "expr": "# Stream end at migration\nmin_over_time(\n  (\n      ceil(\n        quantile by(ic_subnet, remote) (\n          0.5,\n              mr_stream_begin{job=\"replica\",ic=\"$ic\",ic_subnet=~\"$ic_subnet\"}\n            +\n              mr_stream_messages{job=\"replica\",ic=\"$ic\",ic_subnet=~\"$ic_subnet\"}\n          and ignoring(remote)\n            mr_registry_version{job=\"replica\",ic=\"$ic\",ic_subnet=~\"$ic_subnet\"} offset $resolution >= $registry_version\n        )\n      )\n    and on(ic_subnet)\n        count by(ic_subnet) (mr_registry_version{job=\"replica\",ic=\"$ic\",ic_subnet=~\"$ic_subnet\"} offset $resolution >= $registry_version)\n      >\n        count by(ic_subnet) (up{job=\"replica\",ic=\"$ic\",ic_subnet=~\"$ic_subnet\"}) * 2 / 3\n  )[$__range:$resolution]\n)",
          "format": "table",
          "instant": true,
          "interval": "",
          "legendFormat": "",
          "refId": "A"
        },
        {
          "editorMode": "code",
          "exemplar": true,
          "expr": "# Stream start \"now\"\nmax_over_time(\n  (\n      floor(\n        quantile by(ic_subnet, remote) (\n          0.5,\n          mr_stream_begin{job=\"replica\",ic=\"$ic\",ic_subnet=~\"$ic_subnet\"}\n        )\n      )\n    and on(ic_subnet)\n        sum by(ic_subnet) (up{job=\"replica\",ic=\"$ic\",ic_subnet=~\"$ic_subnet\"})\n      >\n        count by(ic_subnet) (up{job=\"replica\",ic=\"$ic\",ic_subnet=~\"$ic_subnet\"}) * 2 / 3\n  )[$__range:$resolution]\n)",
          "format": "table",
          "hide": false,
          "instant": true,
          "interval": "",
          "legendFormat": "",
          "refId": "B"
        }
      ],
      "title": "Outgoing Streams",
      "transformations": [
        {
          "id": "merge",
          "options": {}
        },
        {
          "id": "calculateField",
          "options": {
            "mode": "reduceRow",
            "reduce": {
              "include": [
                "Value #A",
                "Value #B"
              ],
              "reducer": "diff"
            }
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "Time": true,
              "Value #C": true,
              "ic_subnet": true,
              "remote": false
            },
            "indexByName": {},
            "renameByName": {
              "Difference": "",
              "Value #A": "Stream end at migration",
              "Value #B": "Stream start \"now\"",
              "Value #C": "Streams in existence at range start",
              "ic_subnet": "From subnet",
              "remote": "To subnet"
            }
          }
        }
      ],
      "transparent": true,
      "type": "table"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Dashboard --"
      },
      "description": "Number of streams that `@ end()` still contain messages that were already in the stream when subnet `${ic_subnet}` started using registry version __${registry_version}__ (or `@ start()`, if the switch happened before).",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 1
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 4,
        "x": 0,
        "y": 21
      },
      "id": 96,
      "interval": "10s",
      "options": {
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "9.2.5",
      "targets": [
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Dashboard --"
          },
          "panelId": 97,
          "refId": "A",
          "withTransforms": false
        }
      ],
      "title": "Backlogged Outgoing Streams",
      "transformations": [
        {
          "id": "merge",
          "options": {}
        },
        {
          "id": "calculateField",
          "options": {
            "mode": "reduceRow",
            "reduce": {
              "include": [
                "Value #A",
                "Value #B"
              ],
              "reducer": "diff"
            }
          }
        },
        {
          "id": "filterByValue",
          "options": {
            "filters": [
              {
                "config": {
                  "id": "lower",
                  "options": {
                    "value": 0
                  }
                },
                "fieldName": "Difference"
              }
            ],
            "match": "any",
            "type": "include"
          }
        },
        {
          "id": "reduce",
          "options": {
            "reducers": [
              "count"
            ]
          }
        }
      ],
      "transparent": true,
      "type": "stat"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 29
      },
      "id": 95,
      "panels": [],
      "title": "Remove `canister_migrations` Entry",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${datasource}"
      },
      "description": "",
      "gridPos": {
        "h": 6,
        "w": 12,
        "x": 0,
        "y": 30
      },
      "id": 100,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "# Is it safe to remove the _canister_migrations_ entry?\n\nIn order to prevent messages from being\ndropped because they appear to come from\na subnet other than the one hosting the\noriginating canister, we must ensure that\nthe `canister_migrations` entry stays in\nplace at least until:\n\n 1. All messages already in streams at the\n time of the routing table update (on the\n origin subnet) have been delivered (and\n GC-ed).\n\n 2. All reject responses caused by\n `${ic_subnet}` no longer hosting migrated\n canisters have been delivered (i.e. all\n messages in incoming streams have been\n delivered; after which all messages in\n outgoing stream at that point have also\n been delivered).\n\n (1) applies to incoming streams to\n `${ic_subnet}`; (2) applies to outgoing\n streams from `${ic_subnet}` (and also\n ensures that (1) holds for said strems).",
        "mode": "markdown"
      },
      "pluginVersion": "9.2.5",
      "transparent": true,
      "type": "text"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${datasource}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "filterable": false,
            "inspect": false
          },
          "links": [],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 12,
        "w": 12,
        "x": 12,
        "y": 30
      },
      "id": 78,
      "interval": "10s",
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 0,
        "showHeader": true,
        "sortBy": [
          {
            "desc": false,
            "displayName": "Difference"
          }
        ]
      },
      "pluginVersion": "9.2.5",
      "targets": [
        {
          "editorMode": "code",
          "exemplar": true,
          "expr": "# Stream end at migration\nmin_over_time(\n  (\n      quantile by(ic_subnet, remote) (\n        0.5,\n            mr_stream_begin{job=\"replica\",ic=\"$ic\",ic_subnet!~\"$ic_subnet\",remote=~\"$ic_subnet\"}\n          +\n            mr_stream_messages{job=\"replica\",ic=\"$ic\",ic_subnet!~\"$ic_subnet\",remote=~\"$ic_subnet\"}\n        and ignoring(remote)\n          mr_registry_version{job=\"replica\",ic=\"$ic\",ic_subnet!~\"$ic_subnet\"} offset $resolution >= $registry_version\n      )\n    and on(ic_subnet)\n        count by(ic_subnet) (mr_registry_version{job=\"replica\",ic=\"$ic\",ic_subnet!~\"$ic_subnet\"} offset $resolution >= $registry_version)\n      >\n        count by(ic_subnet) (up{job=\"replica\",ic=\"$ic\",ic_subnet!~\"$ic_subnet\"}) * 2 / 3\n  )[$__range:$resolution]\n)",
          "format": "table",
          "instant": true,
          "interval": "",
          "legendFormat": "",
          "refId": "A"
        },
        {
          "editorMode": "code",
          "exemplar": true,
          "expr": "# Stream start \"now\"\nmax_over_time(\n  (\n      quantile by(ic_subnet, remote) (\n        0.5,\n        mr_stream_begin{job=\"replica\",ic=\"$ic\",ic_subnet!~\"$ic_subnet\",remote=~\"$ic_subnet\"}\n      )\n    and on(ic_subnet)\n        sum by(ic_subnet) (up{job=\"replica\",ic=\"$ic\",ic_subnet!~\"$ic_subnet\"})\n      >\n        count by(ic_subnet) (up{job=\"replica\",ic=\"$ic\",ic_subnet!~\"$ic_subnet\"}) * 2 / 3\n  )[$__range:$resolution]\n)",
          "format": "table",
          "hide": false,
          "instant": true,
          "interval": "",
          "legendFormat": "",
          "refId": "B"
        }
      ],
      "title": "Incoming Streams",
      "transformations": [
        {
          "id": "merge",
          "options": {}
        },
        {
          "id": "calculateField",
          "options": {
            "mode": "reduceRow",
            "reduce": {
              "include": [
                "Value #A",
                "Value #B"
              ],
              "reducer": "diff"
            }
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "Time": true,
              "Value #C": true,
              "ic_subnet": false,
              "remote": true
            },
            "indexByName": {},
            "renameByName": {
              "Difference": "",
              "Value #A": "Stream end at migration",
              "Value #B": "Stream start \"now\"",
              "Value #C": "Streams in existence at range start",
              "ic_subnet": "From subnet",
              "remote": "To subnet"
            }
          }
        }
      ],
      "transparent": true,
      "type": "table"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Dashboard --"
      },
      "description": "Number of streams that `@ end()` still contain messages that were already in the stream when the subnet started using registry version __${registry_version}__ (or `@ start()`, if the switch happened before).",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 1
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 4,
        "x": 0,
        "y": 36
      },
      "id": 83,
      "interval": "10s",
      "options": {
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "9.2.5",
      "targets": [
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Dashboard --"
          },
          "panelId": 78,
          "refId": "A"
        }
      ],
      "title": "Backlogged Incoming Streams",
      "transformations": [
        {
          "id": "merge",
          "options": {}
        },
        {
          "id": "calculateField",
          "options": {
            "mode": "reduceRow",
            "reduce": {
              "include": [
                "Value #A",
                "Value #B"
              ],
              "reducer": "diff"
            }
          }
        },
        {
          "id": "filterByValue",
          "options": {
            "filters": [
              {
                "config": {
                  "id": "lower",
                  "options": {
                    "value": 0
                  }
                },
                "fieldName": "Difference"
              }
            ],
            "match": "any",
            "type": "include"
          }
        },
        {
          "id": "reduce",
          "options": {
            "reducers": [
              "count"
            ]
          }
        }
      ],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Dashboard --"
      },
      "description": "Number of incoming streams originating from subnets not yet using registry version __${registry_version}__ (computed as _Incoming Streams_ rows without a _Stream end at migration_ value).",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 1
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 4,
        "x": 4,
        "y": 36
      },
      "id": 86,
      "interval": "10s",
      "options": {
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "9.2.5",
      "targets": [
        {
          "panelId": 78,
          "refId": "A"
        }
      ],
      "title": "Missing Incoming Streams",
      "transformations": [
        {
          "id": "merge",
          "options": {}
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "Time": true,
              "Value #B": true,
              "ic_subnet": true,
              "remote": true
            },
            "indexByName": {},
            "renameByName": {}
          }
        },
        {
          "id": "filterByValue",
          "options": {
            "filters": [
              {
                "config": {
                  "id": "greaterOrEqual",
                  "options": {
                    "value": 0
                  }
                },
                "fieldName": "Value #A"
              }
            ],
            "match": "any",
            "type": "exclude"
          }
        },
        {
          "id": "reduce",
          "options": {
            "reducers": [
              "count"
            ]
          }
        }
      ],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Dashboard --"
      },
      "description": "Number of outgoing streams that `@ end()` still contain messages that may be reject responses to requests already in the reverse stream when the remote subnet started using registry version __${registry_version}__ (or `@ start()`, if the switch happened before).",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 1
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 4,
        "x": 8,
        "y": 36
      },
      "id": 88,
      "interval": "10s",
      "options": {
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "9.2.5",
      "targets": [
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Dashboard --"
          },
          "panelId": 87,
          "refId": "A"
        }
      ],
      "title": "Backlogged Outgoing Streams (Including Reject Responses)",
      "transformations": [
        {
          "id": "merge",
          "options": {}
        },
        {
          "id": "calculateField",
          "options": {
            "mode": "reduceRow",
            "reduce": {
              "include": [
                "Value #A",
                "Value #B"
              ],
              "reducer": "diff"
            }
          }
        },
        {
          "id": "filterByValue",
          "options": {
            "filters": [
              {
                "config": {
                  "id": "lower",
                  "options": {
                    "value": 0
                  }
                },
                "fieldName": "Difference"
              },
              {
                "config": {
                  "id": "isNull",
                  "options": {}
                },
                "fieldName": "Difference"
              }
            ],
            "match": "any",
            "type": "include"
          }
        },
        {
          "id": "reduce",
          "options": {
            "reducers": [
              "count"
            ]
          }
        }
      ],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${datasource}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "filterable": false,
            "inspect": false
          },
          "links": [],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 12,
        "w": 12,
        "x": 12,
        "y": 42
      },
      "id": 87,
      "interval": "10s",
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 0,
        "showHeader": true,
        "sortBy": [
          {
            "desc": false,
            "displayName": "Difference (s)"
          }
        ]
      },
      "pluginVersion": "9.2.5",
      "targets": [
        {
          "editorMode": "code",
          "exemplar": true,
          "expr": "# Time at which messages in incoming streams before routing table update were consumed (w/ labels swapped).\nlabel_replace(\nlabel_replace(\nlabel_replace(\nlabel_replace(\n  # Minimum timestamp at which [incoming stream begin] advanced past [stream end at routing table update].\n  min_over_time(\n    timestamp(\n        # Incoming stream begin.\n        (\n            quantile by(ic_subnet, remote) (\n              0.5,\n              mr_stream_begin{job=\"replica\",ic=\"$ic\",remote=~\"$ic_subnet\"}\n            )\n          and on(ic_subnet)\n              sum by(ic_subnet) (up{job=\"replica\",ic=\"$ic\"})\n            >\n              count by(ic_subnet) (up{job=\"replica\",ic=\"$ic\"}) * 2 / 3\n        )\n      >=\n        # Minimum [incoming stream end] after routing table update (min over full range, computed `@ end()`).\n        min_over_time(\n          (\n              quantile by(ic_subnet, remote) (\n                0.5,\n                    mr_stream_begin{job=\"replica\",ic=\"$ic\",remote=~\"$ic_subnet\"}\n                  +\n                    mr_stream_messages{job=\"replica\",ic=\"$ic\",remote=~\"$ic_subnet\"}\n                and ignoring(remote)\n                  mr_registry_version{job=\"replica\",ic=\"$ic\"} offset $resolution >= $registry_version\n              )\n            and on(ic_subnet)\n                count by(ic_subnet) (mr_registry_version{job=\"replica\",ic=\"$ic\"} offset $resolution >= $registry_version)\n              >\n                count by(ic_subnet) (up{job=\"replica\",ic=\"$ic\"}) * 2 / 3\n          )[$__range:$resolution] @ end()\n        )\n    )[$__range:$resolution]\n  ),\n  \"tmp\", \"$0\", \"ic_subnet\", \".*\"),\n  \"ic_subnet\", \"$0\", \"remote\", \".*\"),\n  \"remote\", \"$0\", \"tmp\", \".*\"),\n  \"tmp\", \"\", \"ic_subnet\", \".*\"\n)",
          "format": "table",
          "hide": false,
          "instant": true,
          "interval": "",
          "legendFormat": "",
          "refId": "A"
        },
        {
          "editorMode": "code",
          "exemplar": true,
          "expr": "# Last time at which outgoing [stream end] was before [stream begin `@ end()`].\nmax_over_time(\n  timestamp(\n      # Stream end.\n      (\n          quantile by(ic_subnet, remote) (\n            0.5,\n                mr_stream_begin{job=\"replica\",ic=\"$ic\",ic_subnet=~\"$ic_subnet\"}\n              +\n                mr_stream_messages{job=\"replica\",ic=\"$ic\",ic_subnet=~\"$ic_subnet\"}\n            and ignoring(remote)\n              mr_registry_version{job=\"replica\",ic=\"$ic\",ic_subnet=~\"$ic_subnet\"} offset $resolution >= $registry_version\n          )\n        and on(ic_subnet)\n            count by(ic_subnet) (mr_registry_version{job=\"replica\",ic=\"$ic\",ic_subnet=~\"$ic_subnet\"} offset $resolution >= $registry_version)\n          >\n            count by(ic_subnet) (up{job=\"replica\",ic=\"$ic\",ic_subnet=~\"$ic_subnet\"}) * 2 / 3\n      )\n    <=\n      # Stream begin `@ end()`.\n      max_over_time(\n        (\n            quantile by(ic_subnet, remote) (\n              0.5,\n              mr_stream_begin{job=\"replica\",ic=\"$ic\",ic_subnet=~\"$ic_subnet\"}\n            )\n          and on(ic_subnet)\n              sum by(ic_subnet) (up{job=\"replica\",ic=\"$ic\",ic_subnet=~\"$ic_subnet\"})\n            >\n              count by(ic_subnet) (up{job=\"replica\",ic=\"$ic\",ic_subnet=~\"$ic_subnet\"}) * 2 / 3\n        )[$__range:$resolution] @ end()\n      )\n  )[$__range:$resolution]\n)",
          "format": "table",
          "hide": false,
          "instant": true,
          "interval": "",
          "legendFormat": "",
          "refId": "B"
        },
        {
          "editorMode": "code",
          "exemplar": false,
          "expr": "# All outgoing streams reported during `$__range`.\nmin_over_time(\n  (\n      count by(ic_subnet, remote) (\n        mr_stream_begin{job=\"replica\",ic=\"$ic\",ic_subnet=~\"$ic_subnet\"}\n      )\n    and on(ic_subnet)\n        sum by(ic_subnet) (up{job=\"replica\",ic=\"$ic\",ic_subnet=~\"$ic_subnet\"})\n      >\n        count by(ic_subnet) (up{job=\"replica\",ic=\"$ic\",ic_subnet=~\"$ic_subnet\"}) * 2 / 3\n  )[$__range:$resolution]\n)",
          "format": "table",
          "hide": false,
          "instant": true,
          "interval": "",
          "legendFormat": "",
          "range": false,
          "refId": "C"
        }
      ],
      "title": "Outgoing Streams (Including Reject Responses)",
      "transformations": [
        {
          "id": "merge",
          "options": {}
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "Difference (s)",
            "mode": "reduceRow",
            "reduce": {
              "include": [
                "Value #A",
                "Value #B"
              ],
              "reducer": "diff"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "Value #A (ms)",
            "binary": {
              "left": "Value #A",
              "operator": "*",
              "reducer": "sum",
              "right": "1000"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            },
            "replaceFields": false
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "Value #B (ms)",
            "binary": {
              "left": "Value #B",
              "operator": "*",
              "reducer": "sum",
              "right": "1000"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "convertFieldType",
          "options": {
            "conversions": [
              {
                "destinationType": "time",
                "targetField": "Value #A (ms)"
              },
              {
                "destinationType": "time",
                "targetField": "Value #B (ms)"
              }
            ],
            "fields": {}
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "Time": true,
              "Value #A": true,
              "Value #B": true,
              "Value #C": true,
              "Value #D": false,
              "ic_subnet": true
            },
            "indexByName": {
              "Difference (s)": 8,
              "Time": 0,
              "Value #A": 3,
              "Value #A (ms)": 5,
              "Value #B": 4,
              "Value #B (ms)": 6,
              "Value #C": 7,
              "ic_subnet": 1,
              "remote": 2
            },
            "renameByName": {
              "Difference": "",
              "Value #A": "Incoming stream consumed at",
              "Value #A (ms)": "Incoming stream consumed at",
              "Value #B": "No messages in stream from before",
              "Value #B (ms)": "No messages in stream from before",
              "Value #B * 1000": "No messages in stream from before",
              "Value #C": "Known streams",
              "Value #D": "",
              "Value #E": "",
              "ic_subnet": "From subnet",
              "remote": "To subnet"
            }
          }
        }
      ],
      "transparent": true,
      "type": "table"
    },
    {
      "collapsed": true,
      "datasource": {
        "type": "prometheus",
        "uid": "${datasource}"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 54
      },
      "id": 80,
      "panels": [
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": {
            "type": "prometheus",
            "uid": "${datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "links": []
            },
            "overrides": []
          },
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 55
          },
          "hiddenSeries": false,
          "id": 76,
          "interval": "10s",
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "nullPointMode": "null",
          "options": {
            "alertThreshold": false
          },
          "percentage": false,
          "pluginVersion": "9.2.5",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "editorMode": "code",
              "exemplar": true,
              "expr": "label_replace(\n  min_over_time(\n    (\n        quantile by(ic_subnet, remote) (\n          0.5,\n              mr_stream_begin{job=\"replica\",ic=\"$ic\",ic_subnet=~\"$ic_subnet\"}\n            +\n              mr_stream_messages{job=\"replica\",ic=\"$ic\",ic_subnet=~\"$ic_subnet\"}\n          and ignoring(remote)\n            mr_registry_version{job=\"replica\",ic=\"$ic\",ic_subnet=~\"$ic_subnet\"} offset 1m >= $registry_version\n        )\n      and on(ic_subnet)\n          count by(ic_subnet) (mr_registry_version{job=\"replica\",ic=\"$ic\",ic_subnet=~\"$ic_subnet\"} offset 1m >= $registry_version)\n        >\n          count by(ic_subnet) (up{job=\"replica\",ic=\"$ic\",ic_subnet=~\"$ic_subnet\"}) * 2 / 3\n    )[$__range:10s]\n  ),\n  \"remote\", \"$1\", \"remote\", \"(.{5})-.*\"\n)",
              "interval": "",
              "legendFormat": "{{remote}}",
              "range": true,
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeRegions": [],
          "title": "Outgoing Stream End Indices (w/ 2f+1 filter)",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "mode": "time",
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "$$hashKey": "object:87",
              "format": "none",
              "logBase": 1,
              "show": true
            },
            {
              "$$hashKey": "object:88",
              "format": "short",
              "logBase": 1,
              "show": true
            }
          ],
          "yaxis": {
            "align": false
          }
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Dashboard --"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "displayMode": "auto",
                "filterable": false,
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 55
          },
          "id": 82,
          "interval": "10s",
          "options": {
            "footer": {
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "frameIndex": 0,
            "showHeader": true,
            "sortBy": [
              {
                "desc": false,
                "displayName": "Difference"
              }
            ]
          },
          "pluginVersion": "9.2.5",
          "targets": [
            {
              "datasource": {
                "type": "datasource",
                "uid": "-- Dashboard --"
              },
              "panelId": 78,
              "refId": "A"
            }
          ],
          "title": "Incoming Streams with Messages from Before Migration",
          "transformations": [
            {
              "id": "merge",
              "options": {}
            },
            {
              "id": "calculateField",
              "options": {
                "mode": "reduceRow",
                "reduce": {
                  "include": [
                    "Value #A",
                    "Value #B"
                  ],
                  "reducer": "diff"
                }
              }
            },
            {
              "id": "organize",
              "options": {
                "excludeByName": {
                  "Time": true,
                  "remote": true
                },
                "indexByName": {},
                "renameByName": {
                  "Difference": "",
                  "Value #A": "Stream end at migration",
                  "Value #B": "Stream start \"now\"",
                  "ic_subnet": "From subnet",
                  "remote": "To subnet"
                }
              }
            },
            {
              "id": "filterByValue",
              "options": {
                "filters": [
                  {
                    "config": {
                      "id": "lower",
                      "options": {
                        "value": 0
                      }
                    },
                    "fieldName": "Difference"
                  }
                ],
                "match": "any",
                "type": "include"
              }
            }
          ],
          "transparent": true,
          "type": "table"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Dashboard --"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "displayMode": "auto",
                "filterable": false,
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 63
          },
          "id": 101,
          "interval": "10s",
          "options": {
            "footer": {
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "frameIndex": 0,
            "showHeader": true,
            "sortBy": [
              {
                "desc": false,
                "displayName": "Difference"
              }
            ]
          },
          "pluginVersion": "9.2.5",
          "targets": [
            {
              "datasource": {
                "type": "datasource",
                "uid": "-- Dashboard --"
              },
              "panelId": 87,
              "refId": "A"
            }
          ],
          "title": "Outgoing Streams with Potential Reject Responses",
          "transformations": [
            {
              "id": "merge",
              "options": {}
            },
            {
              "id": "calculateField",
              "options": {
                "mode": "reduceRow",
                "reduce": {
                  "include": [
                    "Value #A",
                    "Value #B"
                  ],
                  "reducer": "diff"
                }
              }
            },
            {
              "id": "organize",
              "options": {
                "excludeByName": {
                  "Time": true,
                  "Value #C": true,
                  "ic_subnet": true,
                  "remote": false
                },
                "indexByName": {},
                "renameByName": {
                  "Difference": "",
                  "Value #A": "Stream end at migration",
                  "Value #B": "Stream start \"now\"",
                  "ic_subnet": "From subnet",
                  "remote": "To subnet"
                }
              }
            },
            {
              "id": "filterByValue",
              "options": {
                "filters": [
                  {
                    "config": {
                      "id": "lower",
                      "options": {
                        "value": 0
                      }
                    },
                    "fieldName": "Difference"
                  },
                  {
                    "config": {
                      "id": "isNull",
                      "options": {}
                    },
                    "fieldName": "Difference"
                  }
                ],
                "match": "any",
                "type": "include"
              }
            }
          ],
          "transparent": true,
          "type": "table"
        }
      ],
      "title": "Misc",
      "type": "row"
    }
  ],
  "refresh": false,
  "schemaVersion": 37,
  "style": "dark",
  "tags": [
    "Subnet Splitting"
  ],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "IC Metrics (cluster local)",
          "value": "IC Metrics (cluster local)"
        },
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "datasource",
        "options": [],
        "query": "prometheus",
        "queryValue": "",
        "refresh": 1,
        "regex": "/IC.*/",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "current": {
          "selected": false,
          "text": "mercury",
          "value": "mercury"
        },
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "definition": "label_values(ic)",
        "hide": 0,
        "includeAll": false,
        "label": "IC",
        "multi": false,
        "name": "ic",
        "options": [],
        "query": {
          "query": "label_values(ic)",
          "refId": "prometheus-ic-Variable-Query"
        },
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": ".+",
        "current": {
          "selected": false,
          "text": "tdb26-jop6k-aogll-7ltgs-eruif-6kk7m-qpktf-gdiqx-mxtrf-vb5e6-eqe",
          "value": "tdb26-jop6k-aogll-7ltgs-eruif-6kk7m-qpktf-gdiqx-mxtrf-vb5e6-eqe"
        },
        "datasource": {
          "type": "prometheus",
          "uid": "${datasource}"
        },
        "definition": "label_values(up{ic=\"$ic\"},ic_subnet)",
        "description": "Subnet being split (origin).",
        "hide": 0,
        "includeAll": false,
        "label": "Subnet",
        "multi": false,
        "name": "ic_subnet",
        "options": [],
        "query": {
          "query": "label_values(up{ic=\"$ic\"},ic_subnet)",
          "refId": "prometheus-ic_subnet-Variable-Query"
        },
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {
          "selected": false,
          "text": "35885",
          "value": "35885"
        },
        "description": "Registry version when routing table was updated.",
        "hide": 0,
        "label": "Registry version",
        "name": "registry_version",
        "options": [
          {
            "selected": true,
            "text": "30539",
            "value": "30539"
          }
        ],
        "query": "35885",
        "skipUrlSync": false,
        "type": "textbox"
      },
      {
        "auto": true,
        "auto_count": 30,
        "auto_min": "1m",
        "current": {
          "selected": false,
          "text": "auto",
          "value": "$__auto_interval_resolution"
        },
        "hide": 0,
        "label": "Resolution",
        "name": "resolution",
        "options": [
          {
            "selected": true,
            "text": "auto",
            "value": "$__auto_interval_resolution"
          },
          {
            "selected": false,
            "text": "1m",
            "value": "1m"
          },
          {
            "selected": false,
            "text": "10m",
            "value": "10m"
          },
          {
            "selected": false,
            "text": "30m",
            "value": "30m"
          },
          {
            "selected": false,
            "text": "1h",
            "value": "1h"
          },
          {
            "selected": false,
            "text": "6h",
            "value": "6h"
          },
          {
            "selected": false,
            "text": "12h",
            "value": "12h"
          },
          {
            "selected": false,
            "text": "1d",
            "value": "1d"
          }
        ],
        "query": "1m,10m,30m,1h,6h,12h,1d",
        "queryValue": "",
        "refresh": 2,
        "skipUrlSync": false,
        "type": "interval"
      }
    ]
  },
  "time": {
    "from": "now-30m",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ]
  },
  "timezone": "utc",
  "title": "Subnet Splitting",
  "uid": "subnet-splitting",
  "weekStart": ""
}

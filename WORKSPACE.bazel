workspace(
    name = "ic",
)

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("//bazel:mainnet-icos-images.bzl", "get_mainnet_guestos_images", "get_mainnet_setupos_images")

http_archive(
    name = "rules_rust",
    integrity = "sha256-5Kgp+5cZcrJoTOUq9CF6KJdNsB2zNzvYM9UnYMoY5lc=",
    urls = ["https://github.com/bazelbuild/rules_rust/releases/download/0.66.0/rules_rust-0.66.0.tar.gz"],
)

load("@rules_rust//crate_universe:repositories.bzl", "crate_universe_dependencies")
load("@rules_rust//rust:repositories.bzl", "rules_rust_dependencies", "rust_register_toolchains")
load("@rules_rust//tools/rust_analyzer:deps.bzl", "rust_analyzer_dependencies")

rules_rust_dependencies()

rust_analyzer_dependencies()

crate_universe_dependencies()

rust_register_toolchains(
    edition = "2024",
    strip_level = {"x86_64-unknown-linux-gnu": {
        "dbg": "none",
        "fastbuild": "none",
        "opt": "none",
    }},
    versions = ["1.90.0"],
)

load("//bazel:external_crates.bzl", "external_crates_repository")

external_crates_repository(
    name = "crate_index",
    cargo_lockfile = "//:Cargo.Bazel.toml.lock",
    lockfile = "//:Cargo.Bazel.json.lock",
)

load("@crate_index//:defs.bzl", "crate_repositories")

crate_repositories()

# Motoko support

http_archive(
    name = "rules_motoko",
    sha256 = "f7cb0a906c8efe9d2ad8d27f0f6ac11f6409a771d74874f7e47d45959063dfe3",
    strip_prefix = "rules_motoko-0.2.1",
    urls = ["https://github.com/dfinity/rules_motoko/archive/refs/tags/v0.2.1.tar.gz"],
)

load("@rules_motoko//motoko:repositories.bzl", "rules_motoko_dependencies")

rules_motoko_dependencies()

# ormolu binary for haskell linting
load("//pre-commit:ormolu.bzl", "ormolu")

ormolu(name = "ormolu")

# Mainnet ICOS image support
get_mainnet_setupos_images()

get_mainnet_guestos_images()

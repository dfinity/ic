name: 'Bazel-Test-All'
description: 'Run Bazel Test'
inputs:
  BAZEL_COMMAND:
    required: true
    default: 'test'
  BAZEL_TARGETS:
    required: false
    default: '//...'
  BAZEL_CI_CONFIG:
    required: false
    default: '--config=ci'
  BAZEL_EXTRA_ARGS:
    required: false
    default: ''
  BAZEL_STARTUP_ARGS:
    required: false
    default: '--output_base=/var/tmp/bazel-output/'
  BUILDEVENT_APIKEY:
    required: true
  SSH_PRIVATE_KEY:
    required: false

runs:
  using: "composite"
  steps:
      - name: Run Bazel Test All
        id: bazel-test-all
        shell: bash
        run: |
          set +e # manual error handling to ensure we can run some post-build commands

          if [ -n "$SSH_PRIVATE_KEY" ]; then
            # The following adds the SSH private key to the ssh-agent such that CI can SSH into the backup pod.
            test -z "${SSH_AUTH_SOCK:-}" && { eval "$(ssh-agent -s)"; ssh-add - <<< "${SSH_PRIVATE_KEY}"; }
            rm -rf ~/.ssh
            mkdir -p ~/.ssh
            chmod 0700 ~/.ssh
            echo -e "Host *\nUser github-runner\n" > ~/.ssh/config
          fi

          ${GITHUB_WORKSPACE}/ci/bazel-scripts/main.sh
          BAZEL_EXIT_CODE="$?"

          if [ -n "$BUILDEVENT_APIKEY" ] && [ -f ./bazel-bep.pb ]; then
              # avoid output unless an error occurs during bes export. This ensures
              # only the (more relevant) output from the main bazel command is shown.
              exportout=$(mktemp)
              if ! bazel run //bazel/exporter:exporter --build_event_binary_file= -- -f "$(pwd)/bazel-bep.pb" 2> "$exportout" >&2; then
                echo "bes export failed:"
                cat "$exportout"
              fi
              rm "$exportout"
          fi

          # output node name to gihub step summary
          [ -n "${NODE_NAME:-}" ] && echo "Run on node: $NODE_NAME" >>$GITHUB_STEP_SUMMARY

          exit "$BAZEL_EXIT_CODE"
        env:
          BAZEL_COMMAND: ${{ inputs.BAZEL_COMMAND }}
          BAZEL_TARGETS: ${{ inputs.BAZEL_TARGETS }}
          BAZEL_CI_CONFIG: ${{ inputs.BAZEL_CI_CONFIG }}
          BAZEL_EXTRA_ARGS: ${{ inputs.BAZEL_EXTRA_ARGS }}
          BAZEL_STARTUP_ARGS: ${{ inputs.BAZEL_STARTUP_ARGS }}
          BRANCH_HEAD_SHA: ${{ github.event.pull_request.head.sha }}
          BUILDEVENT_APIKEY: ${{ inputs.BUILDEVENT_APIKEY }}
          CI_EVENT_NAME: ${{ github.event_name }}
          CI_JOB_URL: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          CI_PULL_REQUEST_TARGET_BRANCH_NAME: ${{ github.event.pull_request.base.ref }}
          MERGE_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          SSH_PRIVATE_KEY: ${{ inputs.SSH_PRIVATE_KEY }}

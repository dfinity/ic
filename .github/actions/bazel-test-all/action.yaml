name: 'Bazel-Test-All'
description: 'Run Bazel Test'
inputs:
  BAZEL_COMMAND:
    required: true
    default: 'test'
  BAZEL_TARGETS:
    required: false
    default: '//...'
  BAZEL_CI_CONFIG:
    required: false
    default: '--config=ci'
  BAZEL_EXTRA_ARGS:
    required: false
    default: '--keep_going'
  BAZEL_EXTRA_ARGS_RULES:
    required: false
    default: ''
  BAZEL_STARTUP_ARGS:
    required: false
    default: ''
  RUN_ON_DIFF_ONLY:
    required: false
    default: "false"
  HONEYCOMB_API_TOKEN:
    required: false
  SSH_PRIVATE_KEY:
    required: false

runs:
  using: "composite"
  steps:
      - name: Run Bazel Test All
        id: bazel-test-all
        shell: bash
        run: |
          set -x +e

          # temporarily set permissions again until we can figure out issue
          if [ -e /cache ]; then
            sudo chown -RL 1001:1001 /cache
          fi

          if [ -n "$SSH_PRIVATE_KEY" ]; then
            # The following adds the SSH private key to the ssh-agent such that CI can SSH into the backup pod.
            test -z "${SSH_AUTH_SOCK:-}" && { eval "$(ssh-agent -s)"; ssh-add - <<< "${SSH_PRIVATE_KEY}"; }
            rm -rf ~/.ssh
            mkdir -p ~/.ssh
            chmod 0700 ~/.ssh
            echo -e "Host *\nUser github-runner\n" > ~/.ssh/config
          fi

          ${GITHUB_WORKSPACE}/gitlab-ci/src/bazel-ci/main.sh
          BAZEL_EXIT_CODE="$?"

          if [ -n "$HONEYCOMB_API_TOKEN" ] && [ -f ./bazel-bep.pb ]; then
              bazel run //bazel/exporter:exporter --build_event_binary_file= -- -f "$(pwd)/bazel-bep.pb"
          fi

          exit "$BAZEL_EXIT_CODE"
        env:
          BAZEL_COMMAND: ${{ inputs.BAZEL_COMMAND }}
          BAZEL_TARGETS: ${{ inputs.BAZEL_TARGETS }}
          BAZEL_CI_CONFIG: ${{ inputs.BAZEL_CI_CONFIG }}
          BAZEL_EXTRA_ARGS: "${{ inputs.BAZEL_EXTRA_ARGS }} ${{ inputs.BAZEL_EXTRA_ARGS_RULES }}"
          BAZEL_STARTUP_ARGS: ${{ inputs.BAZEL_STARTUP_ARGS }}
          RUN_ON_DIFF_ONLY: ${{ inputs.RUN_ON_DIFF_ONLY }}
          HONEYCOMB_API_TOKEN: ${{ inputs.HONEYCOMB_API_TOKEN }}
          SSH_PRIVATE_KEY: ${{ inputs.SSH_PRIVATE_KEY }}

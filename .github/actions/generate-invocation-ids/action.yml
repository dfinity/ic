name: 'Generate invocation IDs for bazel'
description: |
    An action for generating uuids for bazel invocations in to provider easier way to find the
    links to BuildBuddy.

inputs:
  targets:
    description: |
      YAML list of targets to generate UUIDs for. Each item must have:
        name: display name (e.g. Build, Test)
        output_id: GitHub Actions output variable
      Example:
        - name: Build
          output_id: build_id
        - name: Test
          output_id: test_id
    required: true

outputs: {}

runs:
  using: "composite"
  steps:
    - name: Generate Bazel invocation IDs
      id: gen-uuids
      shell: bash
      run: |
        set -euo pipefail

        targets="${{ inputs.targets }}"

        # panic if empty
        if [[ -z "$targets" ]]; then
          echo "Error: 'targets' input must contain at least one target" >&2
          exit 1
        fi

        # TODO: find a way to programatically get bes upload url
        build_buddy="https://dash.idx.dfinity.network"
        invocations_base="$build_buddy/invocation"


        # initialize summary table
        summary="### Bazel Invocation IDs\n\n"
        summary+="_These links may not be immediately available; invocation details will eventually populate once the build/test completes._\n\n"
        summary+="| Job type | Invocation ID | Link |\n"
        summary+="|----------|---------------|------|\n"

        # parse YAML and generate UUIDs
        echo "$targets" | yq -r '.[] | [.name, .output_id] | @tsv' | while IFS=$'\t' read -r name output_id; do
          uuid=$(uuidgen)
          echo "$output_id=$uuid" >> "$GITHUB_OUTPUT"
          link="$invocations_base/$uuid"
          summary+="| $name | \`$uuid\` | [BuildBuddy link to $uuid]($link) |\n"
        done

        # write summary
        echo -e "$summary" >> "$GITHUB_STEP_SUMMARY"

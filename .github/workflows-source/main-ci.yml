name: Main CI

on:
  # Todo: re-enable once github runner resources have been set
  # push:
  merge_group:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:

# runs for the same workflow are cancelled on PRs but not on master
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref && github.ref || github.run_id }}
  cancel-in-progress: true

env:
  CI_COMMIT_SHA: ${{ github.sha }}
  CI_COMMIT_REF_PROTECTED: ${{ github.ref_protected }}
  CI_JOB_NAME: ${{ github.job }}
  CI_JOB_ID: ${{ github.job }} # github does not expose this variable https://github.com/orgs/community/discussions/8945
  CI_JOB_URL: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
  CI_PIPELINE_SOURCE: ${{ github.event_name }}
  CI_PROJECT_DIR: ${{ github.workspace }}
  CI_MERGE_REQUEST_TARGET_BRANCH_NAME: ${{ github.event.pull_request.base.ref }}
  ROOT_PIPELINE_ID: ${{ github.run_id }}
  BAZEL_STARTUP_ARGS: "--output_base=/var/tmp/bazel-output/"
  RUSTFLAGS: "--remap-path-prefix=${CI_PROJECT_DIR}=/ic"
  AWS_SHARED_CREDENTIALS_CONTENT: ${{ secrets.AWS_SHARED_CREDENTIALS_FILE }}

anchors:
  image: &image
      image: dfinity/ic-build:e95ed63e9addda1b335c50fde800a8d9f0aad91a0d0cbe7da2fa782dc6ac1d4c
  bazel-large-setup: &bazel-large-setup
    runs-on:
      labels: bazel-runner-large
    container:
      <<: *image
    timeout-minutes: 90
    if: ${{ vars.RUN_CI == 'true' }} # needed to avoid running on public dfinity org until published
  bazel-small-setup: &bazel-small-setup
    runs-on:
      labels: bazel-runner-small
    container:
      <<: *image
    timeout-minutes: 30
    if: ${{ vars.RUN_CI == 'true' }}
  default-setup: &default-setup
    runs-on:
      labels: default-runner
    container:
      <<: *image
    timeout-minutes: 30
    if: ${{ vars.RUN_CI == 'true' }}v
  checkout: &checkout
    name: Checkout
    uses: actions/checkout@v4

jobs:
  bazel-test-all: 
    name: Bazel-Test-All
    <<: *bazel-large-setup
    steps:
      - <<: *checkout
        uses: actions/checkout@v3 # v4 does not work with bazel-runner-large
        if : ${{ github.event_name == 'pull_request' }}
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
      - <<: *checkout
        uses: actions/checkout@v3
        if : ${{ github.event_name != 'pull_request' }}
      - name: Run Bazel Test All
        id: bazel-test-all
        uses:  ./.github/actions/bazel-test-all/
        with:
          BAZEL_COMMAND: "test"
          BAZEL_TARGETS: "//... --deleted_packages=gitlab-ci/src/gitlab_config"
          BAZEL_CI_CONFIG: "--config=ci --repository_cache=/cache/bazel"
          # check if PR title contains release and set timeout filters accordingly
          BAZEL_EXTRA_ARGS_RULES: ${{ contains(github.event.pull_request.title, 'release') && '--test_timeout_filters=short,moderate' || '' }}
          BAZEL_EXTRA_ARGS: "--keep_going --verbose_failures"
          # run on diff only if it is a pull request, otherwise run all targets
          RUN_ON_DIFF_ONLY: ${{ contains(github.event_name, 'pull_request') && 'true' || 'false'}}
      - name: After script
        run: |
          bazel clean
      # - name: Upload Bazel artifacts
      #   uses: actions/upload-artifact@v3
      #   if: success() || failure() # don't run if CI job is cancelled
      #   with:
      #     name: bazel-artifacts
      #     retention-days: 2
      #     if-no-files-found: ignore
      #     compression-level: 7
      #     path: |
      #       bazel-build-log*.json*
      #       bazel-bep.pb
      #       bazel-testlogs/**/test.xml


  bazel-build-fuzzers:
    name: Bazel-Build-Fuzzers
    <<: *bazel-small-setup
    steps:
      - <<: *checkout
      - name: Run Bazel Build Fuzzers
        id: bazel-build-fuzzers
        uses:  ./.github/actions/bazel-test-all/
        with:
          BAZEL_COMMAND: "build"
          BAZEL_TARGETS: "//rs/..."
          BAZEL_CI_CONFIG: "--config=ci"
          BAZEL_EXTRA_ARGS: "--keep_going --config=fuzzing --build_tag_filters=libfuzzer"

  bazel-build-fuzzers-afl:
    name: Bazel-Build-Fuzzers-AFL
    <<: *bazel-small-setup
    steps:
      - <<: *checkout
      - name: Run Bazel Build Fuzzers AFL
        id: bazel-build-fuzzers-afl
        uses:  ./.github/actions/bazel-test-all/
        with:
          BAZEL_COMMAND: "build"
          BAZEL_TARGETS: "//rs/..."
          BAZEL_CI_CONFIG: "--config=ci"
          BAZEL_EXTRA_ARGS: "--keep_going --config=afl"

  python-ci-tests:
    name: Python-CI-Tests
    <<: *default-setup
    steps:
      - <<: *checkout
      - name: Run Python CI Tests
        id: python-ci-tests
        shell: bash
        run: |
          set -xeuo pipefail
          export PYTHONPATH=$PWD/gitlab-ci/src:$PWD/gitlab-ci/src/dependencies:$PYTHONPATH
          pip3 install --ignore-installed -r requirements.txt
          cd gitlab-ci/src
          pytest --ignore=gitlab_config/ --ignore=git_changes/ -v -o junit_family=xunit1 --junitxml=../../test_report.xml --cov=. --cov-report=term --cov-report=term-missing --cov-report=html --cov-branch

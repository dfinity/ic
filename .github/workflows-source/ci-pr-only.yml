name: CI PR Only
# Jobs that run on PRs, but no other pipelines

on:
  merge_group:
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  # only triggered on PR, so head_ref will always be set
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true
env:
  CI_PROJECT_DIR: ${{ github.workspace }}
  MERGE_BRANCH: ${{ github.event.pull_request.base.ref }}
  ORG: ${{ github.repository_owner }}

anchors:
  image: &image
    image: ghcr.io/dfinity/ic-build@sha256:d8f7308e97e095a9c9b0cdb1b6f260f459424e3792ebd49bb7c6ff6098941a34
  container: &container
    container:
      <<: *image
      options: >-
        -e NODE_NAME
  dind-small-setup: &dind-small-setup
    timeout-minutes: 30
    runs-on:
      labels: dind-small
    <<: *container
  dind-large-setup: &dind-large-setup
    timeout-minutes: 90
    runs-on:
      labels: dind-large
    <<: *container
  checkout: &checkout
    name: Checkout
    uses: actions/checkout@v4
  skip-merge-group: &skip-merge-group
    if: ${{ github.event_name != 'merge_group' && github.event.pull_request.head.repo.full_name == github.repository }}

jobs:
  insta-tests:
    name: Quick Feedback Tests
    <<: *dind-small-setup
    <<: *skip-merge-group
    steps:
      - <<: *checkout
      - name: Run insta-tests
        uses: ./.github/actions/bazel
        with:
          run: bazel test //:insta_tests
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

  bazel-build-fuzzers-archives:
    name: Bazel Build Fuzzers Archives
    <<: *dind-large-setup
    <<: *skip-merge-group
    steps:
      - <<: *checkout
      - name: Filter Relevant Files
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3
        id: filter
        with:
          filters: |
            fuzzers:
              - '.github/workflows/ci-pr-only.yml'
              - 'bin/fuzzing/build-all-fuzzers.sh'
              - 'bazel/fuzz_testing.bzl'
      - name: Run Bazel Build Fuzzers Archives
        id: bazel-build-fuzzers-archives
        if: steps.filter.outputs.fuzzers == 'true'
        shell: bash
        run: |
          set -euo pipefail
          cd "${GITHUB_WORKSPACE}"/bin/fuzzing/
          ./build-all-fuzzers.sh --zip

  lock-generate:
    name: Lock Generate
    <<: *dind-small-setup
    <<: *skip-merge-group
    env:
      CI_EVENT_NAME: ${{ github.event_name }}
    steps:
      - name: Filter Relevant Files
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3
        id: filter
        with:
          filters: |
            lock-generate:
              - '.github/workflows/ci-pr-only.yml'
              - '.bazelrc'
              - '.bazelversion'
              - '**/*.bazel'
              - '**/*.bzl'
              - '**/*.lock'
              - '**/*.rs'
              - '**/*.toml'
      - name: Create GitHub App Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.PR_CREATION_BOT_APP_ID }}
          private-key: ${{ secrets.PR_CREATION_BOT_PRIVATE_KEY }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ steps.app-token.outputs.token }}
      - name: Run Lock Generate
        id: lock-generate
        if: steps.filter.outputs.lock-generate == 'true'
        run: ./ci/scripts/lock-generate.sh

  generate-config-fixtures:
    name: Generate Config Fixtures
    <<: *dind-small-setup
    <<: *skip-merge-group
    timeout-minutes: 5
    env:
      CI_EVENT_NAME: ${{ github.event_name }}
    steps:
      - name: Filter Relevant Files
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3
        id: filter
        with:
          filters: |
            generate-config-fixtures:
              - 'rs/ic_os/config_types/**'
      - name: Create GitHub App Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.PR_CREATION_BOT_APP_ID }}
          private-key: ${{ secrets.PR_CREATION_BOT_PRIVATE_KEY }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ steps.app-token.outputs.token }}
      - name: Run Generate Config Fixtures
        id: generate-config-fixtures
        if: steps.filter.outputs.generate-config-fixtures == 'true'
        run: ./ci/scripts/generate-config-fixtures.sh

  # CI job is also executed in Schedule Hourly
  bazel-test-coverage:
    name: Bazel Test Coverage
    <<: *dind-large-setup
    <<: *skip-merge-group
    if: contains(github.event.pull_request.labels.*.name, 'CI_COVERAGE')
    permissions:
      contents: read
      pull-requests: read
    steps:
      - <<: *checkout
      - name: Run Bazel Test Coverage
        shell: bash
        run: |
          ./ci/scripts/bazel-coverage.sh
      - name: Upload bazel-coverage
        uses: actions/upload-artifact@v4
        with:
          name: bazel-coverage
          retention-days: 1
          if-no-files-found: ignore
          compression-level: 9
          path: |
            cov_html.zip

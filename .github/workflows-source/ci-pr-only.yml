name: CI PR Only
# Jobs that run on PRs, but no other pipelines

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions: read-all

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref && github.ref || github.run_id }}
  cancel-in-progress: true
env:
  CI_MERGE_REQUEST_TITLE: ${{ github.event.pull_request.title }}
  CI_PIPELINE_SOURCE: ${{ github.event_name }}
  CI_PROJECT_DIR: ${{ github.workspace }}
  ORG: ${{ github.repository_owner }}

anchors:
  image: &image
      image: ghcr.io/dfinity/ic-build@sha256:eb85228ebf7511e2589f86788345eb3d1c8144914a8a2fa771d4347ddacac413
  dind-small-setup: &dind-small-setup
    runs-on:
      labels: dind-runner-small
    container:
      <<: *image
    timeout-minutes: 30
    if: ${{ vars.RUN_CI == 'true' }}
  dind-large-setup: &dind-large-setup
    runs-on:
      labels: dind-runner-large
      group: ln1
    container:
      <<: *image
    timeout-minutes: 60
    if: ${{ vars.RUN_CI == 'true' }}
  bazel-small-setup: &bazel-small-setup
    runs-on:
      labels: bazel-runner-small
    container:
      <<: *image
    timeout-minutes: 30
    if: ${{ vars.RUN_CI == 'true' }}
  default-setup: &default-setup
    runs-on:
      labels: default-runner
    container:
      <<: *image
    timeout-minutes: 30
    if: ${{ vars.RUN_CI == 'true' }}
  checkout: &checkout
    name: Checkout
    uses: actions/checkout@v4
  before-script: &before-script
    name: Before script
    if: always()
    id: before-script
    shell: bash
    run: |
      git config --global http.postBuffer 524288000
      git config --global safe.directory '*'
      if [ -e /__w/cache ]; then sudo ln -s /__w/cache /; fi
      if [ -n "${NODE_NAME:-}" ]; then echo "Node: $NODE_NAME"; fi
  bazel-clean: &bazel-clean
    name: Bazel Clean
    if: always()
    run: bazel clean

jobs:
  bazel-build-fuzzers-archives:
    name: Bazel Build Fuzzers Archives
    <<: *dind-large-setup
    steps:
      - <<: *before-script
      - <<: *checkout
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3
        name: Filter Relevant Files
        id: filter
        with:
          filters: |
            fuzzers:
              - '.github/workflows/pr-only.yml'
              - 'bin/build-all-fuzzers.sh'
              - 'bazel/fuzz_testing.bzl'
      - name: Run Bazel Build Fuzzers Archives
        id: bazel-build-fuzzers-archives
        if: steps.filter.outputs.fuzzers == 'true'
        shell: bash
        run: |
          set -euo pipefail
          cd "${GITHUB_WORKSPACE}"/bin
          ./build-all-fuzzers.sh --zip
      - name: No run
        if: steps.filter.outputs.fuzzers == 'false'
        run: echo "No changes in fuzzers, skipping build"
      - <<: *bazel-clean

  lock-generate:
    name: Lock Generate
    <<: *dind-small-setup
    steps:
      - <<: *before-script
      - <<: *checkout
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3
        name: Filter Relevant Files
        id: filter
        with:
          filters: |
            lock-generate:
              - '.github/workflows/pr-only.yml'
              - '.bazelrc'
              - '.bazelversion'
              - '**/*.bazel'
              - '**/*.bzl'
              - '**/*.lock'
              - '**/*.rs'
              - '**/*.toml'
      - name: Run Lock Generate
        id: lock-generate
        if: steps.filter.outputs.lock-generate == 'true'
        run: ./gitlab-ci/src/ci-scripts/lock-generate.sh
      - name: No run
        if: steps.filter.outputs.lock-generate == 'false'
        run: echo "No changes in lock-generate, skipping run"

  pre-commit:
    name: Pre Commit Test
    <<: *dind-small-setup
    steps:
      - <<: *before-script
      - <<: *checkout
        with:
          fetch-depth: 256
      - name: Pre-Commit
        id: pre-commit
        shell: bash
        run: ./gitlab-ci/src/ci-scripts/pre-commit.sh

  # Todo: remove when migration complete
  change-base-branch:
    name: Change Base Branch
    runs-on: ubuntu-latest
    steps:
      - <<: *checkout

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Run script
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python $CI_PROJECT_DIR/.github/scripts/change-base-branch.py
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.IDX_PUSH_TO_PR }}

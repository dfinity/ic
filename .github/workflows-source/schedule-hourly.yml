name: Schedule Hourly

on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:

env:
  CI_COMMIT_SHA: ${{ github.sha }}
  CI_COMMIT_REF_PROTECTED: ${{ github.ref_protected }}
  CI_JOB_NAME: ${{ github.job }}
  CI_JOB_ID: ${{ github.job }} # github does not expose this variable https://github.com/orgs/community/discussions/8945
  CI_JOB_URL: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
  CI_PIPELINE_SOURCE: ${{ github.event_name }}
  CI_PROJECT_DIR: ${{ github.workspace }}
  CI_PULL_REQUEST_TARGET_BRANCH_NAME: ${{ github.event.pull_request.base.ref }}
  ROOT_PIPELINE_ID: ${{ github.run_id }}
  RUSTFLAGS: "--remap-path-prefix=${CI_PROJECT_DIR}=/ic"
  BUILDEVENT_DATASET: "github-ci-dfinity"

anchors:
  image: &image
    image: ghcr.io/dfinity/ic-build@sha256:1c0e901df3c7a97fc440c271881400ce6d2e586e2a89cdc39ec939e3dfe5de76
  dind-large-setup: &dind-large-setup
    runs-on:
      labels: dind-large
    container:
      <<: *image
      options: >-
        -e NODE_NAME
        --privileged --cgroupns host
        -v /cache:/cache -v /var/sysimage:/var/sysimage -v /var/tmp:/var/tmp
    timeout-minutes: 120
  checkout: &checkout
    name: Checkout
    uses: actions/checkout@v4
  before-script: &before-script
    name: Before script
    id: before-script
    shell: bash
    run: |
      [ -n "${NODE_NAME:-}" ] && echo "Node: $NODE_NAME"
  docker-login: &docker-login
    name: Login to Dockerhub
    shell: bash
    run: ./ci/scripts/docker-login.sh
    env:
      DOCKER_HUB_USER: ${{ vars.DOCKER_HUB_USER }}
      DOCKER_HUB_PASSWORD_RO: ${{ secrets.DOCKER_HUB_PASSWORD_RO }}

jobs:
  bazel-build-all-no-cache:
    name: Bazel Build All No Cache
    <<: *dind-large-setup
    steps:
      - <<: *checkout
      - <<: *before-script
      - <<: *docker-login
      - name: Run Bazel Build All No Cache
        uses:  ./.github/actions/bazel-test-all/
        env:
          AWS_SHARED_CREDENTIALS_CONTENT: ${{ secrets.AWS_SHARED_CREDENTIALS_FILE }}
        with:
          BAZEL_CI_CONFIG: "--config=ci"
          BAZEL_COMMAND: "build"
          BAZEL_EXTRA_ARGS: "--repository_cache= --disk_cache= --noremote_accept_cached --remote_instance_name=${CI_COMMIT_SHA} --@rules_rust//rust/settings:pipelined_compilation=True"
      - name: Upload bazel-bep
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}-bep
          retention-days: 14
          if-no-files-found: ignore
          compression-level: 9
          path: bazel-bep.pb

  bazel-system-test-hourly:
    name: Bazel System Tests Hourly
    <<: *dind-large-setup
    runs-on:
      group: zh1
      labels: dind-large
    steps:
      - <<: *checkout
      - <<: *before-script
      - <<: *docker-login
      - name: Run Bazel System Test Hourly
        id: bazel-test-all
        uses:  ./.github/actions/bazel-test-all/
        with:
          BAZEL_COMMAND: "test"
          BAZEL_TARGETS: "//rs/..."
          BAZEL_CI_CONFIG: "--config=ci --repository_cache=/cache/bazel"
          BAZEL_EXTRA_ARGS: "--keep_going --test_tag_filters=system_test_hourly"
          HONEYCOMB_API_TOKEN: ${{ secrets.HONEYCOMB_API_TOKEN }}
      - name: Upload bazel-bep
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}-bep
          retention-days: 14
          if-no-files-found: ignore
          compression-level: 9
          path: |
            bazel-bep.pb
            profile.json

  bazel-test-coverage:
    name: Bazel Test Coverage
    <<: *dind-large-setup
    steps:
      - <<: *checkout
      - <<: *before-script
      - name: Run Bazel Test Coverage
        shell: bash
        run: |
          set -eExuo pipefail
          bazel query --universe_scope=//... \
            "kind(test, //rs/...) except kind(test, allrdeps(attr('tags', 'canister', //rs/...)))" \
            > cov_targets.txt
          # shellcheck disable=SC2046,SC2086
          bazel ${BAZEL_STARTUP_ARGS} coverage ${BAZEL_CI_CONFIG} ${BAZEL_EXTRA_ARGS} --test_timeout=3000 \
              --combined_report=lcov $(<cov_targets.txt) || true
          cp bazel-out/_coverage/_coverage_report.dat cov_report.dat
          genhtml --output cov_html cov_report.dat
        env:
          BAZEL_CI_CONFIG: "--config=ci --repository_cache=/cache/bazel"
          BAZEL_EXTRA_ARGS: "--combined_report=lcov"
      # TODO: publish coverage to github pages
      - name: Upload Test Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          compression-level: 9
          # TODO: change to 7 before migration
          retention-days: 1
          if-no-files-found: error
          path: |
            cov_targets.txt
            cov_report.dat
            cov_html/

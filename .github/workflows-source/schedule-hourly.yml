name: Schedule Hourly

on:
  schedule:
    - cron: "0 7-23 * * *"
  workflow_dispatch:

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
  CI_COMMIT_SHA: ${{ github.sha }}
  CI_JOB_NAME: ${{ github.job }}
  CI_PROJECT_DIR: ${{ github.workspace }}
  CI_RUN_ID: ${{ github.run_id }}
  BUILDEVENT_DATASET: "github-ci-dfinity"

anchors:
  image: &image
    image: ghcr.io/dfinity/ic-build@sha256:908c9b2abe0647cd54a2485117c263b0dae4a8aba8f25bc073813b09be9b1d59
  dind-large-setup: &dind-large-setup
    runs-on:
      labels: dind-large
    container:
      <<: *image
      options: >-
        -e NODE_NAME
        --privileged --cgroupns host
        -v /cache:/cache -v /var/sysimage:/var/sysimage -v /var/tmp:/var/tmp
    timeout-minutes: 120
  checkout: &checkout
    name: Checkout
    uses: actions/checkout@v4
  bazel-bep: &bazel-bep
    name: Upload bazel-bep
    # runs only if previous step succeeded or failed;
    # we avoid collecting artifacts of jobs that were cancelled
    if: success() || failure()
    uses: actions/upload-artifact@v4
    with:
      name: ${{ github.job }}-bep
      retention-days: 14
      if-no-files-found: ignore
      compression-level: 9
      path: |
        bazel-bep.pb.gpg
        profile.json

jobs:
  bazel-build-all-no-cache:
    name: Bazel Build All No Cache
    <<: *dind-large-setup
    steps:
      - <<: *checkout
      - name: Run Bazel Build All No Cache
        uses:  ./.github/actions/bazel-test-all/
        env:
          CLOUD_CREDENTIALS_CONTENT: ${{ secrets.CLOUD_CREDENTIALS_CONTENT }}
        with:
          # --config=release is required for the BNs as they rely for both dev and prod deployment
          # on images being uploaded to the S3 bucket
          BAZEL_COMMAND: >-
            build
              --config=ci --config=release
              --repository_cache= --disk_cache= --noremote_accept_cached --remote_instance_name=${CI_COMMIT_SHA} --@rules_rust//rust/settings:pipelined_compilation=True
          BAZEL_TARGETS: //...
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      - <<: *bazel-bep

  bazel-system-test-hourly:
    name: Bazel System Tests Hourly
    <<: *dind-large-setup
    runs-on:
      group: zh1
      labels: dind-large
    steps:
      - <<: *checkout
      - name: Run Bazel System Test Hourly
        id: bazel-test-all
        uses:  ./.github/actions/bazel-test-all/
        with:
          # --config=release is required for the BNs as they rely for both dev and prod deployment
          # on images being uploaded to the S3 bucket
          BAZEL_COMMAND: >-
            test --config=ci --config=release --keep_going --test_tag_filters=system_test_hourly
          BAZEL_TARGETS: //rs/...
          BUILDEVENT_APIKEY: ${{ secrets.HONEYCOMB_TOKEN }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      - <<: *bazel-bep

  bazel-run-fuzzers-hourly:
    name: Bazel Run Fuzzers Hourly
    <<: *dind-large-setup
    steps:
      - <<: *checkout
      - name: Run Libfuzzer targets
        shell: bash
        run: ./bin/run-all-fuzzers.sh --libfuzzer 100
      - name: Run AFL targets
        shell: bash
        run: ./bin/run-all-fuzzers.sh --afl 100
      - name: Post Slack Notification
        uses: slackapi/slack-github-action@6c661ce58804a1a20f6dc5fbee7f0381b469e001 # v1.25.0
        if: failure()
        with:
          channel-id: prodsec-fuzzing
          slack-message: "${{ github.job }} failed :disappointed: - <${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}|Run#${{github.run_id}}>"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_API_TOKEN }}

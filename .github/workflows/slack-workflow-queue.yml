name: Schedule Wait Queue Check

on:
  pull_request:
  schedule:
    - cron: "*/5 * * * *"

jobs:
  check-queue:
    name: Check Workflow Wait Queue
    runs-on: ubuntu-latest

    steps:
      - name: Check for workflows in wait queue
        id: check
        shell: bash
        run: |
          # set -euo pipefail

          GITHUB_API_URL="https://api.github.com/repos/${{ github.repository }}/actions/runs"
          WAIT_THRESHOLD_MINUTES=0
          WAIT_THRESHOLD_SECONDS=$((WAIT_THRESHOLD_MINUTES * 60))
          # Fetch workflow runs
          workflow_runs=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" $GITHUB_API_URL)
          # Check for queued workflows
          current_time=$(date +%s)
          workflows_in_queue=$(echo $workflow_runs | jq -r '.workflow_runs[] | select(.status == "queued") | {id: .id, run_started_at: .run_started_at}')

          set -x
          notification_message=""
          for workflow in $(echo "${workflows_in_queue}" | jq -r '.id'); do
            run_started_at=$(echo "${workflows_in_queue}" | jq -r "select(.id == ${workflow}) | .run_started_at")
            run_started_time=$(date -d "$run_started_at" +%s)
            time_in_queue=$((current_time - run_started_time))

            if [ $time_in_queue -ge $WAIT_THRESHOLD_SECONDS ]; then
              workflow_url="https://github.com/${{ github.repository }}/actions/runs/${workflow}"
              notification_message="${notification_message}\nWorkflow [Run#${workflow}](${workflow_url}) in wait queue more than ${WAIT_THRESHOLD_MINUTES} minutes."
            fi
          done
          #echo "message=${MESSAGE}" >> $GITHUB_OUTPUT
          echo "message=${notification_message}" >> $GITHUB_OUTPUT

      - name: Post Slack Notification
        uses: slackapi/slack-github-action@6c661ce58804a1a20f6dc5fbee7f0381b469e001 # v1.25.0
        if: steps.check.outputs.message != ''
        with:
          channel-id: markos-void
          slack-message: "${{ steps.setup.outputs.message }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_API_TOKEN }}

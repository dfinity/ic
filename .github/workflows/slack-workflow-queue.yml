name: Schedule Wait Queue Check

on:
  schedule:
    - cron: "*/5 * * * *"

jobs:
  check-queue:
    runs-on: ubuntu-latest

    steps:
      - name: Check for workflows in wait queue
        id: check
        run: |
          GITHUB_API_URL="https://api.github.com/repos/${{ github.repository }}/actions/runs"
          WAIT_THRESHOLD_MINUTES=0 # TODO: change to 5
          WAIT_THRESHOLD_SECONDS=$((WAIT_THRESHOLD_MINUTES * 60))

          # Fetch workflow runs
          WORKFLOW_RUNS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" $GITHUB_API_URL)

          # Check for queued workflows
          CURRENT_TIME=$(date +%s)
          WORKFLOWS_IN_QUEUE=$(echo $WORKFLOW_RUNS | jq -r '.WORKFLOW_RUNS[] | select(.status == "queued") | {id: .id, run_started_at: .run_started_at}')

          MESSAGE=""
          for WORKFLOW in $(echo "${WORKFLOWS_IN_QUEUE}" | jq -r '.id'); do
            RUN_STARTED_AT=$(echo "${WORKFLOWS_IN_QUEUE}" | jq -r "select(.id == ${WORKFLOW}) | .run_started_at")
            RUN_STARTED_TIME=$(date -d "$RUN_STARTED_AT" +%s)
            TIME_IN_QUEUE=$((CURRENT_TIME - RUN_STARTED_TIME))

            if [ $TIME_IN_QUEUE -ge $WAIT_THRESHOLD_SECONDS ]; then
              WORKFLOW_URL="https://github.com/${{ github.repository }}/actions/runs/${WORKFLOW}"
              MESSAGE="${MESSAGE}\nWorkflow [Run#${WORKFLOW}](${WORKFLOW_URL) in wait queue more than ${WAIT_THRESHOLD_MINUTES} minutes."
            fi
          done
          echo "message=${MESSAGE}" >> $GITHUB_OUTPUT

      - name: Post Slack Notification
        uses: slackapi/slack-github-action@6c661ce58804a1a20f6dc5fbee7f0381b469e001 # v1.25.0
        if: steps.check.outputs.message != ''
        with:
          channel-id: markos-void
          slack-message: "${{ steps.setup.outputs.message }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_API_TOKEN }}

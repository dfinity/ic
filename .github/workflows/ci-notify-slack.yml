name: PR Slack Notification

on:
  pull_request:
    types: [ready_for_review]

jobs:
  notify-slack:
    name: Notify Slack
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get requested team reviewers
        id: get-reviewers
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo, number: issue_number } = context.issue;
            const team_reviewers = context.payload.pull_request.requested_teams.map(team => team.name);
            return team_reviewers;
      - name: Lookup Slack channel
        id: lookup
        run: |
          TEAM_REVIEWERS=$(echo '${{ steps.get-reviewers.outputs.result }}' | jq -c '.[]')
          CHANNELS=""
          for TEAM in $TEAM_REVIEWERS; do
            CHANNEL=$(jq -r ".$TEAM" .github/workflows/team-channels.json)
            if [ "$CHANNEL" != "null" ]; then
              if [ -z "$CHANNELS" ]; then
                CHANNELS="$CHANNEL"
              else
                CHANNELS="$CHANNELS,$CHANNEL"
              fi
            fi
          done
          echo "channels=${CHANNELS}" >> $GITHUB_OUTPUT
          echo "message=${MESSAGE}" >> $GITHUB_OUTPUT
        env:
          MESSAGE: ":github: <${{ github.event.pull_request.html_url }}|${{ github.event.pull_request.title }}>"
      - name: Post to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: ${{ steps.lookup.outputs.channels }}
          slack-message: "${{ steps.lookup.outputs.message }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_API_TOKEN }}

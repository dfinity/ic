name: Schedule Daily

on:
  schedule:
    - cron: "0 1 * * *"
  workflow_dispatch:

env:
  AWS_SHARED_CREDENTIALS_CONTENT: ${{ secrets.AWS_SHARED_CREDENTIALS_FILE }}
  BAZEL_STARTUP_ARGS: "--output_base=/var/tmp/bazel-output/"
  CI_COMMIT_SHA: ${{ github.sha }}
  CI_COMMIT_REF_PROTECTED: ${{ github.ref_protected }}
  CI_JOB_NAME: ${{ github.job }}
  CI_JOB_ID: ${{ github.job }} # github does not expose this variable https://github.com/orgs/community/discussions/8945
  CI_JOB_URL: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
  CI_PIPELINE_SOURCE: ${{ github.event_name }}
  CI_PROJECT_DIR: ${{ github.workspace }}
  CI_MERGE_REQUEST_TARGET_BRANCH_NAME: ${{ github.event.pull_request.base.ref }}
  ROOT_PIPELINE_ID: ${{ github.run_id }}

jobs:
  # TODO: there was some issue with this job so commented out for now:
  #
  # rust-benchmarks:
  #   runs-on:
  #     labels: bazel-runner-large
  #   container:
  #     image: ghcr.io/dfinity-sandbox/ic-build@sha256:994f76fcc90400ec9f8be3d540bd529ff1b3768b7f7f6963887022c57ec1ab24
  #   timeout-minutes: 720 # 12 hours
  #   if: ${{ vars.RUN_CI == 'true' }}
  #   strategy:
  #     matrix:
  #       targets: ["//rs/crypto/...", "//rs/state_manager/..."]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Run Rust Benchmarks
  #       id: rust-benchmarks
  #       shell: bash
  #       run: |
  #         ./gitlab-ci/src/ci-scripts/rust-benchmarks.sh
  #       env:
  #         BAZEL_CI_CONFIG: "--config=ci --repository_cache=/cache/bazel"
  #         BAZEL_COMMAND: "run"
  #         BAZEL_STARTUP_ARGS: "--output_base=/var/tmp/bazel-output/"
  #         RUSTFLAGS: "--remap-path-prefix=${CI_PROJECT_DIR}=/ic"
  #         RUST_BACKTRACE: "full"
  #         TARGETS: ${{ matrix.targets }}

  cut-release-candidate:
    name: Cut RC
    runs-on:
      labels: bazel-runner-small
    container:
      image: ghcr.io/dfinity-sandbox/ic-build@sha256:994f76fcc90400ec9f8be3d540bd529ff1b3768b7f7f6963887022c57ec1ab24
    timeout-minutes: 30
    if: ${{ vars.RUN_CI == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.PUSH_TO_PR }}
      - name: Cut Release Candidate
        shell: bash
        run: |
          git config --global user.email "infra+github-automation@dfinity.org"
          git config --global user.name "IDX GitLab Automation"

          RC_BRANCH_NAME="rc--$(date '+%Y-%m-%d_%H-%M')--github"
          git switch --force-create "$RC_BRANCH_NAME" HEAD
          git push --force --set-upstream origin "$RC_BRANCH_NAME"

  bazel-test-bare-metal:
    name: Bazel Test Bare Metal
    runs-on:
      labels: bazel-runner-large
      group: zh1
    container:
      image: ghcr.io/dfinity-sandbox/ic-build@sha256:994f76fcc90400ec9f8be3d540bd529ff1b3768b7f7f6963887022c57ec1ab24
    timeout-minutes: 120
    if: ${{ vars.RUN_CI == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run Bazel Launch Bare Metal
        shell: bash
        run: |
          echo "$ZH2_DLL01_CSV_SECRETS" > file1
          echo "$ZH2_FILE_SHARE_KEY" > file2 && chmod 400 file2
          # shellcheck disable=SC2046,SC2086
          bazel ${BAZEL_STARTUP_ARGS} run ${BAZEL_CI_CONFIG} \
            //ic-os/setupos/envs/dev:launch_bare_metal -- \
              --config_path "$(realpath  ./ic-os/utils/bare_metal_deployment/zh2-dll01.yaml)" \
              --csv_filename "$(realpath file1)" \
              --file_share_ssh_key "$(realpath file2)" \
              --file_share_username ci_interim \
              --ci_mode
          bazel clean
        env:
          BAZEL_STARTUP_ARGS: "--output_base=/var/tmp/bazel-output/"
          BAZEL_CI_CONFIG: "--config=ci --repository_cache=/cache/bazel"
          ZH2_DLL01_CSV_SECRETS: "${{ secrets.ZH2_DLL01_CSV_SECRETS }}"
          ZH2_FILE_SHARE_KEY: "${{ secrets.ZH2_FILE_SHARE_KEY }}"

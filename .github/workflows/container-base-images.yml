# Workflow for building IC Base Container Images
# On master branch the images are pushed to DockerHub and references updated in automated PR

name: Container IC Base Images

on:
  # TODO: Enable prior to migration
  # schedule:
  #   - cron: "0 8 * * 4"
  workflow_dispatch:
  # TODO: Change to pull_request_target
  pull_request:
    paths:
      - '**/Dockerfile.base'
      - '**/packages.common'
      - '**/packages.dev'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref && github.ref || github.run_id }}
  cancel-in-progress: true

permissions:
  pull-requests: write
  contents: write

jobs:
  build-base-image:
    name: Build Base Container Image
    runs-on: ubuntu-latest
    timeout-minutes: 45
    if: ${{ vars.RUN_CI == 'true' }}
    strategy:
      matrix:
        include:
          - IMAGE: "guestos-base"
            CONTEXT: "ic-os/guestos/context"
            REFFILE: "ic-os/guestos/context/docker-base.prod"
            BUILD_ARGS: ""
          - IMAGE: "guestos-base-dev"
            CONTEXT: "ic-os/guestos/context"
            REFFILE: "ic-os/guestos/context/docker-base.dev"
            BUILD_ARGS: "PACKAGE_FILES=packages.common packages.dev"
          - IMAGE: "boundaryos-base"
            CONTEXT: "ic-os/boundary-guestos/context"
            REFFILE: "ic-os/boundary-guestos/context/docker-base.prod"
            BUILD_ARGS: ""
          - IMAGE: "hostos-base"
            CONTEXT: "ic-os/hostos/context"
            REFFILE: "ic-os/hostos/context/docker-base.prod"
            BUILD_ARGS: ""
          - IMAGE: "hostos-base-dev"
            CONTEXT: "ic-os/hostos/context"
            REFFILE: "ic-os/hostos/context/docker-base.dev"
            BUILD_ARGS: "PACKAGE_FILES=packages.common packages.dev"
          - IMAGE: "setupos-base"
            CONTEXT: "ic-os/setupos/context"
            REFFILE: "ic-os/setupos/context/docker-base.prod"
            BUILD_ARGS: ""
          - IMAGE: "setupos-base-dev"
            CONTEXT: "ic-os/setupos/context"
            REFFILE: "ic-os/setupos/context/docker-base.dev"
            BUILD_ARGS: "PACKAGE_FILES=packages.common packages.dev"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Current Date
        id: date
        run: echo "DATE=$(date '+%Y-%m-%d-%H')" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build Base Image
        uses: docker/build-push-action@v5
        id: build-base-image
        with:
          context: ${{ matrix.CONTEXT }}
          file: ${{ matrix.CONTEXT }}/Dockerfile.base
          push: ${{ github.ref_name == 'master' }}
          tags: dfinity/${{ matrix.IMAGE }}:${{ env.DATE }}
          build-args: ${{ matrix.BUILD_ARGS }}

      - name: Collect SHA256 Digest
        shell: bash
        run: |
          set -xeuo pipefail
          mkdir -p "$(dirname artifacts/${{ matrix.REFFILE }})"
          echo docker.io/dfinity/${{matrix.IMAGE}}@${{ steps.build-base-image.outputs.imageid }} \
            > artifacts/${{ matrix.REFFILE }}

      - name: Upload SHA256 Digest Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sha256-${{ matrix.IMAGE }}
          path: artifacts
          retention-days: 1

  update-ref-files-pr:
    name: Update Reference Files PR
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [build-base-image]
    if: ${{ vars.RUN_CI == 'true' && github.ref_name == 'master' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Current Date
        id: date
        run: echo "DATE=$(date '+%Y-%m-%d-%H%M')" >> $GITHUB_ENV

      - name: Download SHA256 Digest Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: sha256-*
          merge-multiple: true

      - name: Update Base Image Refs
        shell: bash
        run: |
          set -xeuo pipefail
          find artifacts
          rsync -rv artifacts/ .
          rm -rf artifacts

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          # TODO: change to master prior to migration
          base: mirroring
          branch: base-image-refs-update-${{ env.DATE }}
          delete-branch: true
          title: Update Base Image Refs [${{ env.DATE }}]
          body: Updating base container image references.
          draft: true
